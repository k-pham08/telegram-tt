{"version":3,"file":"3041.d325bc7f1a564403aa9b.js","mappings":"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","sources":["webpack://telegram-t/./src/components/auth/AuthCode.tsx","webpack://telegram-t/./src/components/auth/AuthPassword.tsx","webpack://telegram-t/./src/components/auth/AuthRegister.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/components/ui/Portal.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/captureKeyboardListeners.ts","webpack://telegram-t/./src/util/directInputManager.ts","webpack://telegram-t/./src/util/stopEvent.ts"],"sourcesContent":["import type { FormEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, useCallback, memo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\nimport type { GlobalState } from '../../global/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { pick } from '../../util/iteratees';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport { fallbackLangPackInitial as langPack } from '../../util/fallbackLangPackInitial';\n\ntype StateProps = Pick<GlobalState, 'authPhoneNumber' | 'authIsCodeViaApp' | 'authIsLoading' | 'authError'>;\n\nconst CODE_LENGTH = 5;\n\nconst AuthCode: FC<StateProps> = ({\n  authPhoneNumber,\n  authIsLoading,\n  authError,\n}) => {\n  const {\n    setAuthCode,\n    returnToAuthPhoneNumber,\n    clearAuthError,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [code, setCode] = useState<string>('');\n  const [isTracking, setIsTracking] = useState(false);\n  const currentViewportHeight = useRef<number>(Number(window.visualViewport!.height));\n  const isFocused = useRef<boolean>(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n\n    inputRef.current!.addEventListener('focusin', (event) => {\n      if (!isFocused.current) {\n        // event.stopPropagation();\n        inputRef.current!.style.transform = 'TranslateY(-10000px)';\n        inputRef.current!.style.caretColor = 'transparent';\n        // inputRef.current!.focus();\n        setTimeout(() => {\n          inputRef.current!.style.transform = 'none';\n          const scrollPixel = containerRef.current!.clientHeight\n            - currentViewportHeight.current + (window?.numberKeyboardHeight ?? 0) / 1.15 + 10;\n\n          if (scrollPixel > 0) {\n            containerRef.current!.style.transform = `translateY(${-scrollPixel}px)`;\n            containerRef.current!.style.transition = 'transform 0.2s linear';\n          }\n          setTimeout(() => {\n            inputRef.current!.style.caretColor = '#8774E1';\n          }, 180);\n        }, 80);\n        isFocused.current = true;\n      }\n    });\n\n    inputRef.current!.addEventListener('blur', (_) => {\n      isFocused.current = false;\n      containerRef.current!.style.transform = 'translateY(0)';\n      containerRef.current!.style.transition = 'transform 0.2s linear';\n    });\n  }, []);\n\n  useHistoryBack({\n    isActive: true,\n    onBack: returnToAuthPhoneNumber,\n  });\n\n  const onCodeChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n\n    const { currentTarget: target } = e;\n    target.value = target.value.replace(/[^\\d]+/, '').substr(0, CODE_LENGTH);\n\n    if (target.value === code) {\n      return;\n    }\n\n    setCode(target.value);\n\n    if (!isTracking) {\n      setIsTracking(true);\n    } else if (!target.value.length) {\n      setIsTracking(false);\n    }\n\n    if (target.value.length === CODE_LENGTH) {\n      setAuthCode({ code: target.value });\n    }\n  }, [authError, clearAuthError, code, isTracking, setAuthCode]);\n\n  function handleReturnToAuthPhoneNumber() {\n    returnToAuthPhoneNumber();\n  }\n\n  return (\n    <div className=\"custom-wrapper\">\n      <div ref={containerRef} className=\"auth-form\">\n        <div id=\"logo\" />\n        <h1 className=\"flex center\">\n          {authPhoneNumber}\n          <div\n            className=\"auth-number-edit div-button\"\n            onClick={handleReturnToAuthPhoneNumber}\n            role=\"button\"\n            tabIndex={0}\n            title={lang('WrongNumber')}\n          >\n            <i className=\"icon icon-edit\" />\n          </div>\n        </h1>\n        <p className=\"note\">\n          {langPack.SentAppCode1.value} <br /> {langPack.SentAppCode2.value}\n        </p>\n        <div className=\"label\">\n          {langPack.EnterCode.value}\n        </div>\n        <InputText\n          ref={inputRef}\n          className=\"custom-input noMarginBottom\"\n          id=\"sign-in-code\"\n          placeholder={lang('5 digit verification code')}\n          onInput={onCodeChange}\n          value={code}\n          error={authError && lang(authError)}\n          autoComplete=\"off\"\n          inputMode=\"numeric\"\n          onLoading={authIsLoading}\n          loadingSize=\"medium\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authPhoneNumber', 'authIsCodeViaApp', 'authIsLoading', 'authError']),\n)(AuthCode));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport MonkeyPassword from '../common/PasswordMonkey';\nimport PasswordForm from '../common/PasswordForm';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError' | 'authHint'>;\n\nconst AuthPassword: FC<StateProps> = ({\n  authIsLoading, authError, authHint,\n}) => {\n  const { setAuthPassword, clearAuthError } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback((password: string) => {\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('Login.Header.Password')}</h1>\n        <p className=\"note\">{lang('Login.EnterPasswordDescription')}</p>\n        <PasswordForm\n          clearError={clearAuthError}\n          error={authError && lang(authError)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError', 'authHint']),\n)(AuthPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useState, memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport AvatarEditable from '../ui/AvatarEditable';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authError'>;\n\nconst AuthRegister: FC<StateProps> = ({\n  authIsLoading, authError,\n}) => {\n  const { signUp, clearAuthError, uploadProfilePhoto } = getActions();\n\n  const lang = useLang();\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [croppedFile, setCroppedFile] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleFirstNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authError) {\n      clearAuthError();\n    }\n\n    const { target } = event;\n\n    setFirstName(target.value);\n    setIsButtonShown(target.value.length > 0);\n  }, [authError, clearAuthError]);\n\n  const handleLastNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setLastName(target.value);\n  }, []);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    signUp({ firstName, lastName });\n\n    if (croppedFile) {\n      uploadProfilePhoto({ file: croppedFile });\n    }\n  }\n\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <AvatarEditable onChange={setCroppedFile} />\n          <h2>{lang('YourName')}</h2>\n          <p className=\"note\">{lang('Login.Register.Desc')}</p>\n          <InputText\n            id=\"registration-first-name\"\n            label={lang('Login.Register.FirstName.Placeholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={authError && lang(authError)}\n            autoComplete=\"given-name\"\n          />\n          <InputText\n            id=\"registration-last-name\"\n            label={lang('Login.Register.LastName.Placeholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n            autoComplete=\"family-name\"\n          />\n          {isButtonShown && (\n            <Button type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authError']),\n)(AuthRegister));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport useTimeout from '../../hooks/useTimeout';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  }, [onEnter]);\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { FC, VirtualElement } from '../../lib/teact/teact';\nimport { useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: VirtualElement;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef<HTMLDivElement>();\n  if (!elementRef.current) {\n    elementRef.current = document.createElement('div');\n  }\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current!;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import { useLayoutEffect, useRef } from '../lib/teact/teact';\n\nconst useLayoutEffectWithPrevDeps = <const T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDepsRef = useRef<T>();\n\n  return useLayoutEffect(() => {\n    const prevDeps = prevDepsRef.current;\n    prevDepsRef.current = dependencies;\n\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","type HandlerName =\n  'onEnter'\n  | 'onBackspace'\n  | 'onDelete'\n  | 'onEsc'\n  | 'onUp'\n  | 'onDown'\n  | 'onLeft'\n  | 'onRight'\n  | 'onTab';\ntype Handler = (e: KeyboardEvent) => void | boolean;\ntype CaptureOptions = Partial<Record<HandlerName, Handler>>;\n\nconst keyToHandlerName: Record<string, HandlerName> = {\n  Enter: 'onEnter',\n  Backspace: 'onBackspace',\n  Delete: 'onDelete',\n  Esc: 'onEsc',\n  Escape: 'onEsc',\n  ArrowUp: 'onUp',\n  ArrowDown: 'onDown',\n  ArrowLeft: 'onLeft',\n  ArrowRight: 'onRight',\n  Tab: 'onTab',\n};\n\nconst handlers: Record<HandlerName, Handler[]> = {\n  onEnter: [],\n  onDelete: [],\n  onBackspace: [],\n  onEsc: [],\n  onUp: [],\n  onDown: [],\n  onLeft: [],\n  onRight: [],\n  onTab: [],\n};\n\nexport default function captureKeyboardListeners(options: CaptureOptions) {\n  if (!hasActiveHandlers()) {\n    document.addEventListener('keydown', handleKeyDown, true);\n  }\n\n  (Object.keys(options) as Array<HandlerName>).forEach((handlerName) => {\n    const handler = options[handlerName];\n    if (!handler) {\n      return;\n    }\n\n    const currentEventHandlers = handlers[handlerName];\n    if (currentEventHandlers) {\n      currentEventHandlers.push(handler);\n    }\n  });\n\n  return () => {\n    releaseKeyboardListener(options);\n  };\n}\n\nfunction hasActiveHandlers() {\n  return Object.values(handlers).some((keyHandlers) => Boolean(keyHandlers.length));\n}\n\nfunction handleKeyDown(e: KeyboardEvent) {\n  const handlerName = keyToHandlerName[e.key];\n  if (!handlerName) {\n    return;\n  }\n\n  const { length } = handlers[handlerName];\n  if (!length) {\n    return;\n  }\n\n  for (let i = length - 1; i >= 0; i--) {\n    const handler = handlers[handlerName][i]!;\n    if (handler(e) !== false) {\n      e.stopPropagation();\n      break;\n    }\n  }\n}\n\nfunction releaseKeyboardListener(options: CaptureOptions) {\n  (Object.keys(options) as Array<HandlerName>).forEach((handlerName) => {\n    const handler = options[handlerName];\n    const currentEventHandlers = handlers[handlerName];\n    if (currentEventHandlers) {\n      const index = currentEventHandlers.findIndex((cb) => cb === handler);\n      if (index !== -1) {\n        currentEventHandlers.splice(index, 1);\n      }\n    }\n  });\n\n  if (!hasActiveHandlers()) {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  }\n}\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n"],"names":["memo","withGlobal","global","pick","_ref","authPhoneNumber","authIsLoading","authError","setAuthCode","returnToAuthPhoneNumber","clearAuthError","getActions","lang","useLang","inputRef","useRef","containerRef","code","setCode","useState","isTracking","setIsTracking","currentViewportHeight","Number","window","visualViewport","height","isFocused","useEffect","IS_TOUCH_ENV","current","focus","addEventListener","event","style","transform","caretColor","setTimeout","_window$numberKeyboar","scrollPixel","clientHeight","numberKeyboardHeight","transition","_","useHistoryBack","isActive","onBack","onCodeChange","useCallback","e","currentTarget","target","value","replace","substr","length","React","className","ref","id","onClick","role","tabIndex","title","langPack","InputText","placeholder","onInput","error","autoComplete","inputMode","onLoading","loadingSize","authHint","setAuthPassword","showPassword","setShowPassword","handleChangePasswordVisibility","isVisible","handleSubmit","password","MonkeyPassword","isPasswordVisible","PasswordForm","clearError","hint","isLoading","onChangePasswordVisibility","onSubmit","signUp","uploadProfilePhoto","isButtonShown","setIsButtonShown","croppedFile","setCroppedFile","firstName","setFirstName","lastName","setLastName","handleFirstNameChange","handleLastNameChange","action","method","preventDefault","file","AvatarEditable","onChange","label","Button","type","ripple","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","onInputChange","isMobile","useAppLayout","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","requestMutation","select","stopEvent","buildClassName","dir","isRtl","undefined","MIN_PASSWORD_LENGTH","maxLength","disabled","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","useFlag","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","AnimatedSticker","size","STICKER_SIZE_TWO_FA","tgsUrl","LOCAL_TGS_URLS","playSegment","noLoop","onLoad","isForForum","currentAvatarBlobUrl","selectedFile","setSelectedFile","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","croppedImg","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","files","accept","src","alt","CropModal","onClose","cropperResultOptions","quality","format","circle","width","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","Modal","isOpen","Boolean","hasCloseButton","Loading","round","color","ariaLabel","dialogRef","isSlim","header","noBackdrop","noBackdropClose","children","onCloseAnimationEnd","onEnter","shouldSkipHistoryAnimations","shouldRender","transitionClassNames","useShowTransition","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","element","handleKeyDown","key","stopPropagation","focusableElements","Array","from","querySelectorAll","currentFocusedIndex","findIndex","em","isSameNode","activeElement","newFocusedIndex","shiftKey","removeEventListener","trapFocus","useLayoutEffectWithPrevDeps","_ref2","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","fullClassName","Portal","containerId","elementRef","createElement","useLayoutEffect","container","querySelector","add","appendChild","TeactDOM","removeChild","cb","dependencies","debugKey","prevDepsRef","prevDeps","callback","delay","savedCallback","clearTimeout","keyToHandlerName","Enter","Backspace","Delete","Esc","Escape","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Tab","handlers","onDelete","onBackspace","onUp","onDown","onLeft","onRight","onTab","options","hasActiveHandlers","Object","keys","forEach","handlerName","handler","currentEventHandlers","push","index","splice","releaseKeyboardListener","values","some","keyHandlers","i","counter","getIsDirectTextInputDisabled"],"sourceRoot":""}