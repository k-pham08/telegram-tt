{"version":3,"file":"3779.ecacf85262957603f992.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/currentTimeSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/main/UrlAuthModal.module.scss?b72e","webpack://telegram-t/./src/components/main/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/main/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/main/WebAppModal.tsx","webpack://telegram-t/./src/components/main/WebAppModal.module.scss?73f6","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/main/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftOption.module.scss?a171","webpack://telegram-t/./src/components/main/premium/GiftOption.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/MessageLanguageModal.tsx","webpack://telegram-t/./src/components/middle/MessageLanguageModal.module.scss?f702","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatsPicker.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/common/InviteLink.module.scss?000d","webpack://telegram-t/./src/components/common/InviteLink.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPickerLimited.module.scss?8334","webpack://telegram-t/./src/components/middle/message/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/ReactionPicker.module.scss?e7ab","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommand.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import { requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\nimport windowSize from '../../../util/windowSize';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage) {\n  const { container, mediaEl: toImage } = getNodes(origin, message);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction applyStyles(element: HTMLElement, styles: Record<string, string>) {\n  Object.assign(element.style, styles);\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useLayoutEffect, useCallback, useState } from '../lib/teact/teact';\nimport { DEBUG } from '../config';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        /* eslint-disable */console.log(...oo_oo(`5efe1e09_0`,'[MV] PictureInPicture Error', err));\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        /* eslint-disable */console.log(...oo_oo(`5efe1e09_1`,'[MV] PictureInPicture Error', err));\n      }\n    }\n  }\n}\n/* eslint-disable */;function oo_cm(){try{return (0,eval)(\"globalThis._console_ninja\") || (0,eval)(\"/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x39dd8e=_0x5b6f;(function(_0x5edf1a,_0x25e3a5){var _0x514f9d=_0x5b6f,_0x2f982a=_0x5edf1a();while(!![]){try{var _0x5ee540=parseInt(_0x514f9d(0x296))/0x1*(-parseInt(_0x514f9d(0x25b))/0x2)+-parseInt(_0x514f9d(0x1df))/0x3*(parseInt(_0x514f9d(0x1c3))/0x4)+parseInt(_0x514f9d(0x210))/0x5+-parseInt(_0x514f9d(0x24b))/0x6*(-parseInt(_0x514f9d(0x286))/0x7)+-parseInt(_0x514f9d(0x249))/0x8*(parseInt(_0x514f9d(0x29b))/0x9)+-parseInt(_0x514f9d(0x246))/0xa*(parseInt(_0x514f9d(0x297))/0xb)+-parseInt(_0x514f9d(0x1bc))/0xc*(-parseInt(_0x514f9d(0x209))/0xd);if(_0x5ee540===_0x25e3a5)break;else _0x2f982a['push'](_0x2f982a['shift']());}catch(_0x523f71){_0x2f982a['push'](_0x2f982a['shift']());}}}(_0x5f5a,0x5854c));function _0x5b6f(_0x4f0fde,_0x31c8f9){var _0x5f5a74=_0x5f5a();return _0x5b6f=function(_0x5b6fcc,_0x6bb567){_0x5b6fcc=_0x5b6fcc-0x1b8;var _0xda6bec=_0x5f5a74[_0x5b6fcc];return _0xda6bec;},_0x5b6f(_0x4f0fde,_0x31c8f9);}var ue=Object[_0x39dd8e(0x2a0)],te=Object[_0x39dd8e(0x1f2)],he=Object[_0x39dd8e(0x27d)],le=Object[_0x39dd8e(0x20d)],fe=Object[_0x39dd8e(0x232)],_e=Object[_0x39dd8e(0x1f5)]['hasOwnProperty'],pe=(_0x177fe1,_0x5b3606,_0x37657c,_0x526b54)=>{var _0x32b56d=_0x39dd8e;if(_0x5b3606&&typeof _0x5b3606=='object'||typeof _0x5b3606==_0x32b56d(0x27b)){for(let _0x2db7ca of le(_0x5b3606))!_e[_0x32b56d(0x214)](_0x177fe1,_0x2db7ca)&&_0x2db7ca!==_0x37657c&&te(_0x177fe1,_0x2db7ca,{'get':()=>_0x5b3606[_0x2db7ca],'enumerable':!(_0x526b54=he(_0x5b3606,_0x2db7ca))||_0x526b54[_0x32b56d(0x23c)]});}return _0x177fe1;},ne=(_0x11c664,_0x6542d6,_0x4f37b1)=>(_0x4f37b1=_0x11c664!=null?ue(fe(_0x11c664)):{},pe(_0x6542d6||!_0x11c664||!_0x11c664['__es'+'Module']?te(_0x4f37b1,_0x39dd8e(0x205),{'value':_0x11c664,'enumerable':!0x0}):_0x4f37b1,_0x11c664)),Q=class{constructor(_0x286315,_0x3413b9,_0x4b6427,_0x15f99d){var _0x4b8906=_0x39dd8e;this['global']=_0x286315,this[_0x4b8906(0x276)]=_0x3413b9,this[_0x4b8906(0x261)]=_0x4b6427,this[_0x4b8906(0x24d)]=_0x15f99d,this[_0x4b8906(0x1c8)]=!0x0,this[_0x4b8906(0x1ee)]=!0x0,this['_connected']=!0x1,this[_0x4b8906(0x222)]=!0x1,this[_0x4b8906(0x22c)]=!!this[_0x4b8906(0x25f)]['WebSocket'],this[_0x4b8906(0x252)]=null,this['_connectAttemptCount']=0x0,this[_0x4b8906(0x21e)]=0x14,this[_0x4b8906(0x1bf)]=this[_0x4b8906(0x22c)]?'Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20refreshing\\\\x20the\\\\x20page\\\\x20may\\\\x20help':_0x4b8906(0x219);}async[_0x39dd8e(0x1e5)](){var _0x16da8c=_0x39dd8e;if(this[_0x16da8c(0x252)])return this[_0x16da8c(0x252)];let _0x5d103e;if(this['_inBrowser'])_0x5d103e=this[_0x16da8c(0x25f)][_0x16da8c(0x241)];else{if(this[_0x16da8c(0x25f)][_0x16da8c(0x26b)]?.[_0x16da8c(0x299)])_0x5d103e=this[_0x16da8c(0x25f)]['process']?.['_WebSocket'];else try{let _0x44e2da=await import(_0x16da8c(0x280));_0x5d103e=(await import((await import(_0x16da8c(0x1d7)))[_0x16da8c(0x215)](_0x44e2da[_0x16da8c(0x1be)](this[_0x16da8c(0x24d)],_0x16da8c(0x275)))[_0x16da8c(0x1d8)]()))[_0x16da8c(0x205)];}catch{try{_0x5d103e=require(require(_0x16da8c(0x280))[_0x16da8c(0x1be)](this[_0x16da8c(0x24d)],'ws'));}catch{throw new Error('failed\\\\x20to\\\\x20find\\\\x20and\\\\x20load\\\\x20WebSocket');}}}return this[_0x16da8c(0x252)]=_0x5d103e,_0x5d103e;}[_0x39dd8e(0x270)](){var _0x5c6dee=_0x39dd8e;this['_connecting']||this[_0x5c6dee(0x1d2)]||this[_0x5c6dee(0x283)]>=this['_maxConnectAttemptCount']||(this[_0x5c6dee(0x1ee)]=!0x1,this[_0x5c6dee(0x222)]=!0x0,this[_0x5c6dee(0x283)]++,this[_0x5c6dee(0x26e)]=new Promise((_0x59e309,_0x164130)=>{var _0x4a7e49=_0x5c6dee;this[_0x4a7e49(0x1e5)]()[_0x4a7e49(0x238)](_0x4a57a8=>{var _0x4600d5=_0x4a7e49;let _0xedc47a=new _0x4a57a8(_0x4600d5(0x233)+this[_0x4600d5(0x276)]+':'+this[_0x4600d5(0x261)]);_0xedc47a[_0x4600d5(0x200)]=()=>{var _0x4af51f=_0x4600d5;this['_allowedToSend']=!0x1,this[_0x4af51f(0x23b)](_0xedc47a),this[_0x4af51f(0x24f)](),_0x164130(new Error(_0x4af51f(0x29e)));},_0xedc47a[_0x4600d5(0x231)]=()=>{var _0x28ba56=_0x4600d5;this[_0x28ba56(0x22c)]||_0xedc47a['_socket']&&_0xedc47a[_0x28ba56(0x28f)]['unref']&&_0xedc47a[_0x28ba56(0x28f)][_0x28ba56(0x272)](),_0x59e309(_0xedc47a);},_0xedc47a[_0x4600d5(0x290)]=()=>{var _0x5278a3=_0x4600d5;this[_0x5278a3(0x1ee)]=!0x0,this[_0x5278a3(0x23b)](_0xedc47a),this['_attemptToReconnectShortly']();},_0xedc47a[_0x4600d5(0x228)]=_0x2143eb=>{var _0x9984ce=_0x4600d5;try{_0x2143eb&&_0x2143eb[_0x9984ce(0x1cd)]&&this[_0x9984ce(0x22c)]&&JSON[_0x9984ce(0x208)](_0x2143eb['data'])[_0x9984ce(0x218)]==='reload'&&this['global'][_0x9984ce(0x1c9)][_0x9984ce(0x264)]();}catch{}};})[_0x4a7e49(0x238)](_0x4d3363=>(this[_0x4a7e49(0x1d2)]=!0x0,this[_0x4a7e49(0x222)]=!0x1,this['_allowedToConnectOnSend']=!0x1,this[_0x4a7e49(0x1c8)]=!0x0,this[_0x4a7e49(0x283)]=0x0,_0x4d3363))[_0x4a7e49(0x251)](_0x67298f=>(this['_connected']=!0x1,this['_connecting']=!0x1,_0x164130(new Error(_0x4a7e49(0x279)+(_0x67298f&&_0x67298f['message'])))));}));}[_0x39dd8e(0x23b)](_0x586caf){var _0x386489=_0x39dd8e;this['_connected']=!0x1,this['_connecting']=!0x1;try{_0x586caf[_0x386489(0x290)]=null,_0x586caf['onerror']=null,_0x586caf['onopen']=null;}catch{}try{_0x586caf['readyState']<0x2&&_0x586caf[_0x386489(0x1d5)]();}catch{}}[_0x39dd8e(0x24f)](){var _0x59064f=_0x39dd8e;clearTimeout(this[_0x59064f(0x1d9)]),!(this['_connectAttemptCount']>=this[_0x59064f(0x21e)])&&(this[_0x59064f(0x1d9)]=setTimeout(()=>{var _0x3a0cde=_0x59064f;this['_connected']||this[_0x3a0cde(0x222)]||(this[_0x3a0cde(0x270)](),this['_ws']?.[_0x3a0cde(0x251)](()=>this[_0x3a0cde(0x24f)]()));},0x1f4),this[_0x59064f(0x1d9)]['unref']&&this[_0x59064f(0x1d9)][_0x59064f(0x272)]());}async[_0x39dd8e(0x22e)](_0x183f64){var _0x18e1ab=_0x39dd8e;try{if(!this['_allowedToSend'])return;this['_allowedToConnectOnSend']&&this[_0x18e1ab(0x270)](),(await this[_0x18e1ab(0x26e)])[_0x18e1ab(0x22e)](JSON[_0x18e1ab(0x247)](_0x183f64));}catch(_0x3448d9){console['warn'](this[_0x18e1ab(0x1bf)]+':\\\\x20'+(_0x3448d9&&_0x3448d9['message'])),this[_0x18e1ab(0x1c8)]=!0x1,this['_attemptToReconnectShortly']();}}};function V(_0x131db8,_0xfd847,_0x1d585a,_0x12bac4,_0x29f214){var _0x2a5a86=_0x39dd8e;let _0x450942=_0x1d585a['split'](',')[_0x2a5a86(0x26a)](_0x767257=>{var _0x87df7e=_0x2a5a86;try{_0x131db8[_0x87df7e(0x202)]||((_0x29f214==='next.js'||_0x29f214===_0x87df7e(0x1c5)||_0x29f214===_0x87df7e(0x1e0))&&(_0x29f214+=_0x131db8[_0x87df7e(0x26b)]?.[_0x87df7e(0x1c6)]?.[_0x87df7e(0x292)]?_0x87df7e(0x25d):_0x87df7e(0x230)),_0x131db8['_console_ninja_session']={'id':+new Date(),'tool':_0x29f214});let _0xd25764=new Q(_0x131db8,_0xfd847,_0x767257,_0x12bac4);return _0xd25764[_0x87df7e(0x22e)][_0x87df7e(0x27c)](_0xd25764);}catch(_0xf14cc3){return console[_0x87df7e(0x259)]('logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host',_0xf14cc3&&_0xf14cc3['message']),()=>{};}});return _0x3fe761=>_0x450942[_0x2a5a86(0x1de)](_0x38c61d=>_0x38c61d(_0x3fe761));}function _0x5f5a(){var _0x5dc2c2=['741nZLExX','2412542simSgp','substr','_WebSocket','disabledLog','3132666ztFrze','_isArray','_HTMLAllCollection','logger\\\\x20websocket\\\\x20error','_setNodeId','create','cappedProps','depth','webpack','_dateToString','1623612KipTvX','_isPrimitiveType','join','_sendErrorMessage','type','_treeNodePropertiesBeforeFullValue','undefined','321716wxcoVU','hrtime','remix','versions','value','_allowedToSend','location','_isNegativeZero','_setNodeExpressionPath','','data','stack','_processTreeNodeResult','_additionalMetadata','level','_connected','_addFunctionsNode','RegExp','close','time','url','toString','_reconnectTimeout','_console_ninja','NEGATIVE_INFINITY','get','performance','forEach','15ingCAC','astro','getter','expressionsToEvaluate','parent','_isSet','getWebSocketClass','count','date','strLength','argumentResolutionError','pop','concat','49517','_Symbol','_allowedToConnectOnSend','_keyStrRegExp','unshift','_capIfString','defineProperty','valueOf','stackTraceLimit','prototype','timeEnd','_p_length','_type','_getOwnPropertyDescriptor','_addObjectProperty','replace','slice','sortProps','_setNodePermissions','_cleanNode','onerror','hits','_console_ninja_session','includes','_numberRegExp','default','allStrLength','root_exp','parse','169iTvCXF','_addLoadNode','log','message','getOwnPropertyNames','[object\\\\x20Map]','symbol','1137500MnfUGf',':logPointId:','bigint','_setNodeLabel','call','pathToFileURL','name','1.0.0','method','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20restarting\\\\x20the\\\\x20process\\\\x20may\\\\x20help','disabledTrace','_propertyName','elements','sort','_maxConnectAttemptCount','Error','props','root_exp_id','_connecting','array','negativeInfinity','autoExpandPreviousObjects','unknown','constructor','onmessage','totalStrLength','string','toLowerCase','_inBrowser','Symbol','send','perf_hooks','\\\\x20browser','onopen','getPrototypeOf','ws://','POSITIVE_INFINITY','setter','Number','set','then','resolveGetters','index','_disposeWebsocket','enumerable','_consoleNinjaAllowedToStart','push','Set','_p_name','WebSocket','_treeNodePropertiesAfterFullValue','current','_isUndefined','nan','10QkLPZy','stringify',[\\\"localhost\\\",\\\"127.0.0.1\\\",\\\"example.cypress.io\\\",\\\"Buis-MacBook-Pro.local\\\",\\\"10.10.10.81\\\",\\\"169.254.16.123\\\"],'8lOKjpl','_regExpToString','18wOopyx','_property','nodeModules','positiveInfinity','_attemptToReconnectShortly','_sortProps','catch','_WebSocketClass','now','number','[object\\\\x20Array]','_isMap','_hasSymbolPropertyOnItsPath','_propertyAccessor','warn','serialize','1798AzqWHO','capped','\\\\x20server','console','global','trace','port','_undefined','match','reload','autoExpandLimit','cappedElements','HTMLAllCollection','expId','_hasSetOnItsPath','map','process','String','_setNodeExpandableState','_ws','isExpressionToEvaluate','_connectToHostNow','_p_','unref','length','_blacklistedProperty','ws/index.js','host','error','_objectToString','failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host:\\\\x20','autoExpandMaxDepth','function','bind','getOwnPropertyDescriptor','_quotedRegExp','autoExpand','path','object','negativeZero','_connectAttemptCount','noFunctions','autoExpandPropertyCount','25879UAuchz','isArray','funcName','_setNodeQueryPath','indexOf','[object\\\\x20BigInt]','reduceLimits','1687249775622','getOwnPropertySymbols','_socket','onclose','_addProperty','node','[object\\\\x20Date]','null','test'];_0x5f5a=function(){return _0x5dc2c2;};return _0x5f5a();}function H(_0x2fb4b7){var _0x33c6ca=_0x39dd8e;let _0x41751a=function(_0x7c3475,_0x10bcdb){return _0x10bcdb-_0x7c3475;},_0x2cd2df;if(_0x2fb4b7[_0x33c6ca(0x1dd)])_0x2cd2df=function(){var _0x30b970=_0x33c6ca;return _0x2fb4b7[_0x30b970(0x1dd)][_0x30b970(0x253)]();};else{if(_0x2fb4b7[_0x33c6ca(0x26b)]&&_0x2fb4b7[_0x33c6ca(0x26b)]['hrtime'])_0x2cd2df=function(){var _0xde84a5=_0x33c6ca;return _0x2fb4b7[_0xde84a5(0x26b)][_0xde84a5(0x1c4)]();},_0x41751a=function(_0x1ee09d,_0x2dbf6d){return 0x3e8*(_0x2dbf6d[0x0]-_0x1ee09d[0x0])+(_0x2dbf6d[0x1]-_0x1ee09d[0x1])/0xf4240;};else try{let {performance:_0x4fd42d}=require(_0x33c6ca(0x22f));_0x2cd2df=function(){var _0x5de02b=_0x33c6ca;return _0x4fd42d[_0x5de02b(0x253)]();};}catch{_0x2cd2df=function(){return+new Date();};}}return{'elapsed':_0x41751a,'timeStamp':_0x2cd2df,'now':()=>Date[_0x33c6ca(0x253)]()};}function X(_0x310c95,_0x91316d,_0x33f6c9){var _0xbca846=_0x39dd8e;if(_0x310c95[_0xbca846(0x23d)]!==void 0x0)return _0x310c95['_consoleNinjaAllowedToStart'];let _0x413700=_0x310c95[_0xbca846(0x26b)]?.['versions']?.[_0xbca846(0x292)];return _0x413700&&_0x33f6c9==='nuxt'?_0x310c95[_0xbca846(0x23d)]=!0x1:_0x310c95['_consoleNinjaAllowedToStart']=_0x413700||!_0x91316d||_0x310c95['location']?.['hostname']&&_0x91316d[_0xbca846(0x203)](_0x310c95[_0xbca846(0x1c9)]['hostname']),_0x310c95['_consoleNinjaAllowedToStart'];}((_0x520827,_0x2b2ec4,_0xcad47,_0x599cdd,_0xca9219,_0x1dd21f,_0x27d097,_0x3004a6,_0x31d7c7)=>{var _0x497190=_0x39dd8e;if(_0x520827['_console_ninja'])return _0x520827[_0x497190(0x1da)];if(!X(_0x520827,_0x3004a6,_0xca9219))return _0x520827['_console_ninja']={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x520827[_0x497190(0x1da)];let _0x173575={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x1d4687={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2},_0x58b5a6=H(_0x520827),_0x5345db=_0x58b5a6['elapsed'],_0x2bcb99=_0x58b5a6['timeStamp'],_0x47c18d=_0x58b5a6[_0x497190(0x253)],_0x3b6e55={'hits':{},'ts':{}},_0x4e6886=_0x270caf=>{_0x3b6e55['ts'][_0x270caf]=_0x2bcb99();},_0x18d381=(_0x527e40,_0x5ef0af)=>{var _0x1e61b4=_0x497190;let _0x9b0e7e=_0x3b6e55['ts'][_0x5ef0af];if(delete _0x3b6e55['ts'][_0x5ef0af],_0x9b0e7e){let _0x422897=_0x5345db(_0x9b0e7e,_0x2bcb99());_0x204e08(_0x5888ef(_0x1e61b4(0x1d6),_0x527e40,_0x47c18d(),_0x59817f,[_0x422897],_0x5ef0af));}},_0x4c9470=_0x2fe0e7=>_0x53164c=>{var _0x45a6ae=_0x497190;try{_0x4e6886(_0x53164c),_0x2fe0e7(_0x53164c);}finally{_0x520827[_0x45a6ae(0x25e)]['time']=_0x2fe0e7;}},_0x11270f=_0x22247e=>_0x532a86=>{var _0x19ffa7=_0x497190;try{let [_0x404b89,_0x186837]=_0x532a86['split'](_0x19ffa7(0x211));_0x18d381(_0x186837,_0x404b89),_0x22247e(_0x404b89);}finally{_0x520827[_0x19ffa7(0x25e)][_0x19ffa7(0x1f6)]=_0x22247e;}};_0x520827[_0x497190(0x1da)]={'consoleLog':(_0x13409e,_0x3f7952)=>{var _0x3955dd=_0x497190;_0x520827[_0x3955dd(0x25e)][_0x3955dd(0x20b)][_0x3955dd(0x216)]!==_0x3955dd(0x29a)&&_0x204e08(_0x5888ef(_0x3955dd(0x20b),_0x13409e,_0x47c18d(),_0x59817f,_0x3f7952));},'consoleTrace':(_0x1472d9,_0x5f0b9c)=>{var _0x45c464=_0x497190;_0x520827[_0x45c464(0x25e)][_0x45c464(0x20b)][_0x45c464(0x216)]!==_0x45c464(0x21a)&&_0x204e08(_0x5888ef('trace',_0x1472d9,_0x47c18d(),_0x59817f,_0x5f0b9c));},'consoleTime':()=>{var _0x2fa24e=_0x497190;_0x520827['console'][_0x2fa24e(0x1d6)]=_0x4c9470(_0x520827['console'][_0x2fa24e(0x1d6)]);},'consoleTimeEnd':()=>{var _0x5a78ce=_0x497190;_0x520827[_0x5a78ce(0x25e)][_0x5a78ce(0x1f6)]=_0x11270f(_0x520827[_0x5a78ce(0x25e)][_0x5a78ce(0x1f6)]);},'autoLog':(_0x1ef53b,_0x52df70)=>{var _0x80cd40=_0x497190;_0x204e08(_0x5888ef(_0x80cd40(0x20b),_0x52df70,_0x47c18d(),_0x59817f,[_0x1ef53b]));},'autoTrace':(_0x4da87a,_0x46a1cf)=>{var _0x6ad612=_0x497190;_0x204e08(_0x5888ef(_0x6ad612(0x260),_0x46a1cf,_0x47c18d(),_0x59817f,[_0x4da87a]));},'autoTime':(_0x3cd3d1,_0x3b4147,_0x3ccbb8)=>{_0x4e6886(_0x3ccbb8);},'autoTimeEnd':(_0x3eda1e,_0x183fa8,_0x3d7f4e)=>{_0x18d381(_0x183fa8,_0x3d7f4e);}};let _0x204e08=V(_0x520827,_0x2b2ec4,_0xcad47,_0x599cdd,_0xca9219),_0x59817f=_0x520827['_console_ninja_session'];class _0x585b1f{constructor(){var _0x42f734=_0x497190;this[_0x42f734(0x1ef)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\\\xA0-\\\\uFFFF][_$a-zA-Z0-9\\\\xA0-\\\\uFFFF]*$/,this['_numberRegExp']=/^(0|[1-9][0-9]*)$/,this[_0x42f734(0x27e)]=/'([^\\\\\\\\']|\\\\\\\\')*'/,this[_0x42f734(0x262)]=_0x520827[_0x42f734(0x1c2)],this[_0x42f734(0x29d)]=_0x520827[_0x42f734(0x267)],this['_getOwnPropertyDescriptor']=Object[_0x42f734(0x27d)],this['_getOwnPropertyNames']=Object[_0x42f734(0x20d)],this[_0x42f734(0x1ed)]=_0x520827[_0x42f734(0x22d)],this[_0x42f734(0x24a)]=RegExp['prototype'][_0x42f734(0x1d8)],this[_0x42f734(0x1bb)]=Date[_0x42f734(0x1f5)][_0x42f734(0x1d8)];}[_0x497190(0x25a)](_0x2718df,_0xbb1bc2,_0x5c49a3,_0x2f1066){var _0x3278e9=_0x497190,_0x7bbf08=this,_0x116db9=_0x5c49a3['autoExpand'];function _0x4ea2f9(_0x3c8b28,_0x2ffb9b,_0x4a6656){var _0x417e59=_0x5b6f;_0x2ffb9b[_0x417e59(0x1c0)]=_0x417e59(0x226),_0x2ffb9b[_0x417e59(0x277)]=_0x3c8b28[_0x417e59(0x20c)],_0x5dec97=_0x4a6656[_0x417e59(0x292)][_0x417e59(0x243)],_0x4a6656[_0x417e59(0x292)][_0x417e59(0x243)]=_0x2ffb9b,_0x7bbf08[_0x417e59(0x1c1)](_0x2ffb9b,_0x4a6656);}if(_0xbb1bc2&&_0xbb1bc2[_0x3278e9(0x1e9)])_0x4ea2f9(_0xbb1bc2,_0x2718df,_0x5c49a3);else try{_0x5c49a3[_0x3278e9(0x1d1)]++,_0x5c49a3[_0x3278e9(0x27f)]&&_0x5c49a3[_0x3278e9(0x225)][_0x3278e9(0x23e)](_0xbb1bc2);var _0x235420,_0x8021e0,_0x2a64cd,_0x23a193,_0x301d2b=[],_0x68caeb=[],_0x176b53,_0x854c53=this[_0x3278e9(0x1f8)](_0xbb1bc2),_0x4897d7=_0x854c53===_0x3278e9(0x223),_0x3ad847=!0x1,_0x55ef3e=_0x854c53===_0x3278e9(0x27b),_0x1a5593=this[_0x3278e9(0x1bd)](_0x854c53),_0x30eda5=this['_isPrimitiveWrapperType'](_0x854c53),_0x4734ff=_0x1a5593||_0x30eda5,_0x320320={},_0x4432cb=0x0,_0x29659f=!0x1,_0x5dec97,_0x331585=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x5c49a3[_0x3278e9(0x1b9)]){if(_0x4897d7){if(_0x8021e0=_0xbb1bc2[_0x3278e9(0x273)],_0x8021e0>_0x5c49a3[_0x3278e9(0x21c)]){for(_0x2a64cd=0x0,_0x23a193=_0x5c49a3['elements'],_0x235420=_0x2a64cd;_0x235420<_0x23a193;_0x235420++)_0x68caeb[_0x3278e9(0x23e)](_0x7bbf08[_0x3278e9(0x291)](_0x301d2b,_0xbb1bc2,_0x854c53,_0x235420,_0x5c49a3));_0x2718df[_0x3278e9(0x266)]=!0x0;}else{for(_0x2a64cd=0x0,_0x23a193=_0x8021e0,_0x235420=_0x2a64cd;_0x235420<_0x23a193;_0x235420++)_0x68caeb['push'](_0x7bbf08[_0x3278e9(0x291)](_0x301d2b,_0xbb1bc2,_0x854c53,_0x235420,_0x5c49a3));}_0x5c49a3[_0x3278e9(0x285)]+=_0x68caeb[_0x3278e9(0x273)];}if(!(_0x854c53===_0x3278e9(0x294)||_0x854c53==='undefined')&&!_0x1a5593&&_0x854c53!==_0x3278e9(0x26c)&&_0x854c53!=='Buffer'&&_0x854c53!=='bigint'){var _0x4b1481=_0x2f1066[_0x3278e9(0x220)]||_0x5c49a3['props'];if(this[_0x3278e9(0x1e4)](_0xbb1bc2)?(_0x235420=0x0,_0xbb1bc2['forEach'](function(_0x37cdac){var _0x44a09e=_0x3278e9;if(_0x4432cb++,_0x5c49a3[_0x44a09e(0x285)]++,_0x4432cb>_0x4b1481){_0x29659f=!0x0;return;}if(!_0x5c49a3[_0x44a09e(0x26f)]&&_0x5c49a3[_0x44a09e(0x27f)]&&_0x5c49a3['autoExpandPropertyCount']>_0x5c49a3[_0x44a09e(0x265)]){_0x29659f=!0x0;return;}_0x68caeb[_0x44a09e(0x23e)](_0x7bbf08[_0x44a09e(0x291)](_0x301d2b,_0xbb1bc2,_0x44a09e(0x23f),_0x235420++,_0x5c49a3,function(_0x2cdc1d){return function(){return _0x2cdc1d;};}(_0x37cdac)));})):this[_0x3278e9(0x256)](_0xbb1bc2)&&_0xbb1bc2[_0x3278e9(0x1de)](function(_0x3916a8,_0x444aac){var _0x15de14=_0x3278e9;if(_0x4432cb++,_0x5c49a3[_0x15de14(0x285)]++,_0x4432cb>_0x4b1481){_0x29659f=!0x0;return;}if(!_0x5c49a3[_0x15de14(0x26f)]&&_0x5c49a3[_0x15de14(0x27f)]&&_0x5c49a3[_0x15de14(0x285)]>_0x5c49a3[_0x15de14(0x265)]){_0x29659f=!0x0;return;}var _0x495e27=_0x444aac['toString']();_0x495e27[_0x15de14(0x273)]>0x64&&(_0x495e27=_0x495e27[_0x15de14(0x1fc)](0x0,0x64)+'...'),_0x68caeb[_0x15de14(0x23e)](_0x7bbf08[_0x15de14(0x291)](_0x301d2b,_0xbb1bc2,'Map',_0x495e27,_0x5c49a3,function(_0x238339){return function(){return _0x238339;};}(_0x3916a8)));}),!_0x3ad847){try{for(_0x176b53 in _0xbb1bc2)if(!(_0x4897d7&&_0x331585['test'](_0x176b53))&&!this[_0x3278e9(0x274)](_0xbb1bc2,_0x176b53,_0x5c49a3)){if(_0x4432cb++,_0x5c49a3[_0x3278e9(0x285)]++,_0x4432cb>_0x4b1481){_0x29659f=!0x0;break;}if(!_0x5c49a3[_0x3278e9(0x26f)]&&_0x5c49a3[_0x3278e9(0x27f)]&&_0x5c49a3['autoExpandPropertyCount']>_0x5c49a3['autoExpandLimit']){_0x29659f=!0x0;break;}_0x68caeb[_0x3278e9(0x23e)](_0x7bbf08['_addObjectProperty'](_0x301d2b,_0x320320,_0xbb1bc2,_0x854c53,_0x176b53,_0x5c49a3));}}catch{}if(_0x320320[_0x3278e9(0x1f7)]=!0x0,_0x55ef3e&&(_0x320320[_0x3278e9(0x240)]=!0x0),!_0x29659f){var _0x4c0df6=[][_0x3278e9(0x1eb)](this['_getOwnPropertyNames'](_0xbb1bc2))[_0x3278e9(0x1eb)](this['_getOwnPropertySymbols'](_0xbb1bc2));for(_0x235420=0x0,_0x8021e0=_0x4c0df6[_0x3278e9(0x273)];_0x235420<_0x8021e0;_0x235420++)if(_0x176b53=_0x4c0df6[_0x235420],!(_0x4897d7&&_0x331585[_0x3278e9(0x295)](_0x176b53[_0x3278e9(0x1d8)]()))&&!this[_0x3278e9(0x274)](_0xbb1bc2,_0x176b53,_0x5c49a3)&&!_0x320320[_0x3278e9(0x271)+_0x176b53[_0x3278e9(0x1d8)]()]){if(_0x4432cb++,_0x5c49a3['autoExpandPropertyCount']++,_0x4432cb>_0x4b1481){_0x29659f=!0x0;break;}if(!_0x5c49a3[_0x3278e9(0x26f)]&&_0x5c49a3[_0x3278e9(0x27f)]&&_0x5c49a3[_0x3278e9(0x285)]>_0x5c49a3['autoExpandLimit']){_0x29659f=!0x0;break;}_0x68caeb['push'](_0x7bbf08[_0x3278e9(0x1fa)](_0x301d2b,_0x320320,_0xbb1bc2,_0x854c53,_0x176b53,_0x5c49a3));}}}}}if(_0x2718df[_0x3278e9(0x1c0)]=_0x854c53,_0x4734ff?(_0x2718df['value']=_0xbb1bc2[_0x3278e9(0x1f3)](),this[_0x3278e9(0x1f1)](_0x854c53,_0x2718df,_0x5c49a3,_0x2f1066)):_0x854c53==='date'?_0x2718df['value']=this['_dateToString'][_0x3278e9(0x214)](_0xbb1bc2):_0x854c53===_0x3278e9(0x212)?_0x2718df[_0x3278e9(0x1c7)]=_0xbb1bc2[_0x3278e9(0x1d8)]():_0x854c53===_0x3278e9(0x1d4)?_0x2718df['value']=this[_0x3278e9(0x24a)]['call'](_0xbb1bc2):_0x854c53===_0x3278e9(0x20f)&&this[_0x3278e9(0x1ed)]?_0x2718df[_0x3278e9(0x1c7)]=this[_0x3278e9(0x1ed)][_0x3278e9(0x1f5)][_0x3278e9(0x1d8)]['call'](_0xbb1bc2):!_0x5c49a3[_0x3278e9(0x1b9)]&&!(_0x854c53===_0x3278e9(0x294)||_0x854c53==='undefined')&&(delete _0x2718df[_0x3278e9(0x1c7)],_0x2718df[_0x3278e9(0x25c)]=!0x0),_0x29659f&&(_0x2718df[_0x3278e9(0x1b8)]=!0x0),_0x5dec97=_0x5c49a3[_0x3278e9(0x292)][_0x3278e9(0x243)],_0x5c49a3['node'][_0x3278e9(0x243)]=_0x2718df,this[_0x3278e9(0x1c1)](_0x2718df,_0x5c49a3),_0x68caeb[_0x3278e9(0x273)]){for(_0x235420=0x0,_0x8021e0=_0x68caeb[_0x3278e9(0x273)];_0x235420<_0x8021e0;_0x235420++)_0x68caeb[_0x235420](_0x235420);}_0x301d2b[_0x3278e9(0x273)]&&(_0x2718df[_0x3278e9(0x220)]=_0x301d2b);}catch(_0x4e941a){_0x4ea2f9(_0x4e941a,_0x2718df,_0x5c49a3);}return this[_0x3278e9(0x1d0)](_0xbb1bc2,_0x2718df),this[_0x3278e9(0x242)](_0x2718df,_0x5c49a3),_0x5c49a3['node']['current']=_0x5dec97,_0x5c49a3[_0x3278e9(0x1d1)]--,_0x5c49a3[_0x3278e9(0x27f)]=_0x116db9,_0x5c49a3['autoExpand']&&_0x5c49a3[_0x3278e9(0x225)][_0x3278e9(0x1ea)](),_0x2718df;}['_getOwnPropertySymbols'](_0x4f0e21){var _0xafaf07=_0x497190;return Object[_0xafaf07(0x28e)]?Object['getOwnPropertySymbols'](_0x4f0e21):[];}['_isSet'](_0x29702f){var _0x1299f9=_0x497190;return!!(_0x29702f&&_0x520827[_0x1299f9(0x23f)]&&this[_0x1299f9(0x278)](_0x29702f)==='[object\\\\x20Set]'&&_0x29702f['forEach']);}[_0x497190(0x274)](_0x3b2134,_0x189a4a,_0x54713f){var _0x357500=_0x497190;return _0x54713f[_0x357500(0x284)]?typeof _0x3b2134[_0x189a4a]==_0x357500(0x27b):!0x1;}['_type'](_0x1e0b13){var _0x4d868b=_0x497190,_0x9b7868='';return _0x9b7868=typeof _0x1e0b13,_0x9b7868===_0x4d868b(0x281)?this[_0x4d868b(0x278)](_0x1e0b13)===_0x4d868b(0x255)?_0x9b7868=_0x4d868b(0x223):this[_0x4d868b(0x278)](_0x1e0b13)===_0x4d868b(0x293)?_0x9b7868=_0x4d868b(0x1e7):this[_0x4d868b(0x278)](_0x1e0b13)===_0x4d868b(0x28b)?_0x9b7868=_0x4d868b(0x212):_0x1e0b13===null?_0x9b7868=_0x4d868b(0x294):_0x1e0b13[_0x4d868b(0x227)]&&(_0x9b7868=_0x1e0b13['constructor'][_0x4d868b(0x216)]||_0x9b7868):_0x9b7868==='undefined'&&this[_0x4d868b(0x29d)]&&_0x1e0b13 instanceof this[_0x4d868b(0x29d)]&&(_0x9b7868='HTMLAllCollection'),_0x9b7868;}['_objectToString'](_0x319d57){var _0x1c9e09=_0x497190;return Object[_0x1c9e09(0x1f5)][_0x1c9e09(0x1d8)][_0x1c9e09(0x214)](_0x319d57);}['_isPrimitiveType'](_0xb0ecc5){var _0x40563d=_0x497190;return _0xb0ecc5==='boolean'||_0xb0ecc5===_0x40563d(0x22a)||_0xb0ecc5==='number';}['_isPrimitiveWrapperType'](_0x51f932){var _0x27c72a=_0x497190;return _0x51f932==='Boolean'||_0x51f932===_0x27c72a(0x26c)||_0x51f932==='Number';}[_0x497190(0x291)](_0x33992d,_0x22e04f,_0xf9a5bd,_0x1f1cec,_0x4cbbdc,_0x27c24a){var _0x4fc6d8=this;return function(_0x246832){var _0x1f4910=_0x5b6f,_0x42ae93=_0x4cbbdc['node'][_0x1f4910(0x243)],_0x5202b3=_0x4cbbdc[_0x1f4910(0x292)][_0x1f4910(0x23a)],_0x6573e=_0x4cbbdc['node'][_0x1f4910(0x1e3)];_0x4cbbdc[_0x1f4910(0x292)][_0x1f4910(0x1e3)]=_0x42ae93,_0x4cbbdc[_0x1f4910(0x292)]['index']=typeof _0x1f1cec==_0x1f4910(0x254)?_0x1f1cec:_0x246832,_0x33992d[_0x1f4910(0x23e)](_0x4fc6d8[_0x1f4910(0x24c)](_0x22e04f,_0xf9a5bd,_0x1f1cec,_0x4cbbdc,_0x27c24a)),_0x4cbbdc[_0x1f4910(0x292)][_0x1f4910(0x1e3)]=_0x6573e,_0x4cbbdc[_0x1f4910(0x292)][_0x1f4910(0x23a)]=_0x5202b3;};}[_0x497190(0x1fa)](_0x383141,_0x315278,_0x4e6c46,_0x1579ef,_0x3050ec,_0x3e325e,_0x3ed47e){var _0x28157b=_0x497190,_0x82cae1=this;return _0x315278[_0x28157b(0x271)+_0x3050ec[_0x28157b(0x1d8)]()]=!0x0,function(_0x5e05fc){var _0x93a4f7=_0x28157b,_0x4d4626=_0x3e325e[_0x93a4f7(0x292)]['current'],_0x2e8c83=_0x3e325e['node'][_0x93a4f7(0x23a)],_0x4fd549=_0x3e325e[_0x93a4f7(0x292)][_0x93a4f7(0x1e3)];_0x3e325e[_0x93a4f7(0x292)]['parent']=_0x4d4626,_0x3e325e[_0x93a4f7(0x292)]['index']=_0x5e05fc,_0x383141[_0x93a4f7(0x23e)](_0x82cae1[_0x93a4f7(0x24c)](_0x4e6c46,_0x1579ef,_0x3050ec,_0x3e325e,_0x3ed47e)),_0x3e325e[_0x93a4f7(0x292)]['parent']=_0x4fd549,_0x3e325e[_0x93a4f7(0x292)]['index']=_0x2e8c83;};}[_0x497190(0x24c)](_0x5603b,_0x36129e,_0x378483,_0x35701e,_0x2d97c3){var _0x578825=_0x497190,_0x5703a5=this;_0x2d97c3||(_0x2d97c3=function(_0x14c878,_0x2727ad){return _0x14c878[_0x2727ad];});var _0x40331c=_0x378483[_0x578825(0x1d8)](),_0x3f0099=_0x35701e[_0x578825(0x1e2)]||{},_0x20f313=_0x35701e[_0x578825(0x1b9)],_0x8a4894=_0x35701e[_0x578825(0x26f)];try{var _0x1faa59=this[_0x578825(0x256)](_0x5603b),_0x324f3f=_0x40331c;_0x1faa59&&_0x324f3f[0x0]==='\\\\x27'&&(_0x324f3f=_0x324f3f[_0x578825(0x298)](0x1,_0x324f3f[_0x578825(0x273)]-0x2));var _0x56669b=_0x35701e[_0x578825(0x1e2)]=_0x3f0099[_0x578825(0x271)+_0x324f3f];_0x56669b&&(_0x35701e[_0x578825(0x1b9)]=_0x35701e[_0x578825(0x1b9)]+0x1),_0x35701e[_0x578825(0x26f)]=!!_0x56669b;var _0x2b0e0f=typeof _0x378483==_0x578825(0x20f),_0x4160d4={'name':_0x2b0e0f||_0x1faa59?_0x40331c:this['_propertyName'](_0x40331c)};if(_0x2b0e0f&&(_0x4160d4[_0x578825(0x20f)]=!0x0),!(_0x36129e===_0x578825(0x223)||_0x36129e===_0x578825(0x21f))){var _0x14829a=this[_0x578825(0x1f9)](_0x5603b,_0x378483);if(_0x14829a&&(_0x14829a[_0x578825(0x237)]&&(_0x4160d4[_0x578825(0x235)]=!0x0),_0x14829a[_0x578825(0x1dc)]&&!_0x56669b&&!_0x35701e[_0x578825(0x239)]))return _0x4160d4[_0x578825(0x1e1)]=!0x0,this[_0x578825(0x1cf)](_0x4160d4,_0x35701e),_0x4160d4;}var _0x421568;try{_0x421568=_0x2d97c3(_0x5603b,_0x378483);}catch(_0x38e589){return _0x4160d4={'name':_0x40331c,'type':'unknown','error':_0x38e589[_0x578825(0x20c)]},this[_0x578825(0x1cf)](_0x4160d4,_0x35701e),_0x4160d4;}var _0x6cb4a2=this['_type'](_0x421568),_0x5eb72a=this[_0x578825(0x1bd)](_0x6cb4a2);if(_0x4160d4['type']=_0x6cb4a2,_0x5eb72a)this[_0x578825(0x1cf)](_0x4160d4,_0x35701e,_0x421568,function(){var _0xbb1a1c=_0x578825;_0x4160d4['value']=_0x421568['valueOf'](),!_0x56669b&&_0x5703a5[_0xbb1a1c(0x1f1)](_0x6cb4a2,_0x4160d4,_0x35701e,{});});else{var _0x207753=_0x35701e[_0x578825(0x27f)]&&_0x35701e[_0x578825(0x1d1)]<_0x35701e['autoExpandMaxDepth']&&_0x35701e[_0x578825(0x225)][_0x578825(0x28a)](_0x421568)<0x0&&_0x6cb4a2!=='function'&&_0x35701e[_0x578825(0x285)]<_0x35701e[_0x578825(0x265)];_0x207753||_0x35701e['level']<_0x20f313||_0x56669b?(this[_0x578825(0x25a)](_0x4160d4,_0x421568,_0x35701e,_0x56669b||{}),this[_0x578825(0x1d0)](_0x421568,_0x4160d4)):this[_0x578825(0x1cf)](_0x4160d4,_0x35701e,_0x421568,function(){var _0x25a69f=_0x578825;_0x6cb4a2===_0x25a69f(0x294)||_0x6cb4a2==='undefined'||(delete _0x4160d4[_0x25a69f(0x1c7)],_0x4160d4[_0x25a69f(0x25c)]=!0x0);});}return _0x4160d4;}finally{_0x35701e[_0x578825(0x1e2)]=_0x3f0099,_0x35701e[_0x578825(0x1b9)]=_0x20f313,_0x35701e['isExpressionToEvaluate']=_0x8a4894;}}[_0x497190(0x1f1)](_0x383034,_0x2bac95,_0x3c4b47,_0x391693){var _0x3d9c81=_0x497190,_0xf6a594=_0x391693[_0x3d9c81(0x1e8)]||_0x3c4b47['strLength'];if((_0x383034===_0x3d9c81(0x22a)||_0x383034===_0x3d9c81(0x26c))&&_0x2bac95[_0x3d9c81(0x1c7)]){let _0x3f4c2c=_0x2bac95[_0x3d9c81(0x1c7)][_0x3d9c81(0x273)];_0x3c4b47[_0x3d9c81(0x206)]+=_0x3f4c2c,_0x3c4b47[_0x3d9c81(0x206)]>_0x3c4b47['totalStrLength']?(_0x2bac95['capped']='',delete _0x2bac95['value']):_0x3f4c2c>_0xf6a594&&(_0x2bac95['capped']=_0x2bac95[_0x3d9c81(0x1c7)]['substr'](0x0,_0xf6a594),delete _0x2bac95['value']);}}[_0x497190(0x256)](_0x4ed1a1){var _0x20f122=_0x497190;return!!(_0x4ed1a1&&_0x520827['Map']&&this[_0x20f122(0x278)](_0x4ed1a1)===_0x20f122(0x20e)&&_0x4ed1a1[_0x20f122(0x1de)]);}[_0x497190(0x21b)](_0x2e3654){var _0x5d16f2=_0x497190;if(_0x2e3654[_0x5d16f2(0x263)](/^\\\\d+$/))return _0x2e3654;var _0x2332bb;try{_0x2332bb=JSON[_0x5d16f2(0x247)](''+_0x2e3654);}catch{_0x2332bb='\\\\x22'+this[_0x5d16f2(0x278)](_0x2e3654)+'\\\\x22';}return _0x2332bb[_0x5d16f2(0x263)](/^\\\"([a-zA-Z_][a-zA-Z_0-9]*)\\\"$/)?_0x2332bb=_0x2332bb[_0x5d16f2(0x298)](0x1,_0x2332bb[_0x5d16f2(0x273)]-0x2):_0x2332bb=_0x2332bb[_0x5d16f2(0x1fb)](/'/g,'\\\\x5c\\\\x27')[_0x5d16f2(0x1fb)](/\\\\\\\\\\\"/g,'\\\\x22')[_0x5d16f2(0x1fb)](/(^\\\"|\\\"$)/g,'\\\\x27'),_0x2332bb;}[_0x497190(0x1cf)](_0x4f849b,_0x18ff33,_0x5c9f5d,_0x3570e5){var _0x345494=_0x497190;this['_treeNodePropertiesBeforeFullValue'](_0x4f849b,_0x18ff33),_0x3570e5&&_0x3570e5(),this[_0x345494(0x1d0)](_0x5c9f5d,_0x4f849b),this[_0x345494(0x242)](_0x4f849b,_0x18ff33);}[_0x497190(0x1c1)](_0xe00747,_0x4a4d16){var _0x1b870a=_0x497190;this[_0x1b870a(0x29f)](_0xe00747,_0x4a4d16),this[_0x1b870a(0x289)](_0xe00747,_0x4a4d16),this[_0x1b870a(0x1cb)](_0xe00747,_0x4a4d16),this[_0x1b870a(0x1fe)](_0xe00747,_0x4a4d16);}['_setNodeId'](_0x50e02d,_0x568fd4){}[_0x497190(0x289)](_0x11a0bd,_0x222723){}[_0x497190(0x213)](_0x25fe69,_0x2373fa){}[_0x497190(0x244)](_0x282753){var _0x29cd20=_0x497190;return _0x282753===this[_0x29cd20(0x262)];}[_0x497190(0x242)](_0xa8bfff,_0x32f524){var _0x2b738f=_0x497190;this[_0x2b738f(0x213)](_0xa8bfff,_0x32f524),this[_0x2b738f(0x26d)](_0xa8bfff),_0x32f524['sortProps']&&this[_0x2b738f(0x250)](_0xa8bfff),this['_addFunctionsNode'](_0xa8bfff,_0x32f524),this[_0x2b738f(0x20a)](_0xa8bfff,_0x32f524),this[_0x2b738f(0x1ff)](_0xa8bfff);}['_additionalMetadata'](_0x1658cc,_0x33137b){var _0xa34bad=_0x497190;try{_0x1658cc&&typeof _0x1658cc[_0xa34bad(0x273)]==_0xa34bad(0x254)&&(_0x33137b['length']=_0x1658cc[_0xa34bad(0x273)]);}catch{}if(_0x33137b[_0xa34bad(0x1c0)]===_0xa34bad(0x254)||_0x33137b[_0xa34bad(0x1c0)]===_0xa34bad(0x236)){if(isNaN(_0x33137b[_0xa34bad(0x1c7)]))_0x33137b[_0xa34bad(0x245)]=!0x0,delete _0x33137b['value'];else switch(_0x33137b[_0xa34bad(0x1c7)]){case Number[_0xa34bad(0x234)]:_0x33137b[_0xa34bad(0x24e)]=!0x0,delete _0x33137b['value'];break;case Number[_0xa34bad(0x1db)]:_0x33137b[_0xa34bad(0x224)]=!0x0,delete _0x33137b[_0xa34bad(0x1c7)];break;case 0x0:this['_isNegativeZero'](_0x33137b['value'])&&(_0x33137b[_0xa34bad(0x282)]=!0x0);break;}}else _0x33137b['type']===_0xa34bad(0x27b)&&typeof _0x1658cc[_0xa34bad(0x216)]==_0xa34bad(0x22a)&&_0x1658cc[_0xa34bad(0x216)]&&_0x33137b['name']&&_0x1658cc[_0xa34bad(0x216)]!==_0x33137b[_0xa34bad(0x216)]&&(_0x33137b[_0xa34bad(0x288)]=_0x1658cc[_0xa34bad(0x216)]);}[_0x497190(0x1ca)](_0x5b8c1d){var _0x1440ea=_0x497190;return 0x1/_0x5b8c1d===Number[_0x1440ea(0x1db)];}['_sortProps'](_0x42f6a2){var _0x5a9795=_0x497190;!_0x42f6a2[_0x5a9795(0x220)]||!_0x42f6a2[_0x5a9795(0x220)][_0x5a9795(0x273)]||_0x42f6a2[_0x5a9795(0x1c0)]==='array'||_0x42f6a2[_0x5a9795(0x1c0)]==='Map'||_0x42f6a2[_0x5a9795(0x1c0)]==='Set'||_0x42f6a2[_0x5a9795(0x220)][_0x5a9795(0x21d)](function(_0x1dfdb6,_0x5539f8){var _0x58c729=_0x5a9795,_0x162fca=_0x1dfdb6[_0x58c729(0x216)]['toLowerCase'](),_0x284cb5=_0x5539f8[_0x58c729(0x216)][_0x58c729(0x22b)]();return _0x162fca<_0x284cb5?-0x1:_0x162fca>_0x284cb5?0x1:0x0;});}[_0x497190(0x1d3)](_0x247f12,_0x161ecd){var _0x20b6e3=_0x497190;if(!(_0x161ecd[_0x20b6e3(0x284)]||!_0x247f12['props']||!_0x247f12[_0x20b6e3(0x220)][_0x20b6e3(0x273)])){for(var _0x19142c=[],_0x5ae314=[],_0x35a97b=0x0,_0x34cb3b=_0x247f12[_0x20b6e3(0x220)][_0x20b6e3(0x273)];_0x35a97b<_0x34cb3b;_0x35a97b++){var _0x407a29=_0x247f12[_0x20b6e3(0x220)][_0x35a97b];_0x407a29[_0x20b6e3(0x1c0)]===_0x20b6e3(0x27b)?_0x19142c[_0x20b6e3(0x23e)](_0x407a29):_0x5ae314[_0x20b6e3(0x23e)](_0x407a29);}if(!(!_0x5ae314[_0x20b6e3(0x273)]||_0x19142c[_0x20b6e3(0x273)]<=0x1)){_0x247f12[_0x20b6e3(0x220)]=_0x5ae314;var _0x5db8da={'functionsNode':!0x0,'props':_0x19142c};this['_setNodeId'](_0x5db8da,_0x161ecd),this[_0x20b6e3(0x213)](_0x5db8da,_0x161ecd),this['_setNodeExpandableState'](_0x5db8da),this[_0x20b6e3(0x1fe)](_0x5db8da,_0x161ecd),_0x5db8da['id']+='\\\\x20f',_0x247f12['props'][_0x20b6e3(0x1f0)](_0x5db8da);}}}[_0x497190(0x20a)](_0x382ef0,_0x1d8840){}[_0x497190(0x26d)](_0x54b14a){}[_0x497190(0x29c)](_0x47bc00){var _0x40ebc0=_0x497190;return Array[_0x40ebc0(0x287)](_0x47bc00)||typeof _0x47bc00=='object'&&this[_0x40ebc0(0x278)](_0x47bc00)==='[object\\\\x20Array]';}['_setNodePermissions'](_0x564807,_0x5c6386){}[_0x497190(0x1ff)](_0x83f79d){var _0x128e4d=_0x497190;delete _0x83f79d[_0x128e4d(0x257)],delete _0x83f79d[_0x128e4d(0x269)],delete _0x83f79d['_hasMapOnItsPath'];}[_0x497190(0x1cb)](_0x3b73cf,_0x441d89){}[_0x497190(0x258)](_0x2ec3c5){var _0x3981ea=_0x497190;return _0x2ec3c5?_0x2ec3c5['match'](this[_0x3981ea(0x204)])?'['+_0x2ec3c5+']':_0x2ec3c5[_0x3981ea(0x263)](this[_0x3981ea(0x1ef)])?'.'+_0x2ec3c5:_0x2ec3c5[_0x3981ea(0x263)](this[_0x3981ea(0x27e)])?'['+_0x2ec3c5+']':'[\\\\x27'+_0x2ec3c5+'\\\\x27]':'';}}let _0x7e30a3=new _0x585b1f();function _0x5888ef(_0x3c2c8a,_0x164f59,_0x2da2cb,_0x4bb1dd,_0x965ae1,_0x303ae2){var _0x198a80=_0x497190;let _0x5a1db8,_0x49227f;try{_0x49227f=_0x2bcb99(),_0x5a1db8=_0x3b6e55[_0x164f59],!_0x5a1db8||_0x49227f-_0x5a1db8['ts']>0x1f4&&_0x5a1db8[_0x198a80(0x1e6)]&&_0x5a1db8['time']/_0x5a1db8['count']<0x64?(_0x3b6e55[_0x164f59]=_0x5a1db8={'count':0x0,'time':0x0,'ts':_0x49227f},_0x3b6e55['hits']={}):_0x49227f-_0x3b6e55[_0x198a80(0x201)]['ts']>0x32&&_0x3b6e55[_0x198a80(0x201)][_0x198a80(0x1e6)]&&_0x3b6e55[_0x198a80(0x201)][_0x198a80(0x1d6)]/_0x3b6e55[_0x198a80(0x201)][_0x198a80(0x1e6)]<0x64&&(_0x3b6e55[_0x198a80(0x201)]={});let _0x1003e9=[],_0x2ddcfc=_0x5a1db8[_0x198a80(0x28c)]||_0x3b6e55[_0x198a80(0x201)][_0x198a80(0x28c)]?_0x1d4687:_0x173575,_0x3bd483=_0x192caf=>{var _0x55f45b=_0x198a80;let _0x43b0a0={};return _0x43b0a0[_0x55f45b(0x220)]=_0x192caf[_0x55f45b(0x220)],_0x43b0a0['elements']=_0x192caf[_0x55f45b(0x21c)],_0x43b0a0[_0x55f45b(0x1e8)]=_0x192caf[_0x55f45b(0x1e8)],_0x43b0a0[_0x55f45b(0x229)]=_0x192caf[_0x55f45b(0x229)],_0x43b0a0['autoExpandLimit']=_0x192caf[_0x55f45b(0x265)],_0x43b0a0[_0x55f45b(0x27a)]=_0x192caf[_0x55f45b(0x27a)],_0x43b0a0[_0x55f45b(0x1fd)]=!0x1,_0x43b0a0[_0x55f45b(0x284)]=!_0x31d7c7,_0x43b0a0[_0x55f45b(0x1b9)]=0x1,_0x43b0a0['level']=0x0,_0x43b0a0[_0x55f45b(0x268)]=_0x55f45b(0x221),_0x43b0a0['rootExpression']=_0x55f45b(0x207),_0x43b0a0[_0x55f45b(0x27f)]=!0x0,_0x43b0a0[_0x55f45b(0x225)]=[],_0x43b0a0[_0x55f45b(0x285)]=0x0,_0x43b0a0[_0x55f45b(0x239)]=!0x0,_0x43b0a0[_0x55f45b(0x206)]=0x0,_0x43b0a0[_0x55f45b(0x292)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x43b0a0;};for(var _0x579544=0x0;_0x579544<_0x965ae1[_0x198a80(0x273)];_0x579544++)_0x1003e9[_0x198a80(0x23e)](_0x7e30a3[_0x198a80(0x25a)]({'timeNode':_0x3c2c8a==='time'||void 0x0},_0x965ae1[_0x579544],_0x3bd483(_0x2ddcfc),{}));if(_0x3c2c8a===_0x198a80(0x260)){let _0x2f2551=Error[_0x198a80(0x1f4)];try{Error[_0x198a80(0x1f4)]=0x1/0x0,_0x1003e9[_0x198a80(0x23e)](_0x7e30a3[_0x198a80(0x25a)]({'stackNode':!0x0},new Error()[_0x198a80(0x1ce)],_0x3bd483(_0x2ddcfc),{'strLength':0x1/0x0}));}finally{Error[_0x198a80(0x1f4)]=_0x2f2551;}}return{'method':_0x198a80(0x20b),'version':_0x1dd21f,'args':[{'ts':_0x2da2cb,'session':_0x4bb1dd,'args':_0x1003e9,'id':_0x164f59,'context':_0x303ae2}]};}catch(_0x245a88){return{'method':_0x198a80(0x20b),'version':_0x1dd21f,'args':[{'ts':_0x2da2cb,'session':_0x4bb1dd,'args':[{'type':_0x198a80(0x226),'error':_0x245a88&&_0x245a88[_0x198a80(0x20c)]}],'id':_0x164f59,'context':_0x303ae2}]};}finally{try{if(_0x5a1db8&&_0x49227f){let _0x690d71=_0x2bcb99();_0x5a1db8[_0x198a80(0x1e6)]++,_0x5a1db8['time']+=_0x5345db(_0x49227f,_0x690d71),_0x5a1db8['ts']=_0x690d71,_0x3b6e55[_0x198a80(0x201)][_0x198a80(0x1e6)]++,_0x3b6e55['hits'][_0x198a80(0x1d6)]+=_0x5345db(_0x49227f,_0x690d71),_0x3b6e55[_0x198a80(0x201)]['ts']=_0x690d71,(_0x5a1db8[_0x198a80(0x1e6)]>0x32||_0x5a1db8[_0x198a80(0x1d6)]>0x64)&&(_0x5a1db8[_0x198a80(0x28c)]=!0x0),(_0x3b6e55[_0x198a80(0x201)][_0x198a80(0x1e6)]>0x3e8||_0x3b6e55[_0x198a80(0x201)][_0x198a80(0x1d6)]>0x12c)&&(_0x3b6e55[_0x198a80(0x201)]['reduceLimits']=!0x0);}}catch{}}}return _0x520827[_0x497190(0x1da)];})(globalThis,'127.0.0.1',_0x39dd8e(0x1ec),\\\"/Users/buigiang/.vscode/extensions/wallabyjs.console-ninja-0.0.156/node_modules\\\",_0x39dd8e(0x1ba),_0x39dd8e(0x217),_0x39dd8e(0x28d),_0x39dd8e(0x248),_0x39dd8e(0x1cc));\");}catch(e){}};function oo_oo(i:string,...v:any[]){try{oo_cm().consoleLog(i, v);}catch(e){} return v};oo_oo;function oo_tr(i:string,...v:any[]){try{oo_cm().consoleTrace(i, v);}catch(e){} return v};oo_tr;function oo_ts(){try{oo_cm().consoleTime();}catch(e){}};oo_ts;function oo_te(){try{oo_cm().consoleTimeEnd();}catch(e){}};oo_te;/*eslint eslint-comments/disable-enable-pair:,eslint-comments/no-unlimited-disable:,eslint-comments/no-aggregating-enable:,eslint-comments/no-duplicate-disable:,eslint-comments/no-unused-disable:,eslint-comments/no-unused-enable:,*/","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import type {\n  ApiMessage, ApiChat, ApiUser,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport {\n  getVideoAvatarMediaHash,\n  getChatAvatarHash,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isMessageDocumentPhoto,\n  isMessageDocumentVideo,\n  getMessageMediaFormat,\n  getMessageMediaThumbDataUri,\n  getMessageFileName,\n  getMessageDocument,\n  getPhotoFullDimensions,\n  getVideoDimensions,\n  getMessageFileSize,\n  getMessageActionPhoto,\n} from '../../../global/helpers';\nimport { useMemo } from '../../../lib/teact/teact';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport { MediaViewerOrigin } from '../../../types';\nimport { VIDEO_AVATAR_FULL_DIMENSIONS, AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\ntype UseMediaProps = {\n  mediaId?: number;\n  message?: ApiMessage;\n  avatarOwner?: ApiChat | ApiUser;\n  origin?: MediaViewerOrigin;\n  lastSyncTime?: number;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  message,\n  mediaId = 0,\n  avatarOwner,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const photo = message ? getMessagePhoto(message) : undefined;\n  const actionPhoto = message ? getMessageActionPhoto(message) : undefined;\n  const video = message ? getMessageVideo(message) : undefined;\n  const webPagePhoto = message ? getMessageWebPagePhoto(message) : undefined;\n  const webPageVideo = message ? getMessageWebPageVideo(message) : undefined;\n  const isDocumentPhoto = message ? isMessageDocumentPhoto(message) : false;\n  const isDocumentVideo = message ? isMessageDocumentVideo(message) : false;\n  const videoSize = message ? getMessageFileSize(message) : undefined;\n  const avatarMedia = avatarOwner?.photos?.[mediaId];\n  const isVideoAvatar = Boolean(avatarMedia?.isVideo || actionPhoto?.isVideo);\n  const isVideo = Boolean(video || webPageVideo || isDocumentVideo);\n  const isPhoto = Boolean(!isVideo && (photo || webPagePhoto || isDocumentPhoto || actionPhoto));\n  const { isGif } = video || webPageVideo || {};\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaHash = useMemo(() => (isFull?: boolean) => {\n    if (avatarOwner) {\n      if (avatarMedia) {\n        if (avatarMedia.isVideo && isFull) {\n          return getVideoAvatarMediaHash(avatarMedia);\n        } else if (mediaId === 0) {\n          // Show preloaded avatar if this is the first media (when user clicks on profile info avatar)\n          return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n        } else {\n          return `photo${avatarMedia.id}?size=c`;\n        }\n      } else {\n        return getChatAvatarHash(avatarOwner, isFull ? 'big' : 'normal');\n      }\n    }\n    if (actionPhoto && isVideoAvatar && isFull) {\n      return `videoAvatar${actionPhoto.id}?size=u`;\n    }\n    return message && getMessageMediaHash(message, isFull ? 'full' : 'preview');\n  }, [avatarOwner, actionPhoto, isVideoAvatar, message, avatarMedia, mediaId]);\n\n  const pictogramBlobUrl = useMedia(\n    message\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocumentPhoto || isDocumentVideo)\n    && getMessageMediaHash(message, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    undefined,\n    delay,\n  );\n  const previewMediaHash = getMediaHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    undefined,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaHash(true),\n    undefined,\n    message && getMessageMediaFormat(message, 'full'),\n    undefined,\n    delay,\n  );\n\n  const localBlobUrl = (photo || video) ? (photo || video)!.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && message && getMessageMediaThumbDataUri(message));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    !isVideo ? previewBlobUrl || pictogramBlobUrl || bestImageData : undefined\n  );\n  const isLocal = Boolean(localBlobUrl);\n  const fileName = message\n    ? getMessageFileName(message)\n    : avatarOwner\n      ? `avatar${avatarOwner!.id}.${avatarOwner?.hasVideoAvatar ? 'mp4' : 'jpg'}`\n      : undefined;\n\n  const dimensions = useMemo(() => {\n    if (message) {\n      if (isDocumentPhoto || isDocumentVideo) {\n        return getMessageDocument(message)!.mediaSize!;\n      } else if (photo || webPagePhoto || actionPhoto) {\n        return getPhotoFullDimensions((photo || webPagePhoto || actionPhoto)!)!;\n      } else if (video || webPageVideo) {\n        return getVideoDimensions((video || webPageVideo)!)!;\n      }\n    } else {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n    return undefined;\n  }, [\n    isDocumentPhoto,\n    isDocumentVideo,\n    isVideoAvatar,\n    message,\n    photo,\n    video,\n    actionPhoto,\n    webPagePhoto,\n    webPageVideo,\n  ]);\n\n  return {\n    getMediaHash,\n    photo,\n    video,\n    webPagePhoto,\n    actionPhoto,\n    webPageVideo,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocumentPhoto,\n    isDocumentVideo,\n    fileName,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    avatarPhoto: avatarMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    videoSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\nimport useBlur from './useBlur';\nimport { imgToCanvas } from '../util/files';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { createSignal } from '../../../util/signals';\nimport { useEffect } from '../../../lib/teact/teact';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum } from '../../types';\n\nimport {\n  selectAllowedMessageActions,\n  selectChat,\n  selectCurrentMessageList,\n  selectUser,\n} from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  onClose: NoneToVoidFunction;\n  onConfirm?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n  } = getActions();\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    onClose();\n  }, [onConfirm, album, message.id, deleteMessages, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    onClose();\n  }, [onConfirm, album, message.id, isSchedule, onClose, deleteScheduledMessages, deleteMessages]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen && !canDeleteForAll ? handleDeleteMessageForSelf : undefined}\n      className=\"delete\"\n      title={lang('DeleteSingleMessagesTitle')}\n    >\n      <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n      )}\n      {willDeleteForAll && (\n        <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n            {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, isSchedule }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n    const chat = selectChat(global, message.chatId);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport { isUserId } from '../../global/helpers';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import React, {\n  memo,\n  useCallback,\n  useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiMessage, ApiPhoto, ApiChat, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { MenuItemProps } from '../ui/MenuItem';\n\nimport {\n  selectIsDownloading,\n  selectIsMessageProtected,\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n} from '../../global/selectors';\nimport { getMessageMediaFormat, getMessageMediaHash, isUserId } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport DeleteMessageModal from '../common/DeleteMessageModal';\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  avatarOwnerId?: string;\n};\n\ntype OwnProps = {\n  mediaData?: string;\n  isVideo: boolean;\n  message?: ApiMessage;\n  canUpdateMedia?: boolean;\n  isSingleMedia?: boolean;\n  avatarPhoto?: ApiPhoto;\n  avatarOwner?: ApiChat | ApiUser;\n  fileName?: string;\n  canReport?: boolean;\n  selectMedia: (mediaId?: number) => void;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  mediaData,\n  isVideo,\n  message,\n  avatarPhoto,\n  avatarOwnerId,\n  fileName,\n  isChatProtected,\n  isDownloading,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  selectMedia,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n  } = getActions();\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    message && getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    message && getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message: message! });\n    } else {\n      downloadMessageMedia({ message: message! });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleZoomOut = useCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  }, [getZoomChange, setZoomChange]);\n\n  const handleZoomIn = useCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  }, [getZoomChange, setZoomChange]);\n\n  const handleUpdate = useCallback(() => {\n    if (!avatarPhoto || !avatarOwnerId) return;\n    if (isUserId(avatarOwnerId)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwnerId, photo: avatarPhoto });\n    }\n    selectMedia(0);\n  }, [avatarPhoto, avatarOwnerId, selectMedia, updateProfilePhoto, updateChatPhoto]);\n\n  const lang = useLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModals() {\n    return message\n      ? (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          message={message}\n        />\n      )\n      : (avatarOwnerId && avatarPhoto) ? (\n        <DeleteProfilePhotoModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onConfirm={onBeforeDelete}\n          profileId={avatarOwnerId}\n          photo={avatarPhoto}\n        />\n      ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected) {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (!message?.isForwardingAllowed && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'cancel' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'report',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModal,\n        children: lang('Delete'),\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModals()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {message?.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModal}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModals()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message, canUpdateMedia, avatarPhoto, avatarOwner,\n  }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isDownloading = message ? selectIsDownloading(global, message) : false;\n    const isProtected = selectIsMessageProtected(global, message);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarHash);\n    const canDeleteAvatar = canUpdateMedia && !!avatarPhoto;\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && !!avatarPhoto && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      isDownloading,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      avatarOwnerId: avatarOwner?.id,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport { throttle } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">{text}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { createSignal } from '../../../util/signals';\nimport { useEffect } from '../../../lib/teact/teact';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { requestMutation } from '../fasterdom/fasterdom';\n\nimport { callApi } from '../../api/gramjs';\nimport { ApiMediaFormat } from '../../api/types';\nimport { IS_ANDROID, IS_IOS, ARE_WEBCODECS_SUPPORTED } from '../../util/windowEnvironment';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = ARE_WEBCODECS_SUPPORTED && !IS_MOBILE ? 80 : 40;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => videoPreview?.destroy();\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FWH9e05HHn4BJrkuqmgL\",\"preview\":\"PmR9chdfbwrolc8FOkNB\",\"previewCanvas\":\"O7IGkaF5yzopTKVImH2v\",\"previewTime\":\"R85IB61J5InMMYwLQWxU\",\"previewTimeText\":\"QBMgsZDdCiXJzzHzd8rg\",\"track\":\"YiY5CtrarIYsGovxCo1b\",\"buffered\":\"s3rSBAeNFQimTK3eRl8t\",\"played\":\"sQTcQShWx8rMXJFKN2hO\",\"seeking\":\"pNanY7hqtTLHXdRob0qg\"};","import React, {\n  useRef, useState, useCallback, useEffect, memo, useMemo, useLayoutEffect,\n} from '../../lib/teact/teact';\n\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { ApiDimensions } from '../../api/types';\n\nimport useSignal from '../../hooks/useSignal';\nimport useCurrentTimeSignal from './hooks/currentTimeSignal';\n\nimport { captureEvents } from '../../util/captureEvents';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { clamp, round } from '../../util/math';\n\nimport { createVideoPreviews, renderVideoPreview, getPreviewDimensions } from '../../lib/video-preview/VideoPreview';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  isActive?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst SeekLine: React.FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  url,\n  isActive,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  }, [setPreviewTime]);\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!isLockedRef.current && !isSeeking) {\n      setSelectedTime(getCurrentTime());\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, 500);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useEffect, useMemo, useLayoutEffect,\n} from '../../lib/teact/teact';\n\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { ApiDimensions } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useSignal from '../../hooks/useSignal';\nimport useCurrentTimeSignal from './hooks/currentTimeSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\n\nimport SeekLine from './SeekLine';\nimport Button from '../ui/Button';\nimport RangeSlider from '../ui/RangeSlider';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void ;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useLang();\n\n  const handleSeek = useCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  }, [onSeek, setIsSeeking]);\n\n  const handleSeekStart = useCallback(() => {\n    setIsSeeking(true);\n  }, [setIsSeeking]);\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { clamp } from '../../util/math';\nimport useBuffering from '../../hooks/useBuffering';\nimport useFullscreen from '../../hooks/useFullscreen';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from './hooks/currentTimeSignal';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  }, [setMediaViewerHidden]);\n\n  const handleLeaveFullscreen = useCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  }, [setMediaViewerHidden]);\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useCallback(() => {\n    toggleControls(true);\n  }, [toggleControls]);\n\n  const handleVideoLeave = useCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  }, [toggleControls]);\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  }, [isPlaying]);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  }, [onClose, shouldCloseOnClick, togglePlayState, isClickDisabled]);\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n\n  const handleTimeUpdate = useCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  }, [isLooped, setCurrentTime]);\n\n  const handleEnded = useCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  }, [isLooped, setCurrentTime, toggleControls]);\n\n  const handleFullscreenChange = useCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  }, [exitFullscreen, isFullscreen, setFullscreen]);\n\n  const handleSeek = useCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  }, []);\n\n  const handleVolumeChange = useCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  }, [setMediaViewerVolume]);\n\n  const handleVolumeMuted = useCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  }, [isMuted, setMediaViewerMuted]);\n\n  const handlePlaybackRateChange = useCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  }, [setMediaViewerPlaybackRate]);\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n        >\n          {url && <source src={url} />}\n        </video>\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            square\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiDimensions, ApiMessage, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  IS_TOUCH_ENV, IS_IOS, IS_ANDROID, ARE_WEBCODECS_SUPPORTED,\n} from '../../util/windowEnvironment';\nimport {\n  selectChat, selectChatMessage, selectTabState, selectIsMessageProtected, selectScheduledMessage, selectUser,\n} from '../../global/selectors';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport stopEvent from '../../util/stopEvent';\nimport buildClassName from '../../util/buildClassName';\nimport { useMediaProps } from './hooks/useMediaProps';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  mediaId?: number;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  isMoving?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  mediaId?: number;\n  senderId?: string;\n  threadId?: number;\n  avatarOwner?: ApiChat | ApiUser;\n  message?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst IS_PREVIEW_DISABLED = (IS_IOS || IS_ANDROID) && !ARE_WEBCODECS_SUPPORTED;\n\nconst MediaViewerContent: FC<OwnProps & StateProps> = (props) => {\n  const {\n    mediaId,\n    isActive,\n    avatarOwner,\n    chatId,\n    message,\n    origin,\n    withAnimation,\n    isProtected,\n    volume,\n    playbackRate,\n    isMuted,\n    isHidden,\n    onClose,\n    onFooterClick,\n    isMoving,\n  } = props;\n\n  const lang = useLang();\n\n  const {\n    isVideo,\n    isPhoto,\n    actionPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    videoSize,\n    loadProgress,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useCallback(() => {\n    toggleControls(true);\n  }, [toggleControls]);\n\n  if (avatarOwner || actionPhoto) {\n    if (!isVideoAvatar) {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={chatId} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={mediaId}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={videoSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={IS_PREVIEW_DISABLED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  if (!message) return undefined;\n  const textParts = message.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText(message);\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = message && calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={mediaId}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={videoSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={IS_PREVIEW_DISABLED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n    } = ownProps;\n\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n    } = selectTabState(global).mediaViewer;\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { volume, isMuted, playbackRate };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        origin,\n        message,\n        isProtected: selectIsMessageProtected(global, message),\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const sender = selectUser(global, avatarOwnerId) || selectChat(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: sender,\n        origin,\n        volume,\n        isMuted,\n        isHidden,\n        playbackRate,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { volume, isMuted, playbackRate };\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      origin,\n      message,\n      isProtected: selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, IOS_SCREEN_EDGE_THRESHOLD } from '../../util/captureEvents';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useSignal from '../../hooks/useSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport { useFullscreenStatus } from '../../hooks/useFullscreen';\nimport useZoomChange from './hooks/useZoomChangeSignal';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  mediaId?: number;\n  getMediaId: (fromId?: number, direction?: number) => number | undefined;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  selectMedia: (id?: number) => void;\n  chatId?: string;\n  threadId?: number;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  onClose: () => void;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  onFooterClick: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  mediaId,\n  getMediaId,\n  selectMedia,\n  isVideo,\n  isGif,\n  isPhoto,\n  isOpen,\n  hasFooter,\n  withAnimation,\n  isHidden,\n  ...rest\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveMediaId, setActiveMediaId] = useSignal<number | undefined>(mediaId);\n  const activeMediaIdRef = useSignalRef(getActiveMediaId);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeMediaId = useDerivedState(getActiveMediaId);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n  const { onClose } = rest;\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectMediaDebounced = useDebouncedCallback(selectMedia, [selectMedia], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  }, [clickXThreshold, getControlsVisible, setControlsVisible, windowHeight, windowWidth]);\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveMediaId(mediaId);\n    }\n  }, [mediaId, setActiveMediaId, transformRef]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeMediaIdRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const mId = getMediaId(activeMediaIdRef.current, direction);\n      if (mId !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const mId = getMediaId(activeMediaIdRef.current, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (mId !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveMediaId(mId);\n        selectMediaDebounced(mId);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n        const threshold = 10;\n        const tolerance = 1.5;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > threshold || absOffsetX / absOffsetY > tolerance) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > threshold || absOffsetY / absOffsetX > tolerance) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    onClose,\n    setTransform,\n    getMediaId,\n    windowWidth,\n    windowHeight,\n    clickXThreshold,\n    shouldCloseOnVideo,\n    selectMediaDebounced,\n    setIsActiveDebounced,\n    clearSwipeDirectionDebounced,\n    withAnimation,\n    setIsMouseDown,\n    setIsActive,\n    isHidden,\n    isFullscreen,\n    transformRef,\n    setActiveMediaId,\n    activeMediaIdRef,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  if (activeMediaId === undefined) return undefined;\n\n  const nextMediaId = getMediaId(activeMediaId, 1);\n  const prevMediaId = getMediaId(activeMediaId, -1);\n  const hasPrev = prevMediaId !== undefined;\n  const hasNext = nextMediaId !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={prevMediaId}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...rest}\n          mediaId={activeMediaId}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            {...rest}\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            mediaId={nextMediaId}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiUser } from '../../api/types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport { formatMediaDateTime } from '../../util/dateFormat';\nimport renderText from '../common/helpers/renderText';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectSender,\n  selectUser,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  messageId?: number;\n  isAvatar?: boolean;\n  isFallbackAvatar?: boolean;\n};\n\ntype StateProps = {\n  sender?: ApiUser | ApiChat;\n  message?: ApiMessage;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  messageId,\n  sender,\n  isFallbackAvatar,\n  isAvatar,\n  message,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useCallback(() => {\n    closeMediaViewer();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, messageId });\n    }\n  }, [chatId, isMobile, focusMessage, toggleChatInfo, messageId, closeMediaViewer]);\n\n  const lang = useLang();\n\n  if (!sender || (!message && !isAvatar)) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, sender);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      {isUserId(sender.id) ? (\n        <Avatar key={sender.id} size=\"medium\" user={sender as ApiUser} />\n      ) : (\n        <Avatar key={sender.id} size=\"medium\" chat={sender as ApiChat} />\n      )}\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {isAvatar\n            ? lang(isFallbackAvatar ? 'lng_mediaview_profile_public_photo' : 'lng_mediaview_profile_photo')\n            : formatMediaDateTime(lang, message!.date * 1000, true)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { chatId, messageId, isAvatar }): StateProps => {\n    if (isAvatar && chatId) {\n      return {\n        sender: isUserId(chatId) ? selectUser(global, chatId) : selectChat(global, chatId),\n      };\n    }\n\n    if (!messageId || !chatId) {\n      return {};\n    }\n\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      message,\n      sender: message && selectSender(global, message),\n    };\n  },\n)(SenderInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiMessage, ApiPhoto, ApiUser,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getActions, withGlobal } from '../../global';\nimport { getChatMediaMessageIds, isChatAdmin, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMediaSearch, selectTabState,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectScheduledMessage,\n  selectUser,\n  selectOutlyingListByMessageId,\n  selectUserFullInfo,\n  selectPerformanceSettingsValue,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useMediaProps } from './hooks/useMediaProps';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useStateRef } from '../../hooks/useStateRef';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: number;\n  mediaId?: number;\n  senderId?: string;\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatarOwner?: ApiChat | ApiUser;\n  avatarOwnerFallbackPhoto?: ApiPhoto;\n  message?: ApiMessage;\n  chatMessages?: Record<number, ApiMessage>;\n  collectionIds?: number[];\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst ANIMATION_DURATION = 350;\n\nconst MediaViewer: FC<StateProps> = ({\n  chatId,\n  threadId,\n  mediaId,\n  senderId,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatarOwner,\n  avatarOwnerFallbackPhoto,\n  message,\n  chatMessages,\n  collectionIds,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || mediaId);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const {\n    webPagePhoto,\n    webPageVideo,\n    isVideo,\n    actionPhoto,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n    avatarPhoto,\n    fileName,\n  } = useMediaProps({\n    message, avatarOwner, mediaId, origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = !!avatarPhoto && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  /* Navigation */\n  const singleMediaId = webPagePhoto || webPageVideo || actionPhoto ? mediaId : undefined;\n\n  const mediaIds = useMemo(() => {\n    if (singleMediaId) {\n      return [singleMediaId];\n    } else if (avatarOwner) {\n      return avatarOwner.photos?.map((p, i) => i) || [];\n    } else {\n      return getChatMediaMessageIds(chatMessages || {}, collectionIds || [], isFromSharedMedia);\n    }\n  }, [singleMediaId, avatarOwner, chatMessages, collectionIds, isFromSharedMedia]);\n\n  const selectedMediaIndex = mediaId ? mediaIds.indexOf(mediaId) : -1;\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || !animationKey.current)) {\n    animationKey.current = selectedMediaIndex;\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n    // Disable user selection if media viewer is open, to prevent accidental text selection\n    if (IS_TOUCH_ENV) {\n      document.body.classList.toggle('no-selection', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    if (typeof mql.addEventListener === 'function') {\n      mql.addEventListener('change', forceUpdate);\n    } else if (typeof mql.addListener === 'function') {\n      mql.addListener(forceUpdate);\n    }\n\n    return () => {\n      if (typeof mql.removeEventListener === 'function') {\n        mql.removeEventListener('change', forceUpdate);\n      } else if (typeof mql.removeListener === 'function') {\n        mql.removeListener(forceUpdate);\n      }\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwner = usePrevious<ApiChat | ApiUser | undefined>(avatarOwner);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText(message) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevMediaId !== mediaId;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (!prevMessage || shouldAnimateOpening) && !prevAvatarOwner) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message);\n    }\n\n    if (isGhostAnimation && !isOpen && (prevMessage || prevAvatarOwner)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage || undefined);\n    }\n  }, [\n    isGhostAnimation, isOpen, shouldAnimateOpening, origin, prevOrigin, message, prevMessage, prevAvatarOwner,\n    bestImageData, prevBestImageData, dimensions, isVideo, hasFooter,\n  ]);\n\n  const handleClose = useCallback(() => closeMediaViewer(), [closeMediaViewer]);\n\n  const mediaIdRef = useStateRef(mediaId);\n  const handleFooterClick = useCallback(() => {\n    handleClose();\n\n    const currentMediaId = mediaIdRef.current;\n\n    if (!chatId || !currentMediaId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId: currentMediaId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId: currentMediaId });\n    }\n  }, [handleClose, mediaIdRef, chatId, isMobile, threadId]);\n\n  const handleForward = useCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [mediaId!],\n    });\n  }, [openForwardMenu, chatId, mediaId]);\n\n  const selectMedia = useCallback((id?: number) => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      mediaId: id,\n      avatarOwnerId: avatarOwner?.id,\n      origin: origin!,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  }, [avatarOwner?.id, chatId, openMediaViewer, origin, threadId]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const mediaIdsRef = useStateRef(mediaIds);\n\n  const getMediaId = useCallback((fromId?: number, direction?: number): number | undefined => {\n    if (fromId === undefined) return undefined;\n    const mIds = mediaIdsRef.current;\n    const index = mIds.indexOf(fromId);\n    if ((direction === -1 && index > 0) || (direction === 1 && index < mIds.length - 1)) {\n      return mIds[index + direction];\n    }\n    return undefined;\n  }, [mediaIdsRef]);\n\n  const handleBeforeDelete = useCallback(() => {\n    if (mediaIds.length <= 1) {\n      handleClose();\n      return;\n    }\n    let index = mediaId ? mediaIds.indexOf(mediaId) : -1;\n    // Before deleting, select previous media or the first one\n    index = index > 0 ? index - 1 : 0;\n    selectMedia(mediaIds[index]);\n  }, [handleClose, mediaId, mediaIds, selectMedia]);\n\n  const lang = useLang();\n\n  function renderSenderInfo() {\n    return avatarOwner ? (\n      <SenderInfo\n        key={mediaId}\n        chatId={avatarOwner.id}\n        isAvatar\n        isFallbackAvatar={isUserId(avatarOwner.id)\n          && (avatarOwner as ApiUser).photos?.[mediaId!].id === avatarOwnerFallbackPhoto?.id}\n      />\n    ) : (\n      <SenderInfo\n        key={mediaId}\n        chatId={chatId}\n        messageId={mediaId}\n      />\n    );\n  }\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          {renderSenderInfo()}\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          message={message}\n          canUpdateMedia={canUpdateMedia}\n          avatarPhoto={avatarPhoto}\n          avatarOwner={avatarOwner}\n          fileName={fileName}\n          canReport={canReport}\n          selectMedia={selectMedia}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatarPhoto}\n          chatId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        mediaId={mediaId}\n        getMediaId={getMediaId}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectMedia={selectMedia}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      mediaId,\n      avatarOwnerId,\n      origin,\n      isHidden,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId } = global;\n    let isChatWithSelf = !!chatId && selectIsChatWithSelf(global, chatId);\n\n    if (origin === MediaViewerOrigin.SearchResult) {\n      if (!(chatId && mediaId)) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      const message = selectChatMessage(global, chatId, mediaId);\n      if (!message) {\n        return { withAnimation, shouldSkipHistoryAnimations };\n      }\n\n      return {\n        chatId,\n        mediaId,\n        senderId: message.senderId,\n        isChatWithSelf,\n        origin,\n        message,\n        withAnimation,\n        isHidden,\n        shouldSkipHistoryAnimations,\n      };\n    }\n\n    if (avatarOwnerId) {\n      const user = selectUser(global, avatarOwnerId);\n      const chat = selectChat(global, avatarOwnerId);\n      let canUpdateMedia = false;\n      if (user) {\n        canUpdateMedia = avatarOwnerId === currentUserId;\n      } else if (chat) {\n        canUpdateMedia = isChatAdmin(chat);\n      }\n\n      isChatWithSelf = selectIsChatWithSelf(global, avatarOwnerId);\n\n      return {\n        mediaId,\n        senderId: avatarOwnerId,\n        avatarOwner: user || chat,\n        avatarOwnerFallbackPhoto: user ? selectUserFullInfo(global, avatarOwnerId)?.fallbackPhoto : undefined,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n      };\n    }\n\n    if (!(chatId && threadId && mediaId)) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let message: ApiMessage | undefined;\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      message = selectScheduledMessage(global, chatId, mediaId);\n    } else {\n      message = selectChatMessage(global, chatId, mediaId);\n    }\n\n    if (!message) {\n      return { withAnimation, shouldSkipHistoryAnimations };\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n      chatMessages = selectChatScheduledMessages(global, chatId);\n    } else {\n      chatMessages = selectChatMessages(global, chatId);\n    }\n    let collectionIds: number[] | undefined;\n\n    if (origin === MediaViewerOrigin.Inline\n      || origin === MediaViewerOrigin.Album) {\n      collectionIds = selectOutlyingListByMessageId(global, chatId, threadId, message.id)\n        || selectListedIds(global, chatId, threadId);\n    } else if (origin === MediaViewerOrigin.SharedMedia) {\n      const currentSearch = selectCurrentMediaSearch(global);\n      const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n      collectionIds = foundIds;\n    }\n\n    return {\n      chatId,\n      threadId,\n      mediaId,\n      senderId: message.senderId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectionIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n    };\n  },\n)(MediaViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useRef, useCallback, useState, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport InputText from '../ui/InputText';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  chatsById?: Record<string, ApiChat>;\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  chatsById,\n  search,\n  searchPlaceholder,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useCallback(() => {\n    onSearchChange('');\n  }, [onSearchChange]);\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const topicsResult = forumId ? chatsById?.[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById![forumId!], topic.id)\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [chatsById, forumId, topicSearch]);\n\n  const handleHeaderBackClick = useCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  }, []);\n\n  const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  }, [onSearchChange]);\n\n  const handleTopicSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  }, []);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById?.[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useCallback((e: React.MouseEvent, chatId: string) => {\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  }, [chatsById, loadTopics, onSelectChatOrUser, resetSearch]);\n\n  const handleTopicClick = useCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  }, [forumId, onSelectChatOrUser]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"ChatOrUserPicker\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat, ApiChatType } from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport { unique } from '../../util/iteratees';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n  sortChatIds,\n} from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: number) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatsById: Record<string, ApiChat>;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  chatsById,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), chatsById, undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, chatsById, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={renderingIds}\n      chatsById={chatsById}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsById,\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      chatsById,\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n}) => {\n  const {\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    if (recipientId === currentUserId) {\n      forwardToSavedMessages();\n      showNotification({\n        message: lang(isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One'),\n      });\n    } else {\n      setForwardChatOrTopic({ chatId: recipientId, topicId: threadId });\n    }\n  }, [currentUserId, forwardToSavedMessages, isManyMessages, lang, setForwardChatOrTopic, showNotification]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (selectTabState(global).forwardMessages.messageIds?.length || 0) > 1,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: number) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { TabState } from '../../global/types';\n\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Avatar from '../common/Avatar';\n\ntype StateProps = {\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"XxZ7KIBUQzsSYf8KZiIc\"};","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiUser } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\nimport { getUserFullName } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Checkbox from '../ui/Checkbox';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  urlAuth?: TabState['urlAuth'];\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps> = ({\n  urlAuth, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(urlAuth, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (urlAuth?.url && isLoginChecked) {\n      const acceptAction = urlAuth.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    urlAuth, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(urlAuth?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(UrlAuthModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useMemo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatTime, formatDateToString, getDayStart } from '../../util/dateFormat';\nimport type { LangFn } from '../../hooks/useLang';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useFlag from '../../hooks/useFlag';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused, unmarkTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    onSubmit(selectedDate);\n  }, [onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n          onBlur={unmarkTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <Button onClick={handleSubmit}>\n          {submitLabel}\n        </Button>\n        {secondButtonLabel && (\n          <Button onClick={onSecondButtonClick} isText>\n            {secondButtonLabel}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport Modal from '../ui/Modal';\nimport Avatar from '../common/Avatar';\nimport InputText from '../ui/InputText';\nimport Checkbox from '../ui/Checkbox';\nimport Button from '../ui/Button';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            user={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nexport type PopupOptions = {\n  title: string;\n  message: string;\n  buttons: {\n    id: string;\n    type: 'default' | 'ok' | 'close' | 'cancel' | 'destructive';\n    text: string;\n  }[];\n};\n\nexport type WebAppInboundEvent = {\n  eventType: 'web_app_data_send';\n  eventData: {\n    data: string;\n  };\n} | {\n  eventType: 'web_app_setup_main_button';\n  eventData: {\n    is_visible: boolean;\n    is_active: boolean;\n    text: string;\n    color: string;\n    text_color: string;\n    is_progress_visible: boolean;\n  };\n} | {\n  eventType: 'web_app_setup_back_button';\n  eventData: {\n    is_visible: boolean;\n  };\n} | {\n  eventType: 'web_app_open_link';\n  eventData: {\n    url: string;\n    try_instant_view?: boolean;\n  };\n} | {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full: string;\n  };\n} | {\n  eventType: 'web_app_open_invoice';\n  eventData: {\n    slug: string;\n  };\n} | {\n  eventType: 'web_app_trigger_haptic_feedback';\n  eventData: {\n    type: 'impact' | 'notification' | 'selection_change';\n    impact_style?: 'light' | 'medium' | 'heavy';\n    notification_type?: 'error' | 'success' | 'warning';\n  };\n} | {\n  eventType: 'web_app_set_background_color';\n  eventData: {\n    color: string;\n  };\n} | {\n  eventType: 'web_app_set_header_color';\n  eventData: {\n    color_key: 'bg_color' | 'secondary_bg_color';\n  };\n} | {\n  eventType: 'web_app_open_popup';\n  eventData: PopupOptions;\n} | {\n  eventType: 'web_app_setup_closing_behavior';\n  eventData: {\n    need_confirmation: boolean;\n  };\n} | {\n  eventType: 'web_app_open_scan_qr_popup';\n  eventData: {\n    text?: string;\n  };\n} | {\n  eventType: 'web_app_read_text_from_clipboard';\n  eventData: {\n    req_id: string;\n  };\n} | {\n  eventType: 'web_app_switch_inline_query';\n  eventData: {\n    query: string;\n    chat_types: ('users' | 'bots' | 'groups' | 'channels')[];\n  };\n} | {\n  eventType: 'web_app_request_viewport' | 'web_app_request_theme' | 'web_app_ready' | 'web_app_expand'\n  | 'web_app_request_phone' | 'web_app_close' | 'iframe_ready' | 'web_app_close_scan_qr_popup';\n  eventData: null;\n};\n\ntype WebAppOutboundEvent = {\n  eventType: 'viewport_changed';\n  eventData: {\n    height: number;\n    width?: number;\n    is_expanded?: boolean;\n    is_state_stable?: boolean;\n  };\n} | {\n  eventType: 'theme_changed';\n  eventData: {\n    theme_params: {\n      bg_color: string;\n      text_color: string;\n      hint_color: string;\n      link_color: string;\n      button_color: string;\n      button_text_color: string;\n      secondary_bg_color: string;\n    };\n  };\n} | {\n  eventType: 'set_custom_style';\n  eventData: string;\n} | {\n  eventType: 'invoice_closed';\n  eventData: {\n    slug: string;\n    status: 'paid' | 'cancelled' | 'pending' | 'failed';\n  };\n} | {\n  eventType: 'phone_requested';\n  eventData: {\n    phone_number: string;\n  };\n} | {\n  eventType: 'popup_closed';\n  eventData: {\n    button_id?: string;\n  };\n} | {\n  eventType: 'qr_text_received';\n  eventData: {\n    data: string;\n  };\n} | {\n  eventType: 'clipboard_text_received';\n  eventData: {\n    req_id: string;\n    data: string | null;\n  };\n} | {\n  eventType: 'main_button_pressed' | 'back_button_pressed' | 'settings_button_pressed' | 'scan_qr_popup_closed';\n};\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const reloadFrame = useCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  }, [ref]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      // Handle some app requests here to simplify hook usage\n      if (data.eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (data.eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (data.eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (data.eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n      }\n\n      if (data.eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      if (data.eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: data.eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { ThemeKey } from '../../types';\nimport type { PopupOptions, WebAppInboundEvent } from './hooks/useWebAppFrame';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { extractCurrentThemeParams, validateHexColor } from '../../util/themeStyle';\nimport { convertToApiChatType } from '../../global/helpers';\n\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useWebAppFrame from './hooks/useWebAppFrame';\nimport usePrevious from '../../hooks/usePrevious';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Spinner from '../ui/Spinner';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  webApp?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  webApp,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    openInvoice,\n    setWebAppPaymentSlug,\n    showNotification,\n    switchBotInline,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n  const [confirmClose, setConfirmClose] = useState(false);\n  const [isCloseModalOpen, openCloseModal, closeModal] = useFlag(false);\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n  const [popupParams, setPopupParams] = useState<PopupOptions | undefined>();\n  const { isMobile } = useAppLayout();\n  const prevPopupParams = usePrevious(popupParams);\n  const renderingPopupParams = popupParams || prevPopupParams;\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useLang();\n  const {\n    url, buttonText, queryId, replyToMessageId, threadId,\n  } = webApp || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const handleEvent = useCallback((event: WebAppInboundEvent) => {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_close') {\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_open_invoice') {\n      setWebAppPaymentSlug({\n        slug: eventData.slug,\n      });\n      openInvoice({\n        slug: eventData.slug,\n      });\n    }\n\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_open_link') {\n      const linkUrl = eventData.url;\n      window.open(linkUrl, '_blank', 'noreferrer');\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const themeParams = extractCurrentThemeParams();\n      const key = eventData.color_key;\n      const newColor = themeParams[key];\n      const color = validateHexColor(newColor) ? newColor : themeParams.bg_color;\n      setHeaderColor(color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setConfirmClose(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (!eventData.message.trim().length || !eventData.buttons?.length || eventData.buttons.length > 3) return;\n      setPopupParams(eventData);\n    }\n\n    if (eventType === 'web_app_open_scan_qr_popup') {\n      showNotification({\n        message: 'Scan QR code is not supported in this client yet',\n      });\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n  }, [\n    bot, buttonText, closeWebApp, openInvoice, openTelegramLink, sendWebViewData, setWebAppPaymentSlug,\n    isPaymentModalOpen, showNotification,\n  ]);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyToMessageId,\n      threadId,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  }, [sendEvent]);\n\n  const handleSettingsButtonClick = useCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  }, [sendEvent]);\n\n  const handleRefreshClick = useCallback(() => {\n    reloadFrame(webApp!.url);\n  }, [reloadFrame, webApp]);\n\n  const handleClose = useCallback(() => {\n    if (confirmClose) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  }, [confirmClose, openCloseModal, closeWebApp]);\n\n  const handlePopupClose = useCallback((buttonId?: string) => {\n    setPopupParams(undefined);\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  }, [sendEvent]);\n\n  const handlePopupModalClose = useCallback(() => {\n    handlePopupClose();\n  }, [handlePopupClose]);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, setWebAppPaymentSlug, webApp]);\n\n  const handleToggleClick = useCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: !attachBot,\n    });\n  }, [bot, attachBot, toggleAttachBot]);\n\n  const handleBackClick = useCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  }, [handleClose, isBackButtonVisible, sendEvent]);\n\n  const openBotChat = useCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  }, [bot, closeWebApp, openChat]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setConfirmClose(false);\n      closeModal();\n      setPopupParams(undefined);\n      markUnloaded();\n    }\n  }, [closeModal, isOpen, markUnloaded]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" style={`background-color: ${headerColor}`}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {attachBot?.hasSettings && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n    }\n  }, [isOpen]);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      {confirmClose && (\n        <ConfirmDialog\n          isOpen={isCloseModalOpen}\n          onClose={closeModal}\n          title={lang('lng_bot_close_warning_title')}\n          text={lang('lng_bot_close_warning')}\n          confirmHandler={closeWebApp}\n          confirmIsDestructive\n          confirmLabel={lang('lng_bot_close_warning_sure')}\n        />\n      )}\n      {renderingPopupParams && (\n        <Modal\n          isOpen={Boolean(popupParams)}\n          title={renderingPopupParams.title || NBSP}\n          onClose={handlePopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !renderingPopupParams.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {renderingPopupParams.message}\n          <div className=\"dialog-buttons mt-2\">\n            {renderingPopupParams.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handlePopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { webApp }): StateProps => {\n    const { botId } = webApp || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"U2Fx70_Xnn6MxQAo6lWe\",\"close-icon\":\"E9BBt8AWQ1LGCzqQYN0D\",\"closeIcon\":\"E9BBt8AWQ1LGCzqQYN0D\",\"state-back\":\"Skbl2Bsgn5Ev9sxPJaZ1\",\"stateBack\":\"Skbl2Bsgn5Ev9sxPJaZ1\",\"loading-spinner\":\"iHI2Sy6jZFDHhMiT5K_L\",\"loadingSpinner\":\"iHI2Sy6jZFDHhMiT5K_L\",\"hide\":\"F1D5Dm5CPeMaqWVDpYI1\",\"frame\":\"yFzw6MKed5SilXcABSY5\",\"with-button\":\"O33MOdec2Wd4r1fyRziT\",\"withButton\":\"O33MOdec2Wd4r1fyRziT\",\"main-button\":\"PzPxMQlmpQbPhl8MZSty\",\"mainButton\":\"PzPxMQlmpQbPhl8MZSty\",\"visible\":\"yLdyQH6R0YCJqkmkSvBH\",\"hidden\":\"CB9NVLPnqFkzbneBIuMs\",\"main-button-spinner\":\"z8CBciLaVx2qnhkzZO_c\",\"mainButtonSpinner\":\"z8CBciLaVx2qnhkzZO_c\",\"web-app-popup\":\"ift5IHKU51MeA7p6XdKh\",\"webAppPopup\":\"ift5IHKU51MeA7p6XdKh\",\"without-title\":\"Umnydwi7nysRWdcQItB8\",\"withoutTitle\":\"Umnydwi7nysRWdcQItB8\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n  // Keep props a little bit longer, to show correct text on closing animation\n  const previousBot = usePrevious(bot, false);\n  const previousType = usePrevious(type, false);\n  const currentBot = bot || previousBot;\n  const currentType = type || previousType;\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = currentType === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (currentType) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(currentBot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(currentBot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [currentBot, currentType, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', currentBot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAttachBot } from '../../api/types';\n\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  bot?: ApiAttachBot;\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  bot,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const [isWriteAllowed, setIsWriteAllowed] = useState(bot?.shouldRequestWriteAccess || false);\n\n  const lang = useLang();\n\n  const prevBot = usePrevious(bot);\n  const renderingBot = bot || prevBot;\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed,\n    });\n  }, [confirmAttachBotInstall, isWriteAllowed]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsWriteAllowed(bot.shouldRequestWriteAccess ?? false);\n    }\n  }, [bot]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={renderingBot?.shortName}\n      confirmHandler={handleConfirm}\n    >\n      {lang('WebApp.AddToAttachmentText', renderingBot?.shortName)}\n      {renderingBot?.shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', renderingBot?.shortName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qiAkShre9E6R3S_XXL9S\",\"floating-badge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floatingBadge\":\"gIcOQgrfw3soP3cK9s5Q\",\"floating-badge-triangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floatingBadgeTriangle\":\"Ip5PkcvyMOnN0RLpXLXO\",\"floating-badge-icon\":\"y7T3FpaFXDsnPGk6dPmg\",\"floatingBadgeIcon\":\"y7T3FpaFXDsnPGk6dPmg\",\"text\":\"X0zFAEpRoPWj1yE904xR\",\"floating-badge-value\":\"rQ6ZdKdWi4HVydX6qhWS\",\"floatingBadgeValue\":\"rQ6ZdKdWi4HVydX6qhWS\",\"left-text\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"leftText\":\"kuq7sjJF6mvCc4Y5CXpv X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-text\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightText\":\"QWqqObtxZyakBzakEoyh X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"right-value\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"rightValue\":\"TCdcdr_TxlgpCSBV0ePq X0zFAEpRoPWj1yE904xR X0zFAEpRoPWj1yE904xR\",\"left-value\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"leftValue\":\"FaVxkFCcMpBfLY74WJZv X0zFAEpRoPWj1yE904xR\",\"line\":\"slESyAvUqizX4_EIX_yg\",\"left\":\"lQi3xqxjvl2Owb4ES2SM\",\"right\":\"Dcv5uphsn2Sxpg3ROS_u\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\n// eslint-disable-next-line max-len\nconst TRIANGLE_SVG = '<svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\"/></svg>';\n\ntype OwnProps = {\n  floatingBadgeIcon?: string;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, floatingBadgeIcon, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle} dangerouslySetInnerHTML={{ __html: TRIANGLE_SVG }} />\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jeeOV_UYyl50GFLOzjGC\",\"title\":\"SVqE3gr2ekQUWfFT_Mvg\",\"description\":\"mCBNPstzrSlOQsz6rOtE\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WHiQiGCtWfjSlEysEelB\",\"wrapper\":\"WUpKHfqLbeZmhfYqqiko\",\"down\":\"MiGmL4xqBPkxmLim4Ai0\",\"frame\":\"xuhT9JHpFkVsTcUWeh4L\",\"video\":\"sLLJqCkdSug4bzEQrACs\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport useMedia from '../../../../hooks/useMedia';\nimport buildClassName from '../../../../util/buildClassName';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NtJc4bt94t9fklIWC6wF\",\"arrow\":\"_rzXza87NHdAMH2TDKul\",\"right\":\"J4UYbae0Frt01jIavpB0\",\"arrow-hidden\":\"qd3rvhZma3JJmhdt07Ig\",\"arrowHidden\":\"qd3rvhZma3JJmhdt07Ig\",\"dot\":\"eCgEFkp07vgaUGwymYAQ\",\"medium\":\"AIpVWjJc47egZ8ATaC3n\",\"small\":\"MnRKztu0OZTyIywGLMc6\",\"invisible\":\"boSFbatyzatdw70J7mpu\",\"active\":\"nlCmVncFkKVtsawWqcfw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './SliderDots.module.scss';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dVn5gk50tXn1EiI4kJFJ\",\"sticker\":\"PIYKt4xxOUBpRjRu0b4q\",\"effect-sticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\",\"effectSticker\":\"JLzWnq8to4W24wBGmbyt PIYKt4xxOUBpRjRu0b4q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { ApiSticker } from '../../../../api/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\nimport useMedia from '../../../../hooks/useMedia';\nimport useFlag from '../../../../hooks/useFlag';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: NoneToVoidFunction;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useCallback(() => {\n    onClick(realIndex);\n  }, [onClick, realIndex]);\n\n  const handleEnded = useCallback(() => {\n    inanimate();\n    onEnded();\n  }, [inanimate, onEnded]);\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useCallback((i: number) => {\n    setOffset(-i);\n  }, []);\n\n  const handleEnded = useCallback(() => {\n    setTimeout(() => {\n      setOffset((current) => cycleRestrict(renderedStickers.length, current + 1));\n    }, ENDED_DELAY);\n  }, [renderedStickers.length]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {renderedStickers?.map((l, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={l}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QfngIllOc1THaTQiJf7h\",\"button\":\"n8tTb600de2uZKGkyw67\",\"button-content\":\"eZLuJy6dL4ekVllaRcCm\",\"buttonContent\":\"eZLuJy6dL4ekVllaRcCm\",\"back-button\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"backButton\":\"ZTIpWD6Zrj1U7rnGvrlD\",\"white-back-button\":\"E42Dy7DFLAxvj8HE4GAD\",\"whiteBackButton\":\"E42Dy7DFLAxvj8HE4GAD\",\"content\":\"JMdhJYW94Mas4JDye486\",\"frame\":\"fEQZ2fyO9g6L1v8QJUCJ\",\"slide\":\"xkC9BFxv7RkSwbPe4RMb\",\"limits\":\"zngeFAwxdlVJZY876fHc\",\"limits-content\":\"le7Qv9QkHlO3qdK0Hs_g\",\"limitsContent\":\"le7Qv9QkHlO3qdK0Hs_g\",\"header\":\"Mw81cOCIGy8KGn9VokFA\",\"no-header-border\":\"tRvcw256KSHRqgSj5uGX\",\"noHeaderBorder\":\"tRvcw256KSHRqgSj5uGX\",\"preview\":\"EXGFQjwHmQxjvMLbYtS9\",\"title\":\"eEYA2lXPy_DUKe8JKHiP\",\"description\":\"TVO7LjkV_yHUGIu5PXCA\",\"footer\":\"EKr_FVmiDSwhUxouhaqB\",\"no-footer-border\":\"H8z5Q6gsuqeCy82HFlyX\",\"noFooterBorder\":\"H8z5Q6gsuqeCy82HFlyX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPremiumPromo } from '../../../api/types';\nimport type { ApiLimitType, GlobalState } from '../../../global/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport useFlag from '../../../hooks/useFlag';\nimport renderText from '../../common/helpers/renderText';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\nimport SliderDots from '../../common/SliderDots';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<string, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n};\n\nexport const PREMIUM_FEATURE_SECTIONS = [\n  'double_limits',\n  'more_upload',\n  'faster_download',\n  'voice_to_text',\n  'no_ads',\n  'infinite_reactions',\n  'premium_stickers',\n  'animated_emoji',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n];\n\nconst PREMIUM_BOTTOM_VIDEOS: string[] = [\n  'faster_download',\n  'voice_to_text',\n  'advanced_chat_management',\n  'profile_badge',\n  'animated_userpics',\n  'emoji_status',\n];\n\ntype ApiLimitTypeWithoutUpload = Exclude<ApiLimitType, 'uploadMaxFileparts' | 'chatlistInvites' | 'chatlistJoined'>;\n\nconst LIMITS_ORDER: ApiLimitTypeWithoutUpload[] = [\n  'channels',\n  'dialogFolderPinned',\n  'channelsPublic',\n  'savedGifs',\n  'stickersFaved',\n  'aboutLength',\n  'captionLength',\n  'dialogFilters',\n  'dialogFiltersChats',\n];\n\nconst LIMITS_TITLES: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeWithoutUpload, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  onBack: VoidFunction;\n  initialSection: string;\n  promo: ApiPremiumPromo;\n  onClickSubscribe: (startParam?: string) => void;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  onBack,\n  onClickSubscribe,\n  isPremium,\n  limits,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  function handleClick() {\n    onClickSubscribe(initialSection);\n  }\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = e.currentTarget;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n    e.currentTarget.style.setProperty('--scroll-progress', progress.toString());\n    e.currentTarget.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = e.currentTarget.querySelector(`#premium_feature_preview_video_${reverseIndex}`);\n    prevElement?.classList.toggle('reverse', false);\n    reverseElement?.classList.toggle('reverse', true);\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = PREMIUM_FEATURE_SECTIONS.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, initialSection, prevInitialSection, startScrolling, stopScrolling]);\n\n  const handleSelectSlide = useCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  }, [startScrolling, stopScrolling]);\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {PREMIUM_FEATURE_SECTIONS.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        <Button\n          className={buildClassName(styles.button)}\n          isShiny={!isPremium}\n          withPremiumGradient={!isPremium}\n          onClick={isPremium ? onBack : handleClick}\n        >\n          {isPremium\n            ? lang('OK')\n            : lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PEnE7xWTMwTPGmhubmj6\",\"text\":\"U4UYSH7uHW3k4FlqBefm\",\"header\":\"Jdlm3dtJ8gOIY0x0u2d4\",\"description\":\"cE44My72bdvMJna9mgoc\",\"icon\":\"mxF3NdPgAi_H0ZFgNEtw\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport renderText from '../../common/helpers/renderText';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps = {\n  icon: string;\n  title: string;\n  text: string;\n  onClick: VoidFunction;\n  index: number;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n];\n\nconst PremiumFeatureItem: FC<OwnProps> = ({\n  icon,\n  title,\n  text,\n  index,\n  onClick,\n}) => {\n  return (\n    <ListItem buttonClassName={styles.root} onClick={onClick}>\n      <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: ${COLORS[index]}`} />\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JJNHc_FZuydBNBIHK9xC\",\"transition\":\"Q05gUm0HCMtSoeX2HVGw\",\"button\":\"Fb3VVHNrypZ3lhYfSVI_\",\"main\":\"E9_LJ9RqAHTj8h84EROt\",\"logo\":\"Vaf41aTAoSwl_e_cZhah\",\"header-text\":\"J2z1gqvfQu5kqV_UP8US\",\"headerText\":\"J2z1gqvfQu5kqV_UP8US\",\"description\":\"PXg8sU2cfdeysJXctlpB\",\"list\":\"LlPAfJpL066su4P2NFmh\",\"no-button\":\"wpPtJKCqTdOGkKoh7KTo\",\"noButton\":\"wpPtJKCqTdOGkKoh7KTo\",\"header\":\"Rwuf1efaEfZ13AD5XbCB\",\"hidden-header\":\"NV7fN3j69oFZEJu7ejG8\",\"hiddenHeader\":\"NV7fN3j69oFZEJu7ejG8\",\"close-button\":\"TyuYAZecpI2K_1i3B5XO\",\"closeButton\":\"TyuYAZecpI2K_1i3B5XO\",\"premium-header-text\":\"jA_DV7G5VJo8xGOe0otF\",\"premiumHeaderText\":\"jA_DV7G5VJo8xGOe0otF\",\"footer-text\":\"yVkdTScCEhH3EQMQiA42\",\"footerText\":\"yVkdTScCEhH3EQMQiA42\",\"primary-footer-text\":\"MQbFSG2o_R8rjKDsqs8R\",\"primaryFooterText\":\"MQbFSG2o_R8rjKDsqs8R\",\"footer\":\"FApXoTPpasib6Np5Uxpt\"};","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPremiumPromo, ApiUser } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_SECTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectTabState, selectIsCurrentUserPremium, selectUser } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\nimport { getUserFullName } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport Transition from '../../ui/Transition';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\n\nimport styles from './PremiumMainModal.module.scss';\n\nconst LIMIT_ACCOUNTS = 4;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<string, string> = {\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  isClosing?: boolean;\n  fromUser?: ApiUser;\n  toUser?: ApiUser;\n  initialSection?: string;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: string[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isClosing,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink,\n  } = getActions();\n\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<string | undefined>(initialSection);\n\n  const handleOpen = useCallback((section: string | undefined) => {\n    return () => {\n      setCurrentSection(section);\n    };\n  }, []);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  function handleClickWithStartParam(startParam?: string) {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  }\n\n  function handleClick() {\n    handleClickWithStartParam();\n  }\n\n  const showConfetti = useCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n      });\n    }\n  }, [isOpen, requestConfetti]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  if (!promo) return undefined;\n\n  // TODO Support all subscription options\n  const month = promo.options.find((option) => option.months === 1)!;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      // eslint-disable-next-line react/jsx-no-bind\n      onCloseAnimationEnd={() => closePremiumModal({ isClosed: true })}\n      onClose={closePremiumModal}\n      isOpen={isOpen && !isClosing}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            <img className={styles.logo} src={PremiumLogo} alt=\"\" />\n            <h2 className={styles.headerText}>\n              {renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    onClick={handleOpen(section)}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && (\n              <div className={styles.footer}>\n                {/* eslint-disable-next-line react/jsx-no-bind */}\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', formatCurrency(Number(month.amount), month.currency, lang.code))}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleOpen(undefined)}\n            promo={promo}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isClosing: premiumModal?.isClosing,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser: premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"c43s0Q6_xgGlM8sZxQ7Q\",\"active\":\"PjYaF42Oe55WgPpTP6Od\",\"input\":\"r03M3Tzd52_D2GCAdabK\",\"content\":\"oL_26LDnHDwJRxqKF1Kn\",\"month\":\"JmEuBQ4mFzu1MiFV5qSB\",\"perMonth\":\"hssGd7AUhDhhG2_aXqe9\",\"amount\":\"mhc9AgOUiNT2QMcErpQe\",\"discount\":\"WCXGWHYNQh8lg2rIWehC\"};","import type { ChangeEvent } from 'react';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPremiumGiftOption } from '../../../api/types';\n\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './GiftOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  onChange: (month: number) => void;\n};\n\nconst GiftOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount, onChange,\n}) => {\n  const lang = useLang();\n\n  const { months, amount, currency } = option;\n  const perMonth = Math.floor(amount / months);\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label className={buildClassName(styles.wrapper, checked && styles.active)} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"gift_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>{lang('Months', months)}</div>\n        <div className={styles.perMonth}>\n          {lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n          {Boolean(discount) && (\n            <span className={styles.discount} title={lang('GiftDiscount')}> &minus;{discount}% </span>\n          )}\n        </div>\n        <div className={styles.amount}>{formatCurrency(amount, currency, lang.code)}</div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiftOption);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPremiumGiftOption, ApiUser } from '../../../api/types';\n\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Avatar from '../../common/Avatar';\nimport GiftOption from './GiftOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  gifts?: ApiPremiumGiftOption[];\n  monthlyCurrency?: string;\n  monthlyAmount?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  user,\n  gifts,\n  monthlyCurrency,\n  monthlyAmount,\n}) => {\n  const { openPremiumModal, closeGiftPremiumModal, openUrl } = getActions();\n\n  const lang = useLang();\n  const renderedUser = useCurrentOrPrev(user, true);\n  const renderedGifts = useCurrentOrPrev(gifts, true);\n  const [selectedOption, setSelectedOption] = useState<number | undefined>();\n  const firstGift = renderedGifts?.[0];\n  const fullMonthlyAmount = useMemo(() => {\n    if (!renderedGifts || renderedGifts.length === 0 || !firstGift) {\n      return undefined;\n    }\n\n    const cheaperGift = renderedGifts.reduce((acc, gift) => {\n      return gift.amount < firstGift?.amount ? gift : firstGift;\n    }, firstGift);\n\n    return cheaperGift.currency === monthlyCurrency && monthlyAmount\n      ? monthlyAmount\n      : Math.floor(cheaperGift.amount / cheaperGift.months);\n  }, [firstGift, renderedGifts, monthlyAmount, monthlyCurrency]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedOption(firstGift?.months);\n    }\n  }, [firstGift?.months, isOpen]);\n\n  const selectedGift = useMemo(() => {\n    return renderedGifts?.find((gift) => gift.months === selectedOption);\n  }, [renderedGifts, selectedOption]);\n\n  const handleSubmit = useCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    closeGiftPremiumModal();\n    openUrl({ url: selectedGift.botUrl });\n  }, [closeGiftPremiumModal, openUrl, selectedGift]);\n\n  const handlePremiumClick = useCallback(() => {\n    openPremiumModal();\n  }, [openPremiumModal]);\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  return (\n    <Modal\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <Avatar\n          user={renderedUser}\n          size=\"jumbo\"\n          className={styles.avatar}\n        />\n        <h2 className={styles.headerText}>\n          {lang('GiftTelegramPremiumTitle')}\n        </h2>\n        <p className={styles.description}>\n          {renderText(\n            lang('GiftTelegramPremiumDescription', getUserFirstOrLastName(renderedUser)),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n\n        <div className={styles.options}>\n          {renderedGifts?.map((gift) => (\n            <GiftOption\n              key={gift.amount}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={gift.months === selectedOption}\n              onChange={setSelectedOption}\n            />\n          ))}\n        </div>\n\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      <Button className={styles.button} isShiny disabled={!selectedOption} onClick={handleSubmit}>\n        {lang(\n          'GiftSubscriptionFor',\n          selectedGift && formatCurrency(Number(selectedGift.amount), selectedGift.currency, lang.code),\n        )}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { forUserId, monthlyCurrency, monthlyAmount } = selectTabState(global).giftPremiumModal || {};\n  const user = forUserId ? selectUser(global, forUserId) : undefined;\n  const gifts = user ? selectUserFullInfo(global, user.id)?.premiumGifts : undefined;\n\n  return {\n    user,\n    gifts,\n    monthlyCurrency,\n    monthlyAmount: monthlyAmount ? Number(monthlyAmount) : undefined,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"K80So3B9potKGNvwdtYE\",\"closeButton\":\"dxx424IZDNuP1OLbUIve\",\"avatar\":\"qJgJ7R5NJVmAxBjT5LxT\",\"headerText\":\"eqCNa8zBoMroKcepfXyE\",\"description\":\"MtYhgDChavNfKIUAJPzt\",\"premiumFeatures\":\"J0hST5xsC45ZolfGpbDc\",\"options\":\"HyfHjS1vAds31eFcSpDg\",\"button\":\"sSXm9RjIQSsVFi0D1nEd\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport { getActions, withGlobal } from '../../../../global';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport useLang from '../../../../hooks/useLang';\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport useFlag from '../../../../hooks/useFlag';\n\nimport Modal from '../../../ui/Modal';\nimport Button from '../../../ui/Button';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'icon-chat-badge',\n  uploadMaxFileparts: 'icon-file-badge',\n  dialogFilters: 'icon-folder-badge',\n  dialogFolderPinned: 'icon-pin-badge',\n  channelsPublic: 'icon-link-badge',\n  channels: 'icon-chats-badge',\n  chatlistInvites: 'icon-link-badge',\n  chatlistJoined: 'icon-folder-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.subscribeButton)}\n          isShiny\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <i className={buildClassName(styles.buttonIcon, 'icon', 'icon-double-badge')} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iz5RJvcQyNNDQzKfXQbN\",\"limit-compare\":\"az3lXhmlMfZfIQ_81jog\",\"limitCompare\":\"az3lXhmlMfZfIQ_81jog\",\"limit-badge\":\"womlEQglVV1w8ltVa6PQ\",\"limitBadge\":\"womlEQglVV1w8ltVa6PQ\",\"limit-value\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limitValue\":\"QC8Xe4ShGc_q82s4Tjmg\",\"limit-icon\":\"q8SgjqQqlOVMSofzhdwh\",\"limitIcon\":\"q8SgjqQqlOVMSofzhdwh\",\"dialog-buttons\":\"DgRFl7StCs4fhROb7CKH\",\"dialogButtons\":\"DgRFl7StCs4fhROb7CKH\",\"subscribe-button\":\"Twnx_5clE9fKNOMo7lXf\",\"subscribeButton\":\"Twnx_5clE9fKNOMo7lXf\",\"button-icon\":\"BW05mF5k9uq5qBi_BYzg\",\"buttonIcon\":\"BW05mF5k9uq5qBi_BYzg\"};","import type { RefObject } from 'react';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport { useCallback, useRef, useState } from '../../../lib/teact/teact';\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  }, [containerRef, idPrefix]);\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","import { useCallback, useState } from '../lib/teact/teact';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  }, [threshold]);\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xW0m4eR0ukCfRp6WS_Qd\",\"selected\":\"XTCJlnWtVba28wuDmeBN\"};","import React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation) : undefined,\n    !animationId,\n  );\n  const handleClick = useCallback(() => {\n    onClick(reaction);\n  }, [onClick, reaction]);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport { getReactionUniqueKey } from '../../global/helpers';\n\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nimport StickerButton from './StickerButton';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Button from '../ui/Button';\nimport ReactionEmoji from './ReactionEmoji';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix?: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isTranslucent?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isTranslucent,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  }, [\n    clearRecentCustomEmoji, clearRecentReactions, clearRecentStickers, closeConfirmModal, isEmoji, isReactionPicker,\n  ]);\n\n  const handleAddClick = useCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  }, [isCurrentUserPremium, isPremiumSet, openPremiumModal, stickerSet, toggleStickerSet]);\n\n  const handleDefaultTopicIconClick = useCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  }, [onStickerSelect]);\n\n  const handleDefaultStatusIconClick = useCallback(() => {\n    onStickerSelect?.({\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  }, [onStickerSelect]);\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  }, [itemSize, margin, windowWidth]);\n\n  const handleResize = useCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  }, [calculateItemsPerRow]);\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isRecent && isEmoji && !isCurrentUserPremium\n    && stickerSet.stickers?.some(({ isFree }) => !isFree);\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID && stickerSet.id !== POPULAR_SYMBOL_SET_ID;\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = withDefaultTopicIcon ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isInstalled && !isPopular;\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix || 'sticker-set'}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-name', withAddSetButton && 'symbol-set-name-external')}>\n            {isLocked && <i className=\"symbol-set-locked-icon icon icon-lock-badge\" />}\n            {stickerSet.title}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">{lang('Stickers', stickerSet.stickers.length, 'i')}</span>\n            )}\n          </p>\n          {isRecent && (\n            <i className=\"symbol-set-remove icon icon-close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {isPremiumSet && isLocked ? lang('Unlock') : lang('Add')}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('symbol-set-container shared-canvas-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <i className=\"icon icon-premium\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionUniqueKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                isCurrentUserPremium={isCurrentUserPremium}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z2hl3sxq0tzStr0JpMxi\",\"video\":\"h6jE3TEaqlzbs0ro0J2_\",\"image\":\"ivo3DVINrp81Kb9ho9kA\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerPreviewHash } from '../../../global/helpers';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, thumbCustomEmojiId, isLottie, isVideos: isVideo,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToStatic = stickerSet.stickers && isVideo && !IS_WEBM_SUPPORTED;\n  const staticHash = shouldFallbackToStatic && getStickerPreviewHash(stickerSet.stickers![0].id);\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || isLottie) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        isLottie ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n          />\n        ) : (isVideo && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gsyAr7lPlzHWUF_aYaVa\",\"main\":\"cnWk4tq3tmB7r08ScyxQ\",\"main_customEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"mainCustomEmoji\":\"UEOQzPhb8wS2YI61dKJE\",\"header\":\"x0Qtu0yjl4v02fLLyxV1\",\"headerWithBorder\":\"m4MXEae1lmdJZV64zN6b\",\"stickerCover\":\"A5Fetmgo_VQRMWxFTV_v\",\"activated\":\"yiTAGOkL3Hgb0VXRPy46\",\"pickerDisabled\":\"jNEbrwsYAlEp67HG75uy\"};","import React, {\n  useEffect, memo, useRef, useMemo, useCallback,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiStickerSet, ApiSticker, ApiReaction, ApiAvailableReaction,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { REM } from './helpers/mediaDimensions';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport buildClassName from '../../util/buildClassName';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\n\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Loading from '../ui/Loading';\nimport Button from '../ui/Button';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\nimport StickerSetCover from '../middle/composer/StickerSetCover';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  CHAT_STICKER_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, idPrefix, isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    if (!addedCustomEmojiIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = (defaultStatusIconsPack.stickers || []).concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const setIdsToDisplay = unique(addedCustomEmojiIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  }, [onCustomEmojiSelect]);\n\n  const handleReactionSelect = useCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  }, [onReactionSelect]);\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <i className=\"icon icon-recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-selection no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    'no-selection',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={idPrefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      recentReactions,\n      topReactions,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      availableReactions: isReactionPicker ? global.availableReactions : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"z0kj3ATb_u7kBMYsqUpx\",\"activated\":\"sGL0teusRxo4NrXceldd\"};","import type { RefObject } from 'react';\nimport React, {\n  useCallback, memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\n\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"XWSv0Pf1SKleWNyX04yO\"};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"UwWVjbf4Ptl9vrrJPZon\",\"picker-wrapper\":\"h97ntomDmLCVEoTjzCHi\",\"pickerWrapper\":\"h97ntomDmLCVEoTjzCHi\",\"picker-header\":\"Wz6C5rszlwOTdImks0cL\",\"pickerHeader\":\"Wz6C5rszlwOTdImks0cL\",\"picker-header-info\":\"OwAqbtXus5KwSxvNBKyu\",\"pickerHeaderInfo\":\"OwAqbtXus5KwSxvNBKyu\",\"selection-toggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"selectionToggle\":\"s9Pgceru2c49SJ_hpk8Q\",\"foldersWrapper\":\"HFZAaai7bs4X21rCRSyQ\",\"folders\":\"Xrr7zKG4KrVimUxojATI\",\"folder\":\"_7YreahCXXe3zGG5sywZA\",\"button-text\":\"K7T3MH1zL9aRmVFtTBBu\",\"buttonText\":\"K7T3MH1zL9aRmVFtTBBu\",\"button-badge\":\"_Z6IH9MHEorrdl7VDqJ2\",\"buttonBadge\":\"_Z6IH9MHEorrdl7VDqJ2\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Badge from '../../ui/Badge';\nimport Picker from '../../common/Picker';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { TabState } from '../../../global/types';\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport usePrevious from '../../../hooks/usePrevious';\nimport useLang from '../../../hooks/useLang';\n\nimport ChatlistNew from './ChatlistNew';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  info?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  info,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(info);\n  const renderingInfo = usePrevious(info) || info;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { info }): StateProps => {\n    const { invite, removal } = info || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport SafeLink from './SafeLink';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('SponsoredMessageInfo')}\n    >\n      <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n      <p>\n        <SafeLink\n          url={lang('SponsoredMessageAlertLearnMoreUrl')}\n          text={lang('SponsoredMessageAlertLearnMoreUrl')}\n        />\n      </p>\n      <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Close')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  selectCanDeleteSelectedMessages, selectCurrentChat, selectTabState, selectUser,\n} from '../../global/selectors';\nimport {\n  isUserId,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isSchedule,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onClose,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const handleDeleteMessageForAll = useCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  }, [deleteMessages, selectedMessageIds, onClose]);\n\n  const handleDeleteMessageForSelf = useCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  }, [isSchedule, onClose, deleteScheduledMessages, selectedMessageIds, deleteMessages]);\n\n  const lang = useLang();\n\n  // Returning `undefined` from FC instead of `<Modal>` doesn't trigger useHistoryBack\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen]);\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n      title={lang('Conversation.DeleteManyMessages')}\n    >\n      <p>{lang('AreYouSureDeleteFewMessages')}</p>\n      {willDeleteForCurrentUserOnly && (\n        <p>This will delete them just for you, not for other participants in the chat.</p>\n      )}\n      {willDeleteForAll && (\n        <p>This will delete them for everyone in this chat.</p>\n      )}\n      <div className={canDeleteForAll ? 'dialog-buttons-column' : 'dialog-buttons'}>\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n            {contactName\n              ? renderText(lang('ChatList.DeleteForEveryone', contactName))\n              : lang('Conversation.DeleteMessagesForEveryone')}\n          </Button>\n        )}\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n          {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      selectedMessageIds,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectTabState,\n  selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n} from '../../global/selectors';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\nimport ReportModal from '../common/ReportModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useCallback(() => {\n    exitMessageSelectMode();\n  }, [exitMessageSelectMode]);\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  }, [copySelectedMessages, exitMessageSelectMode, lang, showNotification]);\n\n  const handleDownload = useCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  }, [downloadSelectedMessages, exitMessageSelectMode]);\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: string, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      <DeleteSelectedMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={isSchedule}\n        onClose={closeDeleteModal}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isForwardModalOpen = tabState.forwardMessages.isModalShown;\n    const isAnyModalOpen = Boolean(isForwardModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { useCallback, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport { formatDateAtTime } from '../../util/dateFormat';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  }, [closeSeenByModal, openChat]);\n\n  const handleCloseSeenByModal = useCallback(() => {\n    closeSeenByModal();\n  }, [closeSeenByModal]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"icon-message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"phK_DdEImRiGA8z2FwyB\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useEffect, useState, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatIntegerCompact } from '../../util/textFormat';\nimport { unique } from '../../util/iteratees';\nimport { isSameReaction, getReactionUniqueKey } from '../../global/helpers';\nimport { formatDateAtTime } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useFlag from '../../hooks/useFlag';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Avatar from '../common/Avatar';\nimport ListItem from '../ui/ListItem';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Loading from '../ui/Loading';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on users, so we avoid them\n  const usersById = getGlobal().users.byId;\n\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  }, [closeReactorListModal, openChat]);\n\n  const handleClose = useCallback(() => {\n    startClosing();\n  }, [startClosing]);\n\n  const handleClick = useCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  }, [handleClose]);\n\n  const handleLoadMore = useCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  }, [chatId, loadReactors, messageId]);\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const userIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ userId }) => userId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ userId }) => userId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, userIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionUniqueKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (userId) => {\n                const user = usersById[userId];\n                const userReactions = reactors?.reactions.filter((reactor) => reactor.userId === userId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[userId];\n\n                userReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${userId}-${getReactionUniqueKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(userId)}\n                    >\n                      <Avatar user={user} size=\"small\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={user} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !userReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${userId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(userId)}\n                    >\n                      <PrivateChatInfo\n                        userId={userId}\n                        noStatusOrTyping\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"icon-message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport { IS_ANDROID } from '../../util/windowEnvironment';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  }, [activeEmojiInteraction.id, startHiding, stopActiveEmojiInteraction]);\n\n  const handleCancelAnimation = useCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  }, [stop]);\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceOnHeavyAnimation\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { selectLanguageCode, selectRequestedTranslationLanguage, selectTabState } from '../../global/selectors';\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport ListItem from '../ui/ListItem';\nimport InputText from '../ui/InputText';\n\nimport styles from './MessageLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst MessageLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const { requestMessageTranslation, closeMessageLanguageModal } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useLang();\n\n  const handleSelect = useCallback((toLanguageCode: string) => {\n    if (!chatId || !messageId) return;\n\n    requestMessageTranslation({ chatId, id: messageId, toLanguageCode });\n    closeMessageLanguageModal();\n  }, [chatId, closeMessageLanguageModal, messageId, requestMessageTranslation]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeMessageLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={styles.listItem}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).messageLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId && messageId\n      ? selectRequestedTranslationLanguage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(MessageLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ty4iYfZBkv7TFGwTrzul\",\"list-item\":\"GXEouxz4KmZfOmlymVnB\",\"listItem\":\"GXEouxz4KmZfOmlymVnB\",\"title\":\"MpKdUudmoMIsoFkDFNbJ\",\"subtitle\":\"B0tluyEaLLlMRQ5TZMEP\",\"languages\":\"SxqwP1DiSMFc8Gh_KgfK\"};","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { isUserId, getPrivateChatUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectUser, selectIsChatPinned, selectNotifySettings, selectNotifyExceptions,\n} from '../../../global/selectors';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo userId={chatId} withUsername={withUsername} avatarSize=\"large\" />\n      ) : (\n        <GroupChatInfo chatId={chatId} withUsername={withUsername} avatarSize=\"large\" />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, useRef, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport renderText from '../../common/helpers/renderText';\nimport { throttle } from '../../../util/schedulers';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers no-selection\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar user={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3 className=\"section-heading mt-0 recent-chats-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getPrivateChatUserId,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageIsSpoiler,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\nimport Link from '../../ui/Link';\nimport FullNameTitle from '../../common/FullNameTitle';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastSyncTime?: number;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n  lastSyncTime,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  }, [chatId, focusMessage, message.id]);\n\n  const lang = useLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        chat={chat}\n        user={privateChatUser}\n        isSavedMessages={privateChatUser?.isSelf}\n        lastSyncTime={lastSyncTime}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={privateChatUser || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { formatDateToString } from '../../../util/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport {\n  sortChatIds,\n  filterUsersByName,\n} from '../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useLang from '../../../hooks/useLang';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport Link from '../../ui/Link';\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  localContactIds?: string[];\n  localChatIds?: string[];\n  localUserIds?: string[];\n  globalChatIds?: string[];\n  globalUserIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  lastSyncTime?: number;\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  searchQuery, searchDate, dateSearchQuery, currentUserId,\n  localContactIds, localChatIds, localUserIds, globalChatIds, globalUserIds,\n  foundIds, globalMessagesByChatId, chatsById, fetchingStatus, lastSyncTime,\n  onReset, onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2)) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(localContactIds || []),\n    ];\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    return [\n      ...sortChatIds(unique([\n        ...(foundContactIds || []),\n        ...(localChatIds || []),\n        ...(localUserIds || []),\n      ]), chatsById, undefined, currentUserId ? [currentUserId] : undefined),\n    ];\n  }, [searchQuery, currentUserId, localContactIds, lang, localChatIds, localUserIds, chatsById]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalChatIds || !globalUserIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return sortChatIds(\n      unique([...globalChatIds, ...globalUserIds]),\n      chatsById,\n      true,\n    );\n  }, [chatsById, globalChatIds, globalUserIds, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId, searchQuery, searchDate]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && (\n        <div\n          className=\"chat-selection no-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n\n    const { userIds: localContactIds } = global.contactList || {};\n\n    if (!localContactIds) {\n      return {\n        chatsById,\n      };\n    }\n\n    const {\n      currentUserId, messages, lastSyncTime,\n    } = global;\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { chatIds: globalChatIds, userIds: globalUserIds } = globalResults || {};\n    const { chatIds: localChatIds, userIds: localUserIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.text?.foundIds;\n\n    return {\n      currentUserId,\n      localContactIds,\n      localChatIds,\n      localUserIds,\n      globalChatIds,\n      globalUserIds,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      lastSyncTime,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectChat } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport ListItem from '../../ui/ListItem';\nimport TopicIcon from '../../common/TopicIcon';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport NothingFound from '../../common/NothingFound';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n  lastSyncTime?: number;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  lastSyncTime,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openChat } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      openChat({ id: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId }, lastSyncTime } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      lastSyncTime,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { GlobalState, TabState } from '../../../../global/types';\nimport type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  lastSyncTime?: number;\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads']['byChatId'];\n  isChatProtected?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads.byChatId;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      lastSyncTime: global.lastSyncTime,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport useLang from '../../../hooks/useLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Media from '../../common/Media';\nimport ChatMessage from './ChatMessage';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      mediaId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport WebLink from '../../common/WebLink';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport { getMessageDocument } from '../../../global/helpers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport Document from '../../common/Document';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  lastSyncTime,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\">{formatMonthAndYear(lang, new Date(message.date * 1000))}</p>\n          )}\n          <Document\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dateFormat';\nimport { getSenderName } from './helpers/getSenderName';\nimport { throttle } from '../../../util/schedulers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useLang from '../../../hooks/useLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  lastSyncTime,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (lastSyncTime && direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, lastSyncTime, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((messageId: number, chatId: string) => {\n    focusMessage({ chatId, messageId });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const shouldDrawDateDivider = index === 0\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p className=\"section-heading\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            lastSyncTime={lastSyncTime}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={activeDownloads[message.chatId]?.ids?.includes(message.id)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useState, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dateFormat';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ChatResults from './ChatResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport MediaResults from './MediaResults';\nimport LinkResults from './LinkResults';\nimport FileResults from './FileResults';\nimport AudioResults from './AudioResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(1),\n];\n\nconst TRANSITION_RENDER_COUNT = Object.keys(GlobalSearchContent).length / 2;\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const handleSwitchTab = useCallback((index: number) => {\n    const tab = TABS[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  }, [setGlobalSearchContent]);\n\n  const handleSearchDateSelect = useCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  }, [setGlobalSearchDate]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={chatId ? CHAT_TABS : TABS} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={TRANSITION_RENDER_COUNT}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return <h3>{lang('PrivacyP2P')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\nimport type { ApiUser } from '../../../api/types';\n\nimport { selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ChatExtra from '../../common/ChatExtra';\nimport PremiumIcon from '../../common/PremiumIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUser?: ApiUser;\n  lastSyncTime?: number;\n  canBuyPremium?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUser,\n  sessionCount,\n  lastSyncTime,\n  canBuyPremium,\n}) => {\n  const {\n    loadProfilePhotos,\n    loadAuthorizations,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n  const profileId = currentUser?.id;\n\n  useEffect(() => {\n    if (profileId && lastSyncTime) {\n      loadProfilePhotos({ profileId });\n    }\n  }, [lastSyncTime, profileId, loadProfilePhotos]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime) {\n      loadAuthorizations();\n    }\n  }, [lastSyncTime, loadAuthorizations]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUser && (\n          <ProfileInfo\n            userId={currentUser.id}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUser && (\n          <ChatExtra\n            chatOrUserId={currentUser.id}\n            forceShowSelf\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<PremiumIcon withGradient big />}\n            className=\"settings-main-menu-premium\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId, lastSyncTime } = global;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUser: currentUserId ? selectUser(global, currentUserId) : undefined,\n      lastSyncTime,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SettingsMain));\n","import React, {\n  useState, useCallback, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\n\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst MIN_USERNAME_LENGTH = 5;\nconst MAX_USERNAME_LENGTH = 32;\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\nconst USERNAME_REGEX = /^\\D([a-zA-Z0-9_]+)$/;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nfunction isUsernameValid(username: string) {\n  return username.length === 0 || (\n    username.length >= MIN_USERNAME_LENGTH\n    && username.length <= MAX_USERNAME_LENGTH\n    && USERNAME_REGEX.test(username)\n  );\n}\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newUsername = e.target.value.trim().replace(LINK_PREFIX_REGEX, '');\n    setUsername(newUsername);\n\n    const isValid = isUsernameValid(newUsername);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport useLang from '../../hooks/useLang';\nimport buildClassName from '../../util/buildClassName';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = e.currentTarget.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      e.currentTarget.value = e.currentTarget.value.replace(/\\n/g, ' ');\n      e.currentTarget.selectionEnd = previousSelectionEnd;\n    }\n    e.currentTarget.style.height = '0';\n    e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Draggable.module.scss';\nimport useLang from '../../hooks/useLang';\nimport buildStyle from '../../util/buildStyle';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <i className=\"icon icon-sort\" aria-hidden />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"C9QYXaRLeCEFngOBl4S3\",\"isDragging\":\"vhGsRt79lQzzuXny9KG8\",\"knob\":\"oGgH1RraeCPayQnxA8C_\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"u8GGVdXgbKUMvoqqs0VJ\",\"header\":\"sPTmRsKHnc3FL9AubUaY\",\"description\":\"YqnFSIc98kYMRge1RrlJ\",\"sortableContainer\":\"pWxbEJm12NZb25lGmdwA\",\"item\":\"AWgYeVXfLin4VAmQzhKQ\"};","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiUsername } from '../../api/types';\n\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport buildClassName from '../../util/buildClassName';\nimport { isBetween } from '../../util/math';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm!.username,\n        isActive: !usernameForConfirm!.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm!.username,\n        isActive: !usernameForConfirm!.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","import type { ChangeEvent } from 'react';\nimport React, {\n  useState, useCallback, memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { throttle } from '../../../util/schedulers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport InputText from '../../ui/InputText';\nimport UsernameInput from '../../common/UsernameInput';\nimport TextArea from '../../ui/TextArea';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { isBetween } from '../../../../util/math';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport renderText from '../../../common/helpers/renderText';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport ListItem from '../../../ui/ListItem';\nimport Button from '../../../ui/Button';\nimport Loading from '../../../ui/Loading';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Draggable from '../../../ui/Draggable';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <i className=\"icon icon-down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { isUserId } from '../../../../global/helpers';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport ListItem from '../../../ui/ListItem';\nimport InputText from '../../../ui/InputText';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\nimport ShowMoreButton from '../../../ui/ShowMoreButton';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = selectChatFilters(state, 'included');\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = selectChatFilters(state, 'excluded');\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n    } else {\n      openLimitReachedModal({\n        limit: 'chatlistInvites',\n      });\n    }\n  }, [\n    invites, state.folderId, state.isTouched, maxInviteLinks, isCreating, onSaveFolder, onShareFolder, lang,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ShowMoreButton\n            count={leftChatsCount}\n            itemName=\"chat\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  useCallback, useRef, useEffect, memo, useState,\n} from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport { isUserId } from '../../../../global/helpers';\nimport type { FolderChatType } from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  INCLUDED_CHAT_TYPES,\n  EXCLUDED_CHAT_TYPES,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport buildClassName from '../../../../util/buildClassName';\nimport useInfiniteScroll from '../../../../hooks/useInfiniteScroll';\nimport useLang from '../../../../hooks/useLang';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\n\nimport Checkbox from '../../../ui/Checkbox';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PickerSelectedItem from '../../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../../ui/InfiniteScroll';\nimport Loading from '../../../ui/Loading';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\n\nimport '../../../common/Picker.scss';\nimport './SettingsFoldersChatsPicker.scss';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  chatIds: string[];\n  selectedIds: string[];\n  selectedChatTypes: string[];\n  filterValue?: string;\n  shouldHideChatTypes?: boolean;\n  onSelectedIdsChange: (ids: string[]) => void;\n  onSelectedChatTypesChange: (types: string[]) => void;\n  onFilterChange: (value: string) => void;\n  onSaveFilter: VoidFunction;\n  isActive?: boolean;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\ntype StateProps = {\n  maxChats: number;\n};\n\nconst SettingsFoldersChatsPicker: FC<OwnProps & StateProps> = ({\n  mode,\n  chatIds,\n  selectedIds,\n  selectedChatTypes,\n  filterValue,\n  shouldHideChatTypes,\n  onSelectedIdsChange,\n  onSelectedChatTypesChange,\n  onFilterChange,\n  maxChats,\n  onSaveFilter,\n  isActive,\n}) => {\n  const { openLimitReachedModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const chatTypes = mode === 'included' ? INCLUDED_CHAT_TYPES : EXCLUDED_CHAT_TYPES;\n  const shouldMinimize = selectedIds.length + selectedChatTypes.length > MAX_FULL_ITEMS;\n  const [isTouched, setIsTouched] = useState(false);\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, []);\n\n  const handleItemClick = useCallback((id: string) => {\n    const newSelectedIds = [...selectedIds];\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      if (selectedIds.length >= maxChats && mode === 'included') {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      newSelectedIds.push(id);\n    }\n    setIsTouched(true);\n    onSelectedIdsChange(newSelectedIds);\n  }, [selectedIds, onSelectedIdsChange, maxChats, mode, openLimitReachedModal]);\n\n  const handleChatTypeClick = useCallback((key: FolderChatType['key']) => {\n    const newSelectedChatTypes = [...selectedChatTypes];\n    if (newSelectedChatTypes.includes(key)) {\n      newSelectedChatTypes.splice(newSelectedChatTypes.indexOf(key), 1);\n    } else {\n      newSelectedChatTypes.push(key);\n    }\n    setIsTouched(true);\n    onSelectedChatTypesChange(newSelectedChatTypes);\n  }, [selectedChatTypes, onSelectedChatTypesChange]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange(value);\n  }, [onFilterChange]);\n\n  const lang = useLang();\n\n  function renderSelectedChatType(key: string) {\n    const selectedType = chatTypes.find(({ key: typeKey }) => key === typeKey);\n    if (!selectedType) {\n      return undefined;\n    }\n\n    return (\n      <PickerSelectedItem\n        icon={selectedType.icon}\n        title={lang(selectedType.title)}\n        isMinimized={shouldMinimize}\n        canClose\n        onClick={handleChatTypeClick}\n        clickArg={selectedType.key}\n      />\n    );\n  }\n\n  function renderChatType(type: FolderChatType) {\n    return (\n      <ListItem\n        key={type.key}\n        className=\"chat-item-clickable picker-list-item chat-type-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleChatTypeClick(type.key)}\n        ripple\n      >\n        <i className={buildClassName('icon', `icon-${type.icon}`)} />\n        <h3 className=\"chat-type\" dir=\"auto\">{lang(type.title)}</h3>\n        <Checkbox\n          label=\"\"\n          checked={selectedChatTypes.includes(type.key)}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  function renderItem(id: string) {\n    const isSelected = selectedIds.includes(id);\n\n    return (\n      <ListItem\n        key={id}\n        className=\"chat-item-clickable picker-list-item chat-item\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {isUserId(id) ? (\n          <PrivateChatInfo userId={id} />\n        ) : (\n          <GroupChatInfo chatId={id} withChatType />\n        )}\n        <Checkbox\n          label=\"\"\n          checked={isSelected}\n          round\n        />\n      </ListItem>\n    );\n  }\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, chatIds, Boolean(filterValue));\n\n  return (\n    <div className=\"Picker SettingsFoldersChatsPicker\">\n      <div className=\"picker-header custom-scroll\">\n        {selectedChatTypes.map(renderSelectedChatType)}\n        {selectedIds.map((id, i) => (\n          <PickerSelectedItem\n            chatOrUserId={id}\n            isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n            canClose\n            onClick={handleItemClick}\n            clickArg={id}\n          />\n        ))}\n        <InputText\n          ref={inputRef}\n          value={filterValue}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n      <InfiniteScroll\n        className=\"picker-list custom-scroll\"\n        itemSelector=\".chat-item\"\n        items={viewportIds}\n        onLoadMore={getMore}\n      >\n        {(!viewportIds || !viewportIds.length || viewportIds.includes(chatIds[0])) && (\n          <div key=\"header\">\n            {!shouldHideChatTypes && (\n              <>\n                <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang('FilterChatTypes')}\n                </h4>\n                {chatTypes.map(renderChatType)}\n                <div className=\"picker-list-divider\" />\n              </>\n            )}\n            <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterChats')}\n            </h4>\n          </div>\n        )}\n\n        {viewportIds?.length ? (\n          viewportIds.map(renderItem)\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\" key=\"no-results\">Sorry, nothing found.</p>\n        ) : (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatsPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useCallback } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport { unique } from '../../../../util/iteratees';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport type {\n  FoldersState,\n  FolderEditDispatch,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport {\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatsPicker from './SettingsFoldersChatsPicker';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n}) => {\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = selectChatFilters(state, mode, true);\n\n  const lang = useLang();\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...selectedChatIds,\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedChatIds, lang, chatFilter]);\n\n  const handleFilterChange = useCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n  }, [dispatch]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n  }, [mode, state, dispatch]);\n\n  const handleSelectedChatTypesChange = useCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  }, [mode, selectedChatIds, dispatch]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <SettingsFoldersChatsPicker\n      mode={mode}\n      chatIds={displayedIds}\n      selectedIds={selectedChatIds}\n      selectedChatTypes={selectedChatTypes}\n      filterValue={chatFilter}\n      shouldHideChatTypes={shouldHideChatTypes}\n      onSelectedIdsChange={handleSelectedIdsChange}\n      onSelectedChatTypesChange={handleSelectedChatTypesChange}\n      onFilterChange={handleFilterChange}\n      onSaveFilter={onSaveFilter}\n      isActive={isActive}\n    />\n  );\n};\n\nexport default memo(SettingsFoldersChatFilters);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"B0vKZtyx_PUcanptgC5I\",\"input\":\"ODZGlpe7i3BMlnIuPGUg\",\"moreMenu\":\"hDpRcaj2QNUxsuLouJu_\",\"buttons\":\"w1XUPoN0jJ1kMZLO7Haj\",\"button\":\"LFzEXLButr24C5xfk1X4\"};","import React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Button from '../ui/Button';\n\nimport styles from './InviteLink.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  inviteLink: string;\n  onRevoke?: VoidFunction;\n  isDisabled?: boolean;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  inviteLink,\n  onRevoke,\n  isDisabled,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang]);\n\n  const handleCopyPrimaryClicked = useCallback(() => {\n    copyLink(inviteLink);\n  }, [copyLink, inviteLink]);\n\n  const handleShare = useCallback(() => {\n    openChatWithDraft({ text: inviteLink });\n  }, [inviteLink]);\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"Actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  return (\n    <div className=\"settings-item\">\n      <p className=\"text-muted\">\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={inviteLink}\n          readOnly\n          onClick={handleCopyPrimaryClicked}\n        />\n        <DropdownMenu\n          className={styles.moreMenu}\n          trigger={PrimaryLinkMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyPrimaryClicked}>{lang('Copy')}</MenuItem>\n          {onRevoke && (\n            <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n      <div className={styles.buttons}>\n        <Button\n          onClick={handleCopyPrimaryClicked}\n          className={styles.button}\n          size=\"smaller\"\n          disabled={isDisabled}\n        >\n          {lang('FolderLinkScreen.LinkActionCopy')}\n        </Button>\n        <Button\n          onClick={handleShare}\n          className={styles.button}\n          size=\"smaller\"\n          disabled={isDisabled}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FC } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\nimport { partition } from '../../../../util/iteratees';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport InviteLink from '../../../common/InviteLink';\nimport Picker from '../../../common/Picker';\nimport Spinner from '../../../ui/Spinner';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  }, [folderId, onReset, url]);\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  }, [lang]);\n\n  const handleSelectedIdsChange = useCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    if (!folderId || !url) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  }, [folderId, selectedIds, url]);\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <InviteLink\n        inviteLink={isLoading ? lang('Loading') : url!}\n        onRevoke={handleRevoke}\n        isDisabled={isDisabled}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { FC } from '../../../../lib/teact/teact';\nimport type { ApiChatFolder } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useCallback, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  getSystemTheme, IS_IOS, IS_MAC_OS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/langProvider';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport RangeSlider from '../../ui/RangeSlider';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const APPEARANCE_THEME_OPTIONS: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const KEYBOARD_SEND_OPTIONS = !IS_TOUCH_ENV ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={APPEARANCE_THEME_OPTIONS}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {KEYBOARD_SEND_OPTIONS && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={KEYBOARD_SEND_OPTIONS}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState, useRef,\n} from '../../../lib/teact/teact';\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\nimport buildClassName from '../../../util/buildClassName';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useCallback, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\nimport type { ApiWallpaper } from '../../../api/types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { throttle } from '../../../util/schedulers';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { selectTheme } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\nimport { captureEvents } from '../../../util/captureEvents';\nimport { selectTheme } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent } from 'react';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport {\n  playNotifySound,\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n} from '../../../util/notifications';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacyPhoneNumber?: ApiPrivacySettings;\n  privacyLastSeen?: ApiPrivacySettings;\n  privacyProfilePhoto?: ApiPrivacySettings;\n  privacyForwarding?: ApiPrivacySettings;\n  privacyVoiceMessages?: ApiPrivacySettings;\n  privacyGroupChats?: ApiPrivacySettings;\n  privacyPhoneCall?: ApiPrivacySettings;\n  privacyPhoneP2P?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  canDisplayChatInTitle,\n  privacyPhoneNumber,\n  privacyLastSeen,\n  privacyProfilePhoto,\n  privacyForwarding,\n  privacyVoiceMessages,\n  privacyGroupChats,\n  privacyPhoneCall,\n  privacyPhoneP2P,\n  onScreenSelect,\n  onReset,\n  canSetPasscode,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedContacts,\n    loadAuthorizations,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    showNotification,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedContacts();\n    loadAuthorizations();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, [loadBlockedContacts, loadAuthorizations, loadPrivacySettings, loadContentSettings, loadWebAuthorizations]);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleVoiceMessagesClick = useCallback(() => {\n    if (isCurrentUserPremium) {\n      onScreenSelect(SettingsScreens.PrivacyVoiceMessages);\n    } else {\n      showNotification({\n        message: lang('PrivacyVoiceMessagesPremiumOnly'),\n      });\n    }\n  }, [isCurrentUserPremium, lang, onScreenSelect, showNotification]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyLastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyProfilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneP2P)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyP2P')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyPhoneP2P)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyForwarding)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          disabled={!isCurrentUserPremium}\n          allowDisabledClick\n          rightElement={!isCurrentUserPremium && <i className=\"icon icon-lock-badge settings-icon-locked\" />}\n          className=\"no-icon\"\n          onClick={handleVoiceMessagesClick}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyVoiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacyGroupChats)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      privacyPhoneNumber: privacy.phoneNumber,\n      privacyLastSeen: privacy.lastSeen,\n      privacyProfilePhoto: privacy.profilePhoto,\n      privacyForwarding: privacy.forwards,\n      privacyVoiceMessages: privacy.voiceMessages,\n      privacyGroupChats: privacy.chatInvite,\n      privacyPhoneCall: privacy.phoneCall,\n      privacyPhoneP2P: privacy.phoneP2P,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport { SettingsScreens } from '../../../types';\nimport type { ISettings, LangCode } from '../../../types';\nimport type { ApiLanguage } from '../../../api/types';\n\nimport { setLanguage } from '../../../util/langProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport Loading from '../../ui/Loading';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  lastSyncTime?: number;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  languages,\n  language,\n  canTranslate,\n  doNotTranslate,\n  lastSyncTime,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (lastSyncTime && !languages?.length) {\n      loadLanguages();\n    }\n  }, [languages, lastSyncTime, loadLanguages]);\n\n  const handleChange = useCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void setLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  }, [markIsLoading, unmarkIsLoading, setSettingOption, loadAttachBots]);\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  }, [setSettingOption]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          {canTranslate && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      lastSyncTime: global.lastSyncTime,\n      languages,\n      language,\n      canTranslate,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n  }\n\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"fb5F16dNcZnOl5zZNuRC\"};","import type { ChangeEvent, RefObject } from 'react';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        onChange={handleSelectFile}\n        accept=\"image/png, image/jpeg\"\n        ref={inputRef}\n        className={styles.input}\n      />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","import React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUser: ApiUser;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUser,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUser.id });\n    }\n  }, [hasCurrentUserFullInfo, currentUser.id, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"pqiopoENn7dO3E8DQI3e\",\"fallbackPhoto\":\"pqiopoENn7dO3E8DQI3e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { getPrivacyKey } from './helpers/privacy';\nimport { selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Partial<ApiPrivacySettings> & {\n    chatsById?: Record<string, ApiChat>;\n    usersById?: Record<string, ApiUser>;\n    currentUser: ApiUser;\n    hasCurrentUserFullInfo?: boolean;\n    currentUserFallbackPhoto?: ApiPhoto;\n  };\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  onScreenSelect,\n  onReset,\n  visibility,\n  allowUserIds,\n  allowChatIds,\n  blockUserIds,\n  blockChatIds,\n  chatsById,\n  currentUser,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const { setPrivacyVisibility } = getActions();\n\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      { value: 'contacts', label: lang('P2PContacts') },\n      { value: 'nobody', label: lang('P2PNobody') },\n    ];\n  }, [lang]);\n\n  const exceptionLists = {\n    shouldShowDenied: visibility !== 'nobody',\n    shouldShowAllowed: visibility !== 'everybody',\n  };\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  const allowedCount = useMemo(() => {\n    if (!allowUserIds || !allowChatIds || !chatsById) {\n      return 0;\n    }\n\n    return allowChatIds.reduce((result, chatId) => {\n      return result + (chatsById[chatId] ? chatsById[chatId].membersCount! : 0);\n    }, allowUserIds.length);\n  }, [allowChatIds, allowUserIds, chatsById]);\n\n  const blockCount = useMemo(() => {\n    if (!blockUserIds || !blockChatIds || !chatsById) {\n      return 0;\n    }\n\n    return blockChatIds.reduce((result, chatId) => {\n      return result + (chatsById[chatId] ? chatsById[chatId].membersCount! : 0);\n    }, blockUserIds.length);\n  }, [blockChatIds, blockUserIds, chatsById]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey, setPrivacyVisibility]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={visibility}\n        />\n\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyExceptions')}</h4>\n\n        {exceptionLists.shouldShowAllowed && (\n          <ListItem\n            narrow\n            icon=\"add-user\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => {\n              onScreenSelect(allowedContactsScreen);\n            }}\n          >\n            <div className=\"multiline-menu-item full-size\">\n              {allowedCount > 0 && <span className=\"date\" dir=\"auto\">+{allowedCount}</span>}\n              <span className=\"title\">{lang('AlwaysAllow')}</span>\n              <span className=\"subtitle\">{lang('EditAdminAddUsers')}</span>\n            </div>\n          </ListItem>\n        )}\n        {exceptionLists.shouldShowDenied && (\n          <ListItem\n            narrow\n            icon=\"delete-user\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => {\n              onScreenSelect(deniedContactsScreen);\n            }}\n          >\n            <div className=\"multiline-menu-item full-size\">\n              {blockCount > 0 && <span className=\"date\" dir=\"auto\">&minus;{blockCount}</span>}\n              <span className=\"title\">{lang('NeverAllow')}</span>\n              <span className=\"subtitle\">{lang('EditAdminAddUsers')}</span>\n            </div>\n          </ListItem>\n        )}\n      </div>\n\n      {screen === SettingsScreens.PrivacyProfilePhoto && exceptionLists.shouldShowAllowed && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUser={currentUser}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let privacySettings: ApiPrivacySettings | undefined;\n\n    const {\n      chats: { byId: chatsById },\n      settings: { privacy },\n    } = global;\n\n    const currentUser = selectUser(global, global.currentUserId!)!;\n    const currentUserFullInfo = selectUserFullInfo(global, global.currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        privacySettings = privacy.phoneNumber;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        privacySettings = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        privacySettings = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyPhoneCall:\n        privacySettings = privacy.phoneCall;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n        privacySettings = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        privacySettings = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        privacySettings = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        privacySettings = privacy.chatInvite;\n        break;\n    }\n\n    if (!privacySettings) {\n      return {\n        currentUser,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      ...privacySettings,\n      chatsById,\n      currentUser,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { ApiSession } from '../../../../api/types';\n\nexport default function getSessionIcon(session: ApiSession): string {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"settingsActiveSession\":\"P9I8aybVU7NyFiMWiyU2\",\"iconDevice\":\"a633Zas_0v2MAAY277vj\",\"iconDevice__android\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDeviceAndroid\":\"GUI0ogXbRdxQ2RGy8fGv\",\"iconDevice__apple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDeviceApple\":\"emCcCPeQ7_9DHBonyO02\",\"iconDevice__brave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDeviceBrave\":\"OMEQQMEIcjln7GIyfO3Q\",\"iconDevice__chrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDeviceChrome\":\"XEQtza6nFt8ptPkvbi2w\",\"iconDevice__edge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDeviceEdge\":\"iHueuVDDSF_BaK2Wa06i\",\"iconDevice__firefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDeviceFirefox\":\"KM9rrbhNSrNOW8roXGo_\",\"iconDevice__linux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDeviceLinux\":\"JzdHedSfMsVcaa8u4X6O\",\"iconDevice__opera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDeviceOpera\":\"McukeiFuIkeZbxMNzQKK\",\"iconDevice__safari\":\"XGWuju_22haQw0Qraor7\",\"iconDeviceSafari\":\"XGWuju_22haQw0Qraor7\",\"iconDevice__samsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDeviceSamsung\":\"ZZGcTr3P3RJrOwOwFX6r\",\"iconDevice__ubuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDeviceUbuntu\":\"OPtbMfpfiWN3dxilMOPX\",\"iconDevice__unknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDeviceUnknown\":\"xoc1kuf1XAKh_dhO758U\",\"iconDevice__vivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDeviceVivaldi\":\"Y25gBvz9xzZicoJgQf8Y\",\"iconDevice__windows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDeviceWindows\":\"dKbtoO2xjdhL8W2mqyxr\",\"iconDevice__xbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"iconDeviceXbox\":\"FhLv8AIUHzsoTX8b0zdA\",\"title\":\"b9iUjEhCpOrQ4dPhn2KU\",\"note\":\"hTTCWbngkwJoEwtGFD9o\",\"date\":\"pUv5oVVNDZ5lBRzNzx3X\",\"box\":\"e32uLjclYAYuxxW1CAex\",\"actionHeader\":\"xwSMwr4aHsrRVIVInLEo\",\"actionName\":\"tSrCe7E_Iom1nGuh2Gs3\",\"headerButton\":\"N0buK669iHOZ1hN_H7Ik\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport useLang from '../../../hooks/useLang';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport getSessionIcon from './helpers/getSessionIcon';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\nimport Button from '../../ui/Button';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport ListItem from '../../ui/ListItem';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)} icon-device`}>\n          <div className=\"multiline-menu-item\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)} icon-device`}\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OeRWKjYQC6t7Uxv8I3j0\",\"avatar\":\"oy_023CG29VsnL9L5ulf\",\"title\":\"bg8UD_Pu2JWogmjuvVXg\",\"note\":\"TgiK64wG1hkOWSiXybQf\",\"box\":\"HSyJbRkyhkeT0s2QA4Ku\",\"action-header\":\"AQX7GM28GeWO4b1bXTNK\",\"actionHeader\":\"AQX7GM28GeWO4b1bXTNK\",\"action-name\":\"_VJHBZTk5qdYimQAoCWe\",\"actionName\":\"_VJHBZTk5qdYimQAoCWe\",\"header-button\":\"hlKLEbMQAsx572pUREy0\",\"headerButton\":\"hlKLEbMQAsx572pUREy0\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\n\nimport Modal from '../../ui/Modal';\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        user={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"n3bBygyO4j5MQyJ70Twt\",\"clear-help\":\"vUICy6ZQCYFSrvvxXe7f\",\"clearHelp\":\"vUICy6ZQCYFSrvvxXe7f\"};","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiWebSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} user={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className=\"subtitle\">{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useMemo, useState, memo, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    const { id: contactId, accessHash } = usersById[userId] || {};\n    if (!contactId || !accessHash) {\n      return;\n    }\n    blockContact({ contactId, accessHash });\n    onClose();\n  }, [blockContact, onClose, usersById]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useFlag from '../../../hooks/useFlag';\n\nimport ListItem from '../../ui/ListItem';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Avatar from '../../common/Avatar';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\nimport FullNameTitle from '../../common/FullNameTitle';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockContact } = getActions();\n\n  const lang = useLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((contactId: string) => {\n    unblockContact({ contactId });\n  }, [unblockContact]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, contactId) => {\n      const isPrivate = isUserId(contactId);\n      const user = isPrivate ? usersByIds[contactId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[contactId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = isPrivate ? usersByIds[contactId] : undefined;\n    const chat = !isPrivate ? chatsByIds[contactId] : undefined;\n    const userOrChat = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          user={user}\n          chat={chat}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {userOrChat && <FullNameTitle peer={userOrChat} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport ListItem from '../../../ui/ListItem';\nimport renderText from '../../../common/helpers/renderText';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PasswordMonkey from '../../common/PasswordMonkey';\nimport PasswordForm from '../../common/PasswordForm';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport renderText from '../../../common/helpers/renderText';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useAppLayout from '../../../../hooks/useAppLayout';\n\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport InputText from '../../../ui/InputText';\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useAppLayout from '../../../../hooks/useAppLayout';\n\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport useLang from '../../../../hooks/useLang';\n\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../config';\nimport { unique } from '../../../util/iteratees';\nimport { filterChatsByName, isUserId } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  screen,\n  isActive,\n  onScreenSelect,\n  onReset,\n  currentUserId,\n  settings,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n\n        return chat && isUserId(chat.id) && chat.id !== currentUserId;\n      });\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      contactsIds: newSelectedContactIds,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedContactIds, onScreenSelect, screen, setPrivacySettings]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { availableReactions, config } = global;\n\n    return {\n      availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport ListItem from '../../../ui/ListItem';\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport useLang from '../../../../hooks/useLang';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\n\nimport Button from '../../../ui/Button';\nimport AnimatedIcon from '../../../common/AnimatedIcon';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport { decryptSession } from '../../../../util/passcode';\n\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Button from '../ui/Button';\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  }, [firstSticker, onClick]);\n\n  if (!stickerSet || !stickerSet.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', className)}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport { SettingsScreens } from '../../../types';\nimport type { ISettings } from '../../../types';\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport StickerSetCard from '../../common/StickerSetCard';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport renderText from '../../common/helpers/renderText';\nimport { pick } from '../../../util/iteratees';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport { partition, unique } from '../../../util/iteratees';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'language' | 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  language,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      language,\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"obOZMv8VwZgTltdIBhFA\",\"item\":\"lDWs17bpqtGWDX0EJr0y\",\"checkbox\":\"BShBwPkgjleuDsjyfnNk\",\"languages\":\"whcbPSSJLGdGCaY66qfR\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { getActions, withGlobal } from '../../../global';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti()}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n    };\n  },\n)(SettingsExperimental));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport RangeSlider from '../../ui/RangeSlider';\nimport Checkbox from '../../ui/Checkbox';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\nimport { selectTabState } from '../../../global/selectors';\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\n\nimport Transition from '../../ui/Transition';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsMain from './SettingsMain';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsPerformance from './SettingsPerformance';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    foldersState.mode, foldersDispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  function renderCurrentSectionContent(isScreenActive: boolean, screen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(screen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(screen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(screen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(screen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(screen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(screen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).includes(screen.toString())\n      || Object.values(privacyAllowScreens).find((key) => key === true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || screen === SettingsScreens.GeneralChatBackgroundColor\n              || screen === SettingsScreens.GeneralChatBackground\n              || screen === SettingsScreens.QuickReaction\n              || screen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || screen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || screen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={screen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={screen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(isScreenActive: boolean, isFrom: boolean, currentKey: SettingsScreens) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, currentKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n            ripple={!isMobile}\n          >\n            <PrivateChatInfo userId={id} forceShowSelf avatarSize=\"large\" />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport { filterUsersByName, isUserBot, sortChatIds } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Button from '../../ui/Button';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsById: Record<string, ApiChat>;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n  chatsById,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localUserIds,\n  globalUserIds,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localUserIds || []),\n        ...(globalUserIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      chatsById,\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, chatsById, searchQuery, localUserIds, globalUserIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n    const { byId: chatsById } = global.chats;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { userIds: globalUserIds } = globalResults || {};\n    const { userIds: localUserIds } = localResults || {};\n\n    return {\n      chatsById,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalUserIds,\n      localUserIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useState, useCallback, useEffect, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { GlobalState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\n\nimport Button from '../ui/Button';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  }, [updateArchiveSettings]);\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className=\"left-header\">\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <ChatList\n        folderType=\"archived\"\n        isActive={isActive}\n        isForumPanelOpen={isForumPanelVisible}\n        onSettingsScreenSelect={onSettingsScreenSelect}\n        onLeftColumnContentChange={onLeftColumnContentChange}\n        foldersDispatch={foldersDispatch}\n        archiveSettings={archiveSettings}\n      />\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiMessage } from '../../../../api/types';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport {\n  getMessageContact,\n  getMessageMediaHash,\n  getMessagePhoto,\n  getMessageText,\n  getMessageTextWithSpoilers,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  hasMessageLocalBlobUrl,\n} from '../../../../global/helpers';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: string;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = getMessageMediaHash(message, 'inline');\n  const canImageBeCopied = photo && (mediaHash || hasMessageLocalBlobUrl(message)) && CLIPBOARD_ITEM_SUPPORTED;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            message, undefined, undefined, undefined, undefined, undefined, true,\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: () => {\n        onCopyLink();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\n\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport useMedia from '../../../hooks/useMedia';\nimport useFlag from '../../../hooks/useFlag';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport {\n  isSameReaction, canSendReaction, getReactionUniqueKey, sortReactions,\n} from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\n\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\nimport Button from '../../ui/Button';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  }, [onShowMore]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={cn('&', lang.isRtl && 'isRtl')} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiMessage,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/Skeleton';\nimport Avatar from '../../common/Avatar';\nimport ReactionSelector from './ReactionSelector';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentUsers?: ApiUser[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_BUBBLE_EXTRA_WIDTH = 32;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  availableReactions,\n  topReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  maxUniqueReactions,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentUsers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const { showNotification, openStickerSet, openCustomEmojiSets } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  }, [lang, onClose, showNotification]);\n\n  const handleOpenCustomEmojiSets = useCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  }, [customEmojiSets, onClose, openCustomEmojiSets, openStickerSet]);\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message, targetHref, handleAfterCopy, canCopyLink ? onCopyLink : undefined, onCopyMessages, onCopyNumber,\n    );\n\n  const getTriggerElement = useCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  }, [isSponsoredMessage, messageId]);\n\n  const getRootElement = useCallback(\n    () => document.querySelector('.Transition_slide-active > .MessageList'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => document.querySelector('.MessageContextMenu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      marginSides: withReactions ? REACTION_BUBBLE_EXTRA_WIDTH : undefined,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  }, [isDesktop, isMobile, withReactions]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenReactionPicker = useCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  }, [onReactionPickerOpen]);\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          maxUniqueReactions={maxUniqueReactions}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenReactionPicker}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && <MenuItem icon=\"reply\" onClick={onReply}>{lang('Reply')}</MenuItem>}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {canCopy && copyOptions.map((option) => (\n          <MenuItem key={option.label} icon={option.icon} onClick={option.handler}>{lang(option.label)}</MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <MenuItem\n            className=\"MessageContextMenu--seen-by\"\n            icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n            onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n            disabled={!canShowReactionsCount && !seenByDatesCount}\n          >\n            <span className=\"MessageContextMenu--seen-by-label\">\n              {canShowReactionsCount && message.reactors?.count ? (\n                canShowSeenBy && seenByDatesCount\n                  ? lang(\n                    'Chat.OutgoingContextMixedReactionCount',\n                    [message.reactors.count, seenByDatesCount],\n                  )\n                  : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n              ) : (\n                seenByDatesCount === 1 && seenByRecentUsers\n                  ? renderText(getUserFullName(seenByRecentUsers[0])!)\n                  : (seenByDatesCount\n                    ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                    : lang('Conversation.ContextMenuNoViews')\n                  )\n              )}\n            </span>\n            <div className=\"avatars\">\n              {seenByRecentUsers?.map((user) => (\n                <Avatar\n                  size=\"micro\"\n                  user={user}\n                />\n              ))}\n            </div>\n          </MenuItem>\n        )}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && <MenuItem icon=\"help\" onClick={onAboutAds}>{lang('SponsoredMessageInfo')}</MenuItem>}\n        {isSponsoredMessage && onSponsoredHide && (\n          <MenuItem icon=\"stop\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { MessageListType, TabState } from '../../../global/types';\nimport type {\n  ApiAvailableReaction, ApiStickerSetInfo, ApiMessage, ApiStickerSet, ApiChatReactions, ApiReaction, ApiThreadInfo,\n} from '../../../api/types';\nimport type { IAlbum, IAnchorPosition } from '../../../types';\n\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsPremiumPurchaseBlocked,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedTranslationLanguage,\n  selectStickerSet,\n} from '../../../global/selectors';\nimport {\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isOwnMessage,\n  areReactionsEmpty,\n  isUserId,\n  isMessageLocal,\n  getMessageVideo,\n  getChatMessageLink,\n  isServiceNotificationMessage,\n} from '../../../global/helpers';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useSchedule from '../../../hooks/useSchedule';\n\nimport DeleteMessageModal from '../../common/DeleteMessageModal';\nimport ReportModal from '../../common/ReportModal';\nimport PinMessageModal from '../../common/PinMessageModal';\nimport MessageContextMenu from './MessageContextMenu';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatUsername?: string;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  activeDownloads?: TabState['activeDownloads']['byChatId'][number];\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  maxUniqueReactions?: number;\n  threadId?: number;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  topReactions,\n  isOpen,\n  messageListType,\n  chatUsername,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  threadId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openChat,\n    setReplyingToId,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMessageMedia,\n    cancelMessageMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openMessageLanguageModal,\n    openReactionPicker,\n  } = getActions();\n\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentUsers = useMemo(() => {\n    if (message.reactions?.recentReactions?.length) {\n      // No need for expensive global updates on users, so we avoid them\n      const usersById = getGlobal().users.byId;\n\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(({ userId }) => usersById[userId]));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, 3);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return Object.keys(message.seenByDates).slice(0, 3).map((id) => usersById[id]).filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(msg.id);\n      });\n    }\n\n    return activeDownloads?.[message.isScheduled ? 'scheduledIds' : 'ids']?.includes(message.id);\n  }, [activeDownloads, album, message]);\n\n  const handleDelete = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  }, []);\n\n  const handleReport = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  }, []);\n\n  const closeMenu = useCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const closeDeleteModal = useCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const closeReportModal = useCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const closePinModal = useCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const handleReply = useCallback(() => {\n    setReplyingToId({ messageId: message.id });\n    closeMenu();\n  }, [setReplyingToId, message.id, closeMenu]);\n\n  const handleOpenThread = useCallback(() => {\n    openChat({\n      id: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  }, [closeMenu, message.chatId, message.id, openChat]);\n\n  const handleEdit = useCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  }, [setEditingId, message.id, closeMenu]);\n\n  const handlePin = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  }, []);\n\n  const handleUnpin = useCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  }, [pinMessage, message.id, closeMenu]);\n\n  const handleForward = useCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  }, [openForwardMenu, message, closeMenu, album]);\n\n  const handleFaveSticker = useCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  }, [closeMenu, message.content.sticker, faveSticker]);\n\n  const handleUnfaveSticker = useCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  }, [closeMenu, message.content.sticker, unfaveSticker]);\n\n  const handleCancelVote = useCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  }, [closeMenu, message, cancelPollVote]);\n\n  const handlePollClose = useCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  }, [closeMenu, message, closePoll]);\n\n  const handleSelectMessage = useCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  }, [closeMenu, message.id, toggleMessageSelection, album]);\n\n  const handleScheduledMessageSend = useCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  }, [closeMenu, message.chatId, message.id, sendScheduledMessages]);\n\n  const handleRescheduleMessage = useCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  }, [message.chatId, message.id, onClose, rescheduleMessage]);\n\n  const handleOpenCalendar = useCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  }, [handleRescheduleMessage, requestCalendar]);\n\n  const handleOpenSeenByModal = useCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  }, [closeMenu, message.chatId, message.id, openSeenByModal]);\n\n  const handleOpenReactorListModal = useCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  }, [closeMenu, openReactorListModal, message.chatId, message.id]);\n\n  const handleCopyMessages = useCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  }, [closeMenu, copyMessagesByIds]);\n\n  const handleCopyLink = useCallback(() => {\n    copyTextToClipboard(getChatMessageLink(message.chatId, chatUsername, threadId, message.id));\n    closeMenu();\n  }, [chatUsername, closeMenu, message, threadId]);\n\n  const handleCopyNumber = useCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  }, [closeMenu, message]);\n\n  const handleDownloadClick = useCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      if (isDownloading) {\n        cancelMessageMediaDownload({ message: msg });\n      } else {\n        downloadMessageMedia({ message: msg });\n      }\n    });\n    closeMenu();\n  }, [album, message, closeMenu, isDownloading, cancelMessageMediaDownload, downloadMessageMedia]);\n\n  const handleSaveGif = useCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  }, [closeMenu, message, saveGif]);\n\n  const handleToggleReaction = useCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n    });\n    closeMenu();\n  }, [closeMenu, message, toggleReaction]);\n\n  const handleReactionPickerOpen = useCallback((position: IAnchorPosition) => {\n    openReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  }, [message.chatId, message.id]);\n\n  const handleTranslate = useCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  }, [closeMenu, message, requestMessageTranslation]);\n\n  const handleShowOriginal = useCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  }, [closeMenu, message, showOriginalMessage]);\n\n  const handleSelectLanguage = useCallback(() => {\n    openMessageLanguageModal({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  }, [closeMenu, message.chatId, message.id, openMessageLanguageModal]);\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        maxUniqueReactions={maxUniqueReactions}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentUsers={seenByRecentUsers}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        isSchedule={messageListType === 'scheduled'}\n        onClose={closeDeleteModal}\n        album={album}\n        message={message}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const activeDownloads = selectActiveDownloads(global, message.chatId);\n    const chat = selectChat(global, message.chatId);\n    const { seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions } = global.appConfig || {};\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const isPrivate = chat && isUserId(chat.id);\n    const isOwn = isOwnMessage(message);\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const isLocal = isMessageLocal(message);\n    const isServiceNotification = isServiceNotificationMessage(message);\n    const canShowSeenBy = Boolean(chat\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n\n    const { canTranslate: isTranslationEnabled, doNotTranslate } = global.settings.byKey;\n\n    const canTranslateLanguage = !detectedLanguage || !doNotTranslate.includes(detectedLanguage);\n    const canTranslate = IS_TRANSLATION_SUPPORTED && isTranslationEnabled && message.content.text\n      && canTranslateLanguage && !isLocal && !isServiceNotification && !isScheduled && !isAction && !hasTranslation\n      && !message.emojiOnlyCount;\n\n    return {\n      availableReactions: global.availableReactions,\n      topReactions: global.topReactions,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: canCopyNumber || (!isProtected && canCopy),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      maxUniqueReactions,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      threadId,\n      canTranslate,\n      canShowOriginal: hasTranslation,\n      canSelectLanguage: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(ContextMenuContainer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useFlag from '../../../hooks/useFlag';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n};\n\ntype StateProps = {\n  canBuyPremium?: boolean;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps & StateProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onClose,\n  onCloseAnimationEnd,\n  canBuyPremium,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useCallback(() => {\n    onAboutAds();\n    closeMenu();\n  }, [closeMenu, onAboutAds]);\n\n  const handleSponsoredHide = useCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  }, [closeMenu, onClose, openPremiumModal]);\n\n  const handleSponsorInfo = useCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  }, [message.additionalInfo, message.sponsorInfo]);\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={canBuyPremium ? handleSponsoredHide : undefined}\n        onSponsorInfo={handleSponsorInfo}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canBuyPremium: !selectIsCurrentUserPremium(global) && !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(SponsoredMessageContextMenuContainer));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsChatWithSelf, selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet, selectThreadInfo,\n} from '../../global/selectors';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useSchedule from '../../hooks/useSchedule';\nimport usePrevious from '../../hooks/usePrevious';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport StickerButton from './StickerButton';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [onClose, requestCalendar, sendMessage, shouldSchedule, isAdded, shouldUpdateStickerSetOrder]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isComments) && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qzt_zq5gWHne6P2rw7Wj\",\"sets\":\"Ay41sqhq2QmXdgDHnt2E\"};","import React, {\n  memo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => (\n          <StickerSetCard\n            key={customEmojiSet.id}\n            className={styles.setCard}\n            stickerSet={customEmojiSet}\n            onClick={handleSetClick}\n            observeIntersection={observeIntersectionForCovers}\n            noPlay={!canPlayAnimatedEmojis}\n          />\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { customEmojiSetIds }): StateProps => {\n    const customEmojiSets = customEmojiSetIds?.map((id) => global.stickers.setsById[id]);\n\n    return {\n      customEmojiSets,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport {\n  selectChat,\n  selectChatBot,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsPremiumPurchaseBlocked,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Portal from '../ui/Portal';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport ReportModal from '../common/ReportModal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: string; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isChatInfoShown,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openGiftPremiumModal,\n    openChatWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  }, []);\n\n  const closeReportModal = useCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const closeMuteModal = useCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const handleDelete = useCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  }, []);\n\n  const closeMenu = useCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const handleViewGroupInfo = useCallback(() => {\n    openChatWithInfo({ id: chatId, threadId });\n    closeMenu();\n  }, [chatId, closeMenu, openChatWithInfo, threadId]);\n\n  const closeDeleteModal = useCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  }, [onClose]);\n\n  const handleStartBot = useCallback(() => {\n    sendBotCommand({ command: '/start' });\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleUnmuteClick = useCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  }, [chatId, closeMenu, updateChatMutedState]);\n\n  const handleMuteClick = useCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  }, []);\n\n  const handleCreateTopicClick = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n    closeMenu();\n  }, [openCreateTopicPanel, chatId, closeMenu]);\n\n  const handleEditTopicClick = useCallback(() => {\n    openEditTopicPanel({ chatId, topicId: threadId });\n    closeMenu();\n  }, [openEditTopicPanel, chatId, threadId, closeMenu]);\n\n  const handleViewAsTopicsClick = useCallback(() => {\n    openChat({ id: undefined });\n    closeMenu();\n  }, [closeMenu, openChat]);\n\n  const handleEnterVoiceChatClick = useCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  }, [closeMenu, canCreateVoiceChat, chatId, requestMasterAndJoinGroupCall, createGroupCall]);\n\n  const handleLinkedChatClick = useCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  }, [chatId, closeMenu, openLinkedChat]);\n\n  const handleGiftPremiumClick = useCallback(() => {\n    openGiftPremiumModal({ forUserId: chatId });\n    closeMenu();\n  }, [openGiftPremiumModal, chatId, closeMenu]);\n\n  const handleAddContactClick = useCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  }, [openAddContactDialog, chatId, closeMenu]);\n\n  const handleSubscribe = useCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  }, [closeMenu, onSubscribeChannel]);\n\n  const handleVideoCall = useCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  }, [chatId, closeMenu, requestMasterAndRequestCall]);\n\n  const handleCall = useCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  }, [chatId, closeMenu, requestMasterAndRequestCall]);\n\n  const handleSearch = useCallback(() => {\n    onSearchClick();\n    closeMenu();\n  }, [closeMenu, onSearchClick]);\n\n  const handleStatisticsClick = useCallback(() => {\n    toggleStatistics();\n    closeMenu();\n  }, [closeMenu, toggleStatistics]);\n\n  const handleSelectMessages = useCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  }, [closeMenu, enterMessageSelectMode]);\n\n  const handleOpenAsMessages = useCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  }, [closeMenu, onAsMessagesClick]);\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canRestartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {lang(isPrivate\n                  ? 'DeleteChatUser'\n                  : (canDeleteChat ? 'GroupInfo.DeleteAndExit' : (isChannel ? 'LeaveChannel' : 'Group.LeaveGroup')))}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={chat}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectChatBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const canGiftPremium = Boolean(\n      global.lastSyncTime\n      && userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState, useLayoutEffect,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { debounce } from '../../util/schedulers';\nimport {\n  selectCurrentTextSearch,\n  selectCurrentChat,\n  selectTabState,\n  selectCurrentMessageList,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dateFormat';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: number;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const handleMessageSearchQueryChange = useCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (newQuery.length) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  }, [searchTextMessagesLocal, setLocalTextSearchQuery]);\n\n  const handleUp = useCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  }, [chat, foundIds, focusedIndex, threadId]);\n\n  const handleDown = useCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  }, [chat, foundIds, focusedIndex, threadId]);\n\n  const handleCloseLocalTextSearch = useCallback(() => {\n    closeLocalTextSearch();\n  }, [closeLocalTextSearch]);\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {query ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chat = selectCurrentChat(global);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n    };\n  },\n)(MobileSearchFooter));\n","import React, { memo, useRef, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiReaction, ApiAvailableReaction, ApiChatReactions } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport buildClassName from '../../../util/buildClassName';\nimport { getReactionUniqueKey, sortReactions } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ReactionEmoji from '../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const allAvailableReactions = useMemo(() => {\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, 'no-selection', isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionUniqueKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global;\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vUbCal8_iSPkPVzQcz24\",\"wrapper\":\"f4pTNqkRRCFtZzheXcV9\"};","import React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiMessage, ApiReaction, ApiSticker, ApiReactionCustomEmoji,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectTabState,\n} from '../../../global/selectors';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\nimport Menu from '../../ui/Menu';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  withCustomReactions?: boolean;\n  message?: ApiMessage;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  position,\n  isTranslucent,\n  withCustomReactions,\n}) => {\n  const { toggleReaction, closeReactionPicker } = getActions();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    return {\n      x: storedPosition.x + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (withCustomReactions ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [storedPosition, withCustomReactions]);\n\n  const getMenuElement = useCallback(() => menuRef.current, []);\n  const getLayout = useCallback(() => ({ withPortal: true, isDense: true }), []);\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  }, [renderedChatId, renderedMessageId]);\n\n  const handleToggleReaction = useCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  }, [renderedChatId, renderedMessageId]);\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push('emoticon' in reaction ? reaction.emoticon : reaction.documentId);\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(styles.menuContent, !withCustomReactions && styles.onlyReactions)}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      <CustomEmojiPicker\n        idPrefix=\"message-emoji-set-\"\n        isHidden={!isOpen || !withCustomReactions}\n        loadAndPlay={Boolean(isOpen && withCustomReactions)}\n        isReactionPicker\n        className={!withCustomReactions ? styles.hidden : undefined}\n        selectedReactionIds={selectedReactionIds}\n        isTranslucent={isTranslucent}\n        onCustomEmojiSelect={handleToggleCustomReaction}\n        onReactionSelect={handleToggleReaction}\n      />\n      {!withCustomReactions && Boolean(renderedChatId) && (\n        <ReactionPickerLimited\n          chatId={renderedChatId}\n          loadAndPlay={isOpen}\n          onReactionSelect={handleToggleReaction}\n          selectedReactionIds={selectedReactionIds}\n        />\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const { chatId, messageId, position } = state.reactionPicker || {};\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = chatId ? isUserId(chatId) : false;\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const areCustomReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  return {\n    message,\n    position,\n    withCustomReactions: chat?.isForbidden || areSomeReactionsAllowed\n      ? false\n      : areCustomReactionsAllowed || isPrivateChat,\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"s4eo5UICU4xBMDvMxWU_\",\"menuContent\":\"Q2c4gWaMXfXzLL_Jbbjr\",\"onlyReactions\":\"rWa1hIFdrb4U0xFrHLic\",\"hidden\":\"P95Gk2sUhvBJ70LKg_vc\"};","import { fixImageContent } from '../../../../util/parseMessageInput';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\nimport animateScroll from './animateScroll';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  }, [items]);\n\n  const handleArrowKey = useCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  }, [setSelectedItemIndex, getSelectedIndex]);\n\n  const handleItemSelect = useCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  }, [items, onSelect, selectedItemIndex]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useCallback, useEffect, useRef, memo,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  }, [onInsertUserName]);\n\n  const handleClick = useCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  }, [handleUserSelect]);\n\n  const handleSelectMention = useCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  }, [handleUserSelect]);\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZqafRENXro3B4A2UTp9s\",\"preview\":\"FfTpBGrctDEiFLXC4aqP\",\"duration\":\"Igo3Vsou5areTsmh2Ng3\",\"single\":\"ZJNnn8HUzq8cC3WwTzY0\",\"no-grouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"noGrouping\":\"Aj1qc6z4t_pSWrsXi0qf\",\"file\":\"QAlzNLWBYdWR4UMMaiGm\",\"overlay\":\"YOoQRXIFINVsu3FFIKR0\",\"action-item\":\"y5JLmIFtCzK05l40rdHJ\",\"actionItem\":\"y5JLmIFtCzK05l40rdHJ\",\"delete-file\":\"Qqp72_dWGSui9ORCN3MT\",\"deleteFile\":\"Qqp72_dWGSui9ORCN3MT\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { GIF_MIME_TYPE, SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useCallback(() => {\n    onToggleSpoiler?.(index);\n  }, [index, onToggleSpoiler]);\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'image':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const canDisplaySpoilerButton = attachment.mimeType !== GIF_MIME_TYPE;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && canDisplaySpoilerButton\n    && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          {canDisplaySpoilerButton && (\n            <i\n              className={buildClassName(\n                'icon',\n                attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n                styles.actionItem,\n              )}\n              onClick={handleSpoilerClick}\n            />\n          )}\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'image';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VncEpkgqABgA8MUCarxh\",\"mobile\":\"EBYYWwiG6Uj4Aqt4DKGy\",\"symbolMenuOpen\":\"eVLBe8iLKwjR6B31YwJj\",\"header-border\":\"u08mL9ikB7S0oRZKxvsA\",\"headerBorder\":\"u08mL9ikB7S0oRZKxvsA\",\"attachments\":\"d_uMaJ26HlkCfSn5XiQp\",\"attachments-bottom-padding\":\"DUGHCuTKi7H5d_1_vYqj\",\"attachmentsBottomPadding\":\"DUGHCuTKi7H5d_1_vYqj\",\"caption-wrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"captionWrapper\":\"BKyeut4mBbq_uw8uGfSU\",\"caption-top-border\":\"UrYInfws7roRktEiMxvT\",\"captionTopBorder\":\"UrYInfws7roRktEiMxvT\",\"caption\":\"c4dyk1Emgpla8BvDJMAz\",\"drop-target\":\"iWmxxlUXOjTzbvJzWF8g\",\"dropTarget\":\"iWmxxlUXOjTzbvJzWF8g\",\"hovered\":\"B5wzgwCPupbnO1XB5Rwc\",\"send-wrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"sendWrapper\":\"z4wF5bBjL74eNUj_UYeu\",\"send\":\"eFD46lVH5GCILXEOx9BO\",\"is-pointer-env\":\"Os76p3jpmhB2IWYxXigi\",\"isPointerEnv\":\"Os76p3jpmhB2IWYxXigi\"};","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiAttachment, ApiChatMember, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport buildClassName from '../../../util/buildClassName';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\n\nimport usePrevious from '../../../hooks/usePrevious';\nimport useMentionTooltip from './hooks/useMentionTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport MessageInput from './MessageInput';\nimport MentionTooltip from './MentionTooltip';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  attachments: ApiAttachment[];\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean((shouldSendCompressed || shouldForceCompression) && !shouldForceAsFile);\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = (shouldSchedule || shouldSendScheduled) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped);\n      updateAttachmentSettings({\n        shouldCompress: isSendingCompressed,\n        shouldSendGrouped,\n      });\n    }\n  }, [\n    isOpen, shouldSchedule, onSendScheduled, onSendSilent, onSend, isSendingCompressed, shouldSendGrouped,\n    updateAttachmentSettings,\n  ]);\n\n  const handleSendSilent = useCallback(() => {\n    sendAttachments(true);\n  }, [sendAttachments]);\n\n  const handleSendClick = useCallback(() => {\n    sendAttachments();\n  }, [sendAttachments]);\n\n  const handleScheduleClick = useCallback(() => {\n    sendAttachments(false, true);\n  }, [sendAttachments]);\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  }, [isEverySpoiler, onFileAppend, unmarkHovered]);\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  }, [isEverySpoiler, onFileAppend]);\n\n  const handleDocumentSelect = useCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  }, [handleFileSelect]);\n\n  const handleDelete = useCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  }, [attachments, onAttachmentsUpdate]);\n\n  const handleEnableSpoilers = useCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: a.mimeType !== GIF_MIME_TYPE ? true : undefined,\n    })));\n  }, [attachments, onAttachmentsUpdate]);\n\n  const handleDisableSpoilers = useCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  }, [attachments, onAttachmentsUpdate]);\n\n  const handleToggleSpoiler = useCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  }, [attachments, onAttachmentsUpdate]);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_IMAGE_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => a.mimeType !== GIF_MIME_TYPE\n      && !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang('PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang('PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang('PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang('PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        <DropdownMenu\n          className=\"attachment-modal-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n          {hasMedia && (\n            <>\n              {\n                !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                    {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                    {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                  </MenuItem>\n                ))\n              }\n              {isSendingCompressed && hasAnySpoilerable && (\n                hasSpoiler ? (\n                  <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                    {lang('Attachment.DisableSpoiler')}\n                  </MenuItem>\n                ) : (\n                  <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                    {lang('Attachment.EnableSpoiler')}\n                  </MenuItem>\n                )\n              )}\n            </>\n          )}\n          {isMultiple && (\n            shouldSendGrouped ? (\n              <MenuItem\n                icon=\"grouped-disable\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setShouldSendGrouped(false)}\n              >\n                Ungroup All Media\n              </MenuItem>\n            ) : (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                Group All Media\n              </MenuItem>\n            )\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule ? lang('Next') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseMessageInput from '../../../util/parseMessageInput';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport InputText from '../../ui/InputText';\nimport Checkbox from '../../ui/Checkbox';\nimport RadioGroup from '../../ui/RadioGroup';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const solutionRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useLang();\n\n  const focusInput = useCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  }, [isOpen]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  useLayoutEffect(() => {\n    const solutionEl = solutionRef.current;\n\n    if (solutionEl && solution !== solutionEl.innerHTML) {\n      solutionEl.innerHTML = solution;\n    }\n  }, [solution]);\n\n  const addNewOption = useCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      list.classList.toggle('overflown', list.scrollHeight > MAX_LIST_HEIGHT);\n      list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n    });\n  }, []);\n\n  const handleCreate = useCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter((o) => o.length);\n\n    if (!questionTrimmed || optionsTrimmed.length < 2) {\n      setQuestion(questionTrimmed);\n      if (optionsTrimmed.length) {\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption])) {\n      setHasErrors(true);\n      return;\n    }\n\n    const answers = optionsTrimmed\n      .map((text, index) => ({\n        text: text.trim(),\n        option: String(index),\n        ...(index === correctOption && { correct: true }),\n      }));\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: questionTrimmed,\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseMessageInput(solution.substring(0, MAX_SOLUTION_LENGTH))) || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  }, [\n    isOpen,\n    question,\n    options,\n    isQuizMode,\n    correctOption,\n    isAnonymous,\n    isMultipleAnswers,\n    onSend,\n    addNewOption,\n    solution,\n  ]);\n\n  const updateOption = useCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  }, [options, addNewOption]);\n\n  const removeOption = useCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  }, [correctOption, options]);\n\n  const handleCorrectOptionChange = useCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  }, [setCorrectOption]);\n\n  const handleIsAnonymousChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  }, []);\n\n  const handleMultipleAnswersChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  }, []);\n\n  const handleQuizModeChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  }, []);\n\n  const handleKeyPress = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  }, [handleCreate]);\n\n  const handleQuestionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  }, []);\n\n  const getQuestionError = useCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  }, [hasErrors, lang, question]);\n\n  const getOptionsError = useCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  }, [hasErrors, lang, options]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: index === options.length - 1 }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <div\n              ref={solutionRef}\n              className=\"form-control\"\n              contentEditable\n              dir=\"auto\"\n              onChange={(e) => setSolution(e.currentTarget.innerHTML)}\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { IS_ELECTRON, PRODUCTION_URL } from '../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  }, [emoji, onClick]);\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_ELECTRON ? PRODUCTION_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\n\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import React, {\n  useState, useEffect, memo, useRef, useMemo, useCallback,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiModule,\n  EmojiRawData,\n  EmojiData,\n} from '../../../util/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { uncompressEmoji } from '../../../util/emoji';\nimport animateScroll from '../../../util/animateScroll';\nimport { pick } from '../../../util/iteratees';\nimport buildClassName from '../../../util/buildClassName';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useScrolledState from '../../../hooks/useScrolledState';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  }, []);\n\n  const handleEmojiSelect = useCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  }, [onEmojiSelect]);\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main no-selection', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import React, {\n  useEffect, memo, useRef, useMemo, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiSticker, ApiChat } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../../types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  PREMIUM_STICKER_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport { pickTruthy, uniqueByField } from '../../../util/iteratees';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\n\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useScrolledState from '../../../hooks/useScrolledState';\n\nimport Avatar from '../../common/Avatar';\nimport Loading from '../../ui/Loading';\nimport Button from '../../ui/Button';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport StickerSetCover from './StickerSetCover';\nimport PremiumIcon from '../../common/PremiumIcon';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  premiumStickers: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  premiumStickers,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  onStickerSelect,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat!.id, threadId);\n\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, 'sticker-set', isHidden);\n\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, addedSetIds));\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    if (isCurrentUserPremium) {\n      const addedPremiumStickers = existingAddedSetIds\n        .map(({ stickers }) => stickers?.filter((sticker) => sticker.hasEffect))\n        .flat()\n        .filter(Boolean);\n\n      const totalPremiumStickers = uniqueByField([...addedPremiumStickers, ...premiumStickers], 'id');\n\n      if (totalPremiumStickers.length) {\n        defaultSets.push({\n          id: PREMIUM_STICKER_SET_ID,\n          accessHash: '0',\n          title: lang('PremiumStickers'),\n          stickers: totalPremiumStickers,\n          count: totalPremiumStickers.length,\n        });\n      }\n    }\n\n    if (chatStickerSetId) {\n      const fullSet = stickerSetsById[chatStickerSetId];\n      if (fullSet) {\n        defaultSets.push({\n          id: CHAT_STICKER_SET_ID,\n          accessHash: fullSet.accessHash,\n          title: lang('GroupStickers'),\n          stickers: fullSet.stickers,\n          count: fullSet.stickers!.length,\n        });\n      }\n    }\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds, stickerSetsById, favoriteStickers, recentStickers, isCurrentUserPremium, chatStickerSetId, lang,\n    premiumStickers,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents && !noPopulatedSets && canSendStickers;\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  }, [addRecentSticker, onStickerSelect]);\n\n  const handleStickerUnfave = useCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  }, [unfaveSticker]);\n\n  const handleStickerFave = useCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  }, [faveSticker]);\n\n  const handleMouseMove = useCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, sendMessageAction]);\n\n  const handleRemoveRecentSticker = useCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  }, [removeRecentSticker]);\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.id === PREMIUM_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === PREMIUM_STICKER_SET_ID ? (\n            <PremiumIcon withGradient big />\n          ) : stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar chat={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-selection no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div ref={headerRef} className={headerClassName}>\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={buildClassName(styles.main, 'no-selection', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            index={i}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      premiumSet,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      premiumStickers: premiumSet.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useMedia from '../../hooks/useMedia';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\n\nimport Spinner from '../ui/Spinner';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const localMediaHash = `gif${gif.id}`;\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n  const videoData = useMedia(localMediaHash, !loadAndPlay, ApiMediaFormat.BlobUrl);\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => ref.current!.querySelector('.gif-context-menu .bubble'),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  }, [isContextMenuOpen, onClick, gif, videoData]);\n\n  const handleUnsaveClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  }, [onUnsaveClick, gif]);\n\n  const handleContextDelete = useCallback(() => {\n    onUnsaveClick?.(gif);\n  }, [gif, onUnsaveClick]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  }, [gif, onClick, videoData]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  }, [gif, onClick, videoData]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  }, [handleBeforeContextMenu]);\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    localMediaHash,\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          // We need to always render to avoid blur re-calculation\n          style={isVideoReady ? 'display: none;' : undefined}\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, memo, useRef, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Loading from '../../ui/Loading';\nimport GifButton from '../../common/GifButton';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  }, [saveGif]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText,\n}) => {\n  const lang = useLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  }, [activeTab, onSearchOpen]);\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import React, {\n  memo, useCallback, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectTabState, selectIsCurrentUserPremium, selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport StickerPicker from './StickerPicker';\nimport GifPicker from './GifPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\nimport Portal from '../../ui/Portal';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isCurrentUserPremium?: boolean;\n  lastSyncTime?: number;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isLeftColumnShown,\n  isCurrentUserPremium,\n  lastSyncTime,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  className,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n}) => {\n  const { loadPremiumSetStickers } = getActions();\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useEffect(() => {\n    if (lastSyncTime && isCurrentUserPremium) {\n      loadPremiumSetStickers();\n    }\n  }, [isCurrentUserPremium, lastSyncTime, loadPremiumSetStickers]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  }, [onEmojiSelect]);\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  }, [onCustomEmojiSelect]);\n\n  const handleSearch = useCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  }, [onClose, onSearchOpen]);\n\n  const handleStickerSelect = useCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  }, [onStickerSelect]);\n\n  const lang = useLang();\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            canSendStickers={canSendStickers}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      lastSyncTime: global.lastSyncTime,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiUser } from '../../../api/types';\n\nimport renderText from '../../common/helpers/renderText';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\n\nimport './BotCommand.scss';\n\ntype OwnProps = {\n  botCommand: ApiBotCommand;\n  bot?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  onClick: (botCommand: ApiBotCommand) => void;\n};\n\nconst BotCommand: FC<OwnProps> = ({\n  withAvatar,\n  focus,\n  botCommand,\n  bot,\n  onClick,\n}) => {\n  return (\n    <ListItem\n      key={botCommand.command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => onClick(botCommand)}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" user={bot} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{botCommand.command}</span>\n        <span className=\"subtitle\">{renderText(botCommand.description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BotCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useCallback, useEffect, useRef, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { Signal } from '../../../util/signals';\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport BotCommand from './BotCommand';\n\nimport './BotCommandTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  withUsername,\n  botCommands,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  }, [onClick, sendBotCommand, withUsername]);\n\n  const handleSelect = useCallback((botCommand: ApiBotCommand) => {\n    // We need an additional check because tooltip is updated with throttling\n    if (!botCommand.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    handleSendCommand(botCommand);\n    return true;\n  }, [getHtml, handleSendCommand]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: botCommands,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffect(() => {\n    if (botCommands && !botCommands.length) {\n      onClose();\n    }\n  }, [botCommands, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  const prevCommands = usePrevious(botCommands && botCommands.length ? botCommands : undefined, shouldRender);\n  const renderedCommands = botCommands && !botCommands.length ? prevCommands : botCommands;\n\n  if (!shouldRender || (renderedCommands && !renderedCommands.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'BotCommandTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedCommands && renderedCommands.map((chatBotCommand, index) => (\n        <BotCommand\n          key={`${chatBotCommand.botId}_${chatBotCommand.command}`}\n          botCommand={chatBotCommand}\n          // No need for expensive global updates on users and chats, so we avoid them\n          bot={getGlobal().users.byId[chatBotCommand.botId]}\n          withAvatar\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(BotCommandTooltip);\n","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Menu from '../../ui/Menu';\nimport BotCommand from './BotCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useCallback((botCommand: ApiBotCommand) => {\n    sendBotCommand({\n      command: `/${botCommand.command}`,\n    });\n    onClose();\n  }, [onClose, sendBotCommand]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <BotCommand\n          key={botCommand.command}\n          botCommand={botCommand}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport Loading from '../../ui/Loading';\nimport StickerButton from '../../common/StickerButton';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"o7fHB9vMHP_k5l9rZC2R\",\"emojiButton\":\"LzdBMbvLbmND0s2zfaff\"};","import React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\n\nimport Loading from '../../ui/Loading';\nimport StickerButton from '../../common/StickerButton';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  }, [addRecentCustomEmoji, clearCustomEmojiForEmoji, isOpen, onCustomEmojiSelect]);\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className=\"CustomSendMenu with-menu-transitions\"\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n      {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{lang('SendWithoutSound')}</MenuItem>}\n      {onSendSchedule && (\n        <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>\n      )}\n      {onSendSchedule && displayScheduleUntilOnline && (\n        <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n          {lang('SendWhenOnline')}\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  }, [emoji, onClick]);\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import React, {\n  memo, useCallback, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\n\nimport Loading from '../../ui/Loading';\nimport EmojiButton from './EmojiButton';\nimport CustomEmojiButton from './CustomEmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  }, [addRecentEmoji, onEmojiSelect]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  }, [addRecentCustomEmoji, onCustomEmojiSelect]);\n\n  const handleSelect = useCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  }, [handleCustomEmojiSelect, handleSelectEmoji]);\n\n  const handleClick = useCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  }, [addRecentEmoji, onEmojiSelect]);\n\n  const handleCustomEmojiClick = useCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  }, [addRecentCustomEmoji, onCustomEmojiSelect]);\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport useMedia from '../../../../hooks/useMedia';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? `webDocument:${thumbnail.url}` : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult && isForGallery) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailDataUrl = useMedia(webThumbnail ? `webDocument:${webThumbnail.url}` : undefined);\n  const mediaBlobUrl = useMedia(photo && `photo${photo.id}?size=m`);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const handleClick = useCallback(() => {\n    onClick(inlineResult);\n  }, [inlineResult, onClick]);\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailDataUrl} alt=\"\" />\n        <img src={mediaBlobUrl} className={buildClassName('full-media', transitionClassNames)} alt=\"\" />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbUrl={mediaBlobUrl || (thumbnail?.dataUri || thumbnailDataUrl)}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useCallback(() => {\n    onClick(inlineResult);\n  }, [inlineResult, onClick]);\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\n\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  }, [inlineResult, onClick]);\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport buildClassName from '../../../util/buildClassName';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { throttle } from '../../../util/schedulers';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport MediaResult from './inlineResults/MediaResult';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport StickerResult from './inlineResults/StickerResult';\nimport ListItem from '../../ui/ListItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  }, [loadMore]);\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  }, [botId, openChat, startBot, switchPm]);\n\n  const handleOpenWebview = useCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n    });\n  }, [botId, switchWebview]);\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import React, {\n  useCallback, useEffect, useRef, memo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport { isUserId } from '../../../global/helpers';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport Menu from '../../ui/Menu';\nimport FullNameTitle from '../../common/FullNameTitle';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  }, [chatId, onClose, saveDefaultSendAs]);\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = isUserId(id) ? usersById[id] : undefined;\n        const chat = !user ? chatsById[id] : undefined;\n        const userOrChat = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              chat={chat}\n              user={user}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {userOrChat && <FullNameTitle peer={userOrChat} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import React, {\n  useMemo, memo, useRef, useEffect, useCallback,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage, ApiUser, ApiChat } from '../../api/types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectUser,\n  selectChatMessages,\n  selectChat,\n  selectCurrentTextSearch,\n} from '../../global/selectors';\nimport { isChatChannel } from '../../global/helpers';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: number;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  totalCount?: number;\n  foundIds?: number[];\n};\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  chat,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const handleSearchTextMessagesLocal = useCallback(() => {\n    searchTextMessagesLocal();\n  }, [searchTextMessagesLocal]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if (!query || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const senderUser = message.senderId ? selectUser(getGlobal(), message.senderId) : undefined;\n\n      let senderChat;\n      if (chat && isChatChannel(chat)) {\n        senderChat = chat;\n      } else if (message.forwardInfo) {\n        const { isChannelPost, fromChatId } = message.forwardInfo;\n        senderChat = isChannelPost && fromChatId ? selectChat(getGlobal(), fromChatId) : undefined;\n      } else {\n        senderChat = message.senderId ? selectChat(getGlobal(), message.senderId) : undefined;\n      }\n\n      return {\n        message,\n        senderUser,\n        senderChat,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, viewportIds, messagesById, chat, focusMessage, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderUser, senderChat, onClick,\n  }: {\n    message: ApiMessage;\n    senderUser?: ApiUser;\n    senderChat?: ApiChat;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          chat={senderChat}\n          user={senderUser}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            <FullNameTitle peer={(senderUser || senderChat)!} withEmojiStatus />\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const messagesById = chat && selectChatMessages(global, chat.id);\n    if (!chat || !messagesById) {\n      return {};\n    }\n\n    const { query, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    return {\n      chat,\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, memo, useMemo, useCallback, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport StickerButton from '../common/StickerButton';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { throttle } from '../../util/schedulers';\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiVideo } from '../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport {\n  selectCurrentGifSearch,\n  selectChat,\n  selectIsChatWithBot,\n  selectCurrentMessageList,\n  selectCanScheduleUntilOnline,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport GifButton from '../common/GifButton';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({ gif, scheduledAt, isSilent });\n        });\n      } else {\n        sendMessage({ gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, requestCalendar, sendMessage, setGifSearchQuery]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isComments = Boolean(threadInfo?.originChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId) && getCanPostInChat(chat, threadId, isComments);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n    };\n  },\n)(GifSearch));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChannelStatistics, ApiGroupStatistics, ApiMessageStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport './StatisticsOverview.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'views', title: 'Stats.Message.Views', isPlain: true },\n    {\n      name: 'forwards', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n  [\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n];\n\nexport type OwnProps = {\n  isGroup?: boolean;\n  isMessage?: boolean;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiMessageStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({ isGroup, isMessage, statistics }) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName('StatisticsOverview__value', isChangeNegative && 'negative')}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  return (\n    <div className=\"StatisticsOverview\">\n      <div className=\"StatisticsOverview__header\">\n        <div className=\"StatisticsOverview__title\">{lang('StatisticOverview')}</div>\n\n        {period && (\n          <div className=\"StatisticsOverview__caption\">\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className=\"StatisticsOverview__table\">\n        {(isMessage ? MESSAGE_OVERVIEW : isGroup ? GROUP_OVERVIEW : CHANNEL_OVERVIEW).map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">\n                      {cell.isApproximate ? `≈${formatInteger(field)}` : formatInteger(field)}\n                    </b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">{field.percentage}%</b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className=\"StatisticsOverview__table-cell\">\n                  <b className=\"StatisticsOverview__table-value\">\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default memo(StatisticsOverview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport type { LangFn } from '../../../hooks/useLang';\nimport useLang from '../../../hooks/useLang';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsRecentMessage as StatisticsRecentMessageType } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageRoundVideo,\n} from '../../../global/helpers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport useMedia from '../../../hooks/useMedia';\n\nimport './StatisticsRecentMessage.scss';\n\nexport type OwnProps = {\n  message: ApiMessage & StatisticsRecentMessageType;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ message }) => {\n  const lang = useLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        'StatisticsRecentMessage',\n        Boolean(mediaBlobUrl || mediaThumbnail) && 'StatisticsRecentMessage--with-image',\n      )}\n      onClick={handleClick}\n    >\n      <div className=\"StatisticsRecentMessage__title\">\n        <div className=\"StatisticsRecentMessage__summary\">\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {lang('ChannelStats.ViewsCount', message.views, 'i')}\n        </div>\n      </div>\n\n      <div className=\"StatisticsRecentMessage__info\">\n        <div className=\"StatisticsRecentMessage__date\">\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <div className=\"StatisticsRecentMessage__meta\">\n          {message.forwards ? lang('ChannelStats.SharesCount', message.forwards) : 'No shares'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" className={buildClassName('media-preview__image', isRoundVideo && 'round')} />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useRef, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { callApi } from '../../../api/gramjs';\nimport type {\n  ApiMessage,\n  ApiChannelStatistics,\n  ApiGroupStatistics,\n  StatisticsRecentMessage as StatisticsRecentMessageType,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { selectChat, selectChatFullInfo, selectStatistics } from '../../../global/selectors';\n\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  statistics,\n  dcId,\n  isGroup,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove('hidden');\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} isGroup={isGroup} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className=\"Statistics__graph hidden\" />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentTopMessages?.length) && (\n        <div className=\"Statistics__messages\">\n          <h2 className=\"Statistics__messages-title\">{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentTopMessages.map((message) => (\n            <StatisticsRecentMessage message={message as ApiMessage & StatisticsRecentMessageType} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n\n    return {\n      statistics, dcId, isGroup,\n    };\n  },\n)(Statistics));\n","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getActions } from '../../../global';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport './StatisticsPublicForward.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsPublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => getMainUsername(data.chat), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className=\"StatisticsPublicForward\" onClick={handleClick}>\n      <Avatar size=\"medium\" chat={data.chat} />\n\n      <div className=\"StatisticsPublicForward__info\">\n        <div className=\"StatisticsPublicForward__title\">\n          {data.title}\n        </div>\n\n        <div className=\"StatisticsPublicForward__views\">\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsPublicForward);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useState, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { callApi } from '../../../api/gramjs';\nimport type { ApiMessageStatistics, ApiMessagePublicForward, StatisticsGraph } from '../../../api/types';\n\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsPublicForward from './StatisticsPublicForward';\n\nimport './Statistics.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiMessageStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiMessageStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName('Statistics custom-scroll', isReady && 'ready')}>\n      <StatisticsOverview statistics={statistics} isMessage />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName('Statistics__graph', !loadedCharts.current.includes(graph) && 'hidden')} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className=\"Statistics__public-forwards\">\n          <h2 className=\"Statistics__public-forwards-title\">{lang('Stats.Message.PublicShares')}</h2>\n\n          {statistics.publicForwardsData!.map((item: ApiMessagePublicForward) => (\n            <StatisticsPublicForward data={item} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, useState, memo, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\nimport { selectTabState } from '../../global/selectors';\nimport usePrevious from '../../hooks/usePrevious';\nimport useLang from '../../hooks/useLang';\n\nimport ShowMoreButton from '../ui/ShowMoreButton';\nimport Loading from '../ui/Loading';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              <PrivateChatInfo\n                avatarSize=\"tiny\"\n                userId={id}\n                forceShowSelf\n                noStatusOrTyping\n              />\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">{text}</span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiChat } from '../../api/types';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { getMessagePoll } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport PollAnswerResults from './PollAnswerResults';\nimport Loading from '../ui/Loading';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  lastSyncTime?: number;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  onClose,\n  isActive,\n  chat,\n  message,\n  lastSyncTime,\n}) => {\n  const lang = useLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">{renderText(summary.question, ['emoji', 'br'])}</h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {Boolean(lastSyncTime) && summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n        {!lastSyncTime && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n    const { lastSyncTime } = global;\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n      lastSyncTime,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qj1MQaLfhumlxACIpkUl\",\"content\":\"ph5g3hCSQ_72FnZ3YkuA\",\"section\":\"bYZBp9H7Ks8tqaBvQm57\",\"top\":\"sV6D57DhbsFwQhRNzw9K\",\"bottom\":\"pUkmozcBdIn4yWGGPoX1\",\"iconWrapper\":\"JT0__kgf23rGv5BWQF2s\",\"icon\":\"gx85t_IsGh2fgS2yDGtk\",\"clickable\":\"TVwtYFuxdwJH5LZ7yvwu\",\"heading\":\"o9l56jP2uXfAul061gXq\",\"icon-picker\":\"ByQF8Qg3NcYnBCvGwoH0\",\"iconPicker\":\"ByQF8Qg3NcYnBCvGwoH0\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport { getTopicColors } from '../../util/forumColors';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport TopicIcon from '../common/TopicIcon';\nimport InputText from '../ui/InputText';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport Spinner from '../ui/Spinner';\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport TopicIcon from '../common/TopicIcon';\nimport InputText from '../ui/InputText';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport Spinner from '../ui/Spinner';\nimport Loading from '../ui/Loading';\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top)}>\n              <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Avatar from '../../common/Avatar';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            status=\"original name\"\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem no-selection narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    user={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementProgress, ManagementScreens } from '../../../types';\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { debounce } from '../../../util/schedulers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TextArea from '../../ui/TextArea';\nimport Switcher from '../../ui/Switcher';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  lastSyncTime?: number;\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  lastSyncTime,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => hasLinkedChannel || isChatPublic(chat), [chat, hasLinkedChannel]);\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime && canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, loadExportedChatInvites, lastSyncTime, canInvite, loadChatJoinRequests]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickPermissions = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateGroup = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickMembers = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  }, [onScreenSelect]);\n\n  const handleTogglePreHistory = useCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  }, [chat.id, chatFullInfo]);\n\n  const handleForumToggle = useCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  }, [chatId, toggleForum]);\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [\n    isBasicGroup, chat.isCreator, chat.id,\n    closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, deleteChat, openChat,\n  ]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow no-selection\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'changeInfo'),\n      canBanUsers: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'banUsers'),\n      canInvite: isBasicGroup ? chat.isCreator : getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      lastSyncTime: global.lastSyncTime,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.availableReactions,\n      canEditForum,\n    };\n  },\n)(ManageGroup));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementScreens } from '../../../types';\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\n\nimport stopEvent from '../../../util/stopEvent';\nimport buildClassName from '../../../util/buildClassName';\nimport { isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  hasLinkedChat?: boolean;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  hasLinkedChat,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights, showNotification } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useLang();\n  const { isForum } = chat || {};\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  const handleDisabledClick = useCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  }, [lang, showNotification]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n\n          <div className=\"ListItem no-selection with-checkbox\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection with-checkbox\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n            <div className=\"ListItem no-selection with-checkbox\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem no-selection with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                disabled={shouldDisablePermissionForPublicGroup}\n                blocking\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div\n              className=\"ListItem no-selection with-checkbox\"\n              onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n            >\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={shouldDisablePermissionForPublicGroup}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem no-selection with-checkbox\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      hasLinkedChat,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useMemo, useState, memo, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useFlag from '../../../hooks/useFlag';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember) => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { ManagementProgress, ManagementScreens } from '../../../types';\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport useMedia from '../../../hooks/useMedia';\nimport useLang from '../../../hooks/useLang';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  lastSyncTime?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  lastSyncTime,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (lastSyncTime) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, loadExportedChatInvites, lastSyncTime, loadChatJoinRequests]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <div className=\"ListItem no-selection narrow\">\n            <Checkbox\n              checked={isSignaturesShown}\n              label={lang('ChannelSignMessages')}\n              onChange={handleToggleSignatures}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{lang('Subscribers', chat.membersCount ?? 0, 'i')}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      lastSyncTime: global.lastSyncTime,\n      exportedInvites: invites,\n      availableReactions: global.availableReactions,\n    };\n  },\n)(ManageChannel));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport {\n  selectChat, selectTabState, selectManagement, selectChatFullInfo,\n} from '../../../global/selectors';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SafeLink from '../../common/SafeLink';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Loading from '../../ui/Loading';\nimport Spinner from '../../ui/Spinner';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ManageUsernames from '../../common/ManageUsernames';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '' });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 1;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport useFlag from '../../../hooks/useFlag';\nimport renderText from '../../common/helpers/renderText';\nimport Avatar from '../../common/Avatar';\nimport { isChatChannel } from '../../../global/helpers';\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          chat={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          chat={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId\n      ? selectChat(global, linkedChatId)\n      : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport stopEvent from '../../../util/stopEvent';\nimport buildClassName from '../../../util/buildClassName';\nimport useManagePermissions from '../hooks/useManagePermissions';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n\n  const { isForum } = chat || {};\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const handleOpenMediaDropdown = useCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  }, [isMediaDropdownOpen]);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('UserRestrictionsCanDo')}</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendPlain\"\n              checked={!permissions.sendPlain}\n              label={lang('UserRestrictionsSend')}\n              blocking\n              disabled={getControlIsDisabled('sendPlain')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"sendMedia\"\n              checked={!permissions.sendMedia}\n              label={lang('UserRestrictionsSendMedia')}\n              blocking\n              rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n              disabled={getControlIsDisabled('sendMedia')}\n              onChange={handlePermissionChange}\n              onClickLabel={handleOpenMediaDropdown}\n            />\n          </div>\n\n          <div className=\"DropdownListTrap\">\n            <div\n              className={buildClassName(\n                'DropdownList',\n                isMediaDropdownOpen && 'DropdownList--open',\n              )}\n            >\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendPhotos\"\n                  checked={!permissions.sendPhotos}\n                  label={lang('UserRestrictionsSendPhotos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPhotos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendVideos\"\n                  checked={!permissions.sendVideos}\n                  label={lang('UserRestrictionsSendVideos')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendStickers\"\n                  checked={!permissions.sendStickers && !permissions.sendGifs}\n                  label={lang('UserRestrictionsSendStickers')}\n                  blocking\n                  disabled={getControlIsDisabled('sendStickers')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendAudios\"\n                  checked={!permissions.sendAudios}\n                  label={lang('UserRestrictionsSendMusic')}\n                  blocking\n                  disabled={getControlIsDisabled('sendAudios')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendDocs\"\n                  checked={!permissions.sendDocs}\n                  label={lang('UserRestrictionsSendFiles')}\n                  blocking\n                  disabled={getControlIsDisabled('sendDocs')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendVoices\"\n                  checked={!permissions.sendVoices}\n                  label={lang('UserRestrictionsSendVoices')}\n                  blocking\n                  disabled={getControlIsDisabled('sendVoices')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendRoundvideos\"\n                  checked={!permissions.sendRoundvideos}\n                  label={lang('UserRestrictionsSendRound')}\n                  blocking\n                  disabled={getControlIsDisabled('sendRoundvideos')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"embedLinks\"\n                  checked={!permissions.embedLinks}\n                  label={lang('UserRestrictionsEmbedLinks')}\n                  blocking\n                  disabled={getControlIsDisabled('embedLinks')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"sendPolls\"\n                  checked={!permissions.sendPolls}\n                  label={lang('UserRestrictionsSendPolls')}\n                  blocking\n                  disabled={getControlIsDisabled('sendPolls')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={buildClassName('part', isMediaDropdownOpen && 'shifted')}>\n\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"inviteUsers\"\n                checked={!permissions.inviteUsers}\n                label={lang('UserRestrictionsInviteUsers')}\n                blocking\n                disabled={getControlIsDisabled('inviteUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={!permissions.pinMessages}\n                label={lang('UserRestrictionsPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"changeInfo\"\n                checked={!permissions.changeInfo}\n                label={lang('UserRestrictionsChangeInfo')}\n                blocking\n                disabled={getControlIsDisabled('changeInfo')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n            {isForum && (\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name=\"manageTopics\"\n                  checked={!permissions.manageTopics}\n                  label={lang('CreateTopicsPermission')}\n                  blocking\n                  disabled={getControlIsDisabled('manageTopics')}\n                  onChange={handlePermissionChange}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {lang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text=\"Are you sure you want to ban and remove this user from the group?\"\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport { ManagementScreens } from '../../../types';\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ListItem from '../../ui/ListItem';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  currentUserId?: string;\n  isChannel: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat.isCreator || chat.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  onScreenSelect,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem no-selection\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem no-selection\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { unique } from '../../../util/iteratees';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport {\n  sortUserIds, isChatChannel, filterUsersByName, sortChatIds, isUserBot, getHasAdminRight, isChatBasicGroup,\n} from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport ListItem from '../../ui/ListItem';\nimport InputText from '../../ui/InputText';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport DeleteMemberModal from '../DeleteMemberModal';\nimport Switcher from '../../ui/Switcher';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement, toggleParticipantsHidden,\n  } = getActions();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      chatsById,\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  }, [closeManagement, noAdmins, onChatMemberSelect, onScreenSelect, openChat]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  }, [setUserSearchQuery]);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useCallback(() => {\n    setDeletingUserId(undefined);\n  }, []);\n\n  const handleToggleParticipantsHidden = useCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  }, [areParticipantsHidden, chatId, toggleParticipantsHidden]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string) {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { sortUserIds, isChatChannel } from '../../../global/helpers';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dateFormat';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getServerTime } from '../../../util/serverTime';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useInterval from '../../../hooks/useInterval';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useFlag from '../../../hooks/useFlag';\n\nimport ListItem from '../../ui/ListItem';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport InviteLink from '../../common/InviteLink';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(() => {\n    forceUpdate();\n  }, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <InviteLink\n            inviteLink={primaryInviteLink}\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId];\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport { formatFullDate, formatTime } from '../../../util/dateFormat';\nimport useFlag from '../../../hooks/useFlag';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport CalendarModal from '../../common/CalendarModal';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId];\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Spinner from '../../ui/Spinner';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n  }, [enabledReactions]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n    } else {\n      setLocalEnabledReactions(undefined);\n    }\n    setIsTouched(true);\n  }, [enabledReactions]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n    setIsTouched(true);\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('AvailableReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem no-selection\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n\n    return {\n      enabledReactions: selectChatFullInfo(global, chatId)?.enabledReactions,\n      availableReactions: global.availableReactions,\n      chat,\n    };\n  },\n)(ManageReactions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getServerTime } from '../../../util/serverTime';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dateFormat';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId];\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            user={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { selectChat } from '../../../global/selectors';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport useLang from '../../../hooks/useLang';\nimport useFlag from '../../../hooks/useFlag';\n\nimport JoinRequest from './JoinRequest';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageUser from './ManageUser';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageChannel from './ManageChannel';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvites from './ManageInvites';\nimport ManageInvite from './ManageInvite';\nimport ManageReactions from './ManageReactions';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageJoinRequests from './ManageJoinRequests';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","import type { RefObject } from 'react';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport { useEffect } from '../lib/teact/teact';\n\nconst DEFAULT_DURATION = 400;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  placeholder?: string;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    placeholder,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        placeholder={placeholder || label}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useCallback, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport Checkbox from '../ui/Checkbox';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              placeholder={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useMemo, useEffect,\n} from '../../lib/teact/teact';\n\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport useLang from '../../hooks/useLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SM3T4awhZJvKn_c8aRuY\",\"description\":\"RWoBZem6PCNMF5hu6Shs\",\"checkout-picture\":\"prUKJGh6W9LIyjSnRbZc\",\"checkoutPicture\":\"prUKJGh6W9LIyjSnRbZc\",\"text\":\"xUG3uFeTiPPFkWHQELCc\",\"checkout-title\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkoutTitle\":\"MO45Rkd2ksVxfzAONvQ6\",\"checkout-description\":\"LqaZe1TRdNI17BEa1gcl\",\"checkoutDescription\":\"LqaZe1TRdNI17BEa1gcl\",\"price-info\":\"mz2vhtmYPNRaJbeUrXKA\",\"priceInfo\":\"mz2vhtmYPNRaJbeUrXKA\",\"price-info-item\":\"Ct9Ine31cu5h7FCjtRWa\",\"priceInfoItem\":\"Ct9Ine31cu5h7FCjtRWa\",\"price-info-item-main\":\"JduVB3d3NxN9TybmxIgS\",\"priceInfoItemMain\":\"JduVB3d3NxN9TybmxIgS\",\"price-info-item-title\":\"O7d8G4OQ_yTJSHiHbgBR\",\"priceInfoItemTitle\":\"O7d8G4OQ_yTJSHiHbgBR\",\"tipsList\":\"zsSyrAOxg0qs0nPJWSEe\",\"tipsItem\":\"lcjeIUsdqs95BdK_oysT\",\"tipsItem_active\":\"XRnGKO5ClzA_4S8i81wC\",\"tipsItemActive\":\"XRnGKO5ClzA_4S8i81wC\",\"invoice-info\":\"MyMLGHhiEKOVIoG3aQTS\",\"invoiceInfo\":\"MyMLGHhiEKOVIoG3aQTS\",\"provider\":\"hLVHJSaVspSZdzxNlBJk\",\"stripe\":\"nrKVVKzRmr7s0TE15uG1\",\"smartglocal\":\"oONvjFUTa5AbWvrbzbWn\",\"checkout-info-item-info-title\":\"bkIqUpVUAY04wdT8fySX\",\"checkoutInfoItemInfoTitle\":\"bkIqUpVUAY04wdT8fySX\",\"checkout-info-item-info-data\":\"VAzhVfK6c1pUriepo4Ga\",\"checkoutInfoItemInfoData\":\"VAzhVfK6c1pUriepo4Ga\",\"tos-checkbox\":\"WjrdCzbl3hROmSBGGnjy\",\"tosCheckbox\":\"WjrdCzbl3hROmSBGGnjy\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { ApiChat, ApiInvoice, ApiPaymentCredentials } from '../../api/types';\n\nimport { PaymentStep } from '../../types';\nimport { getWebDocumentHash } from '../../global/helpers';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\n\nimport Checkbox from '../ui/Checkbox';\nimport Skeleton from '../ui/Skeleton';\nimport SafeLink from '../common/SafeLink';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  chat?: ApiChat;\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n};\n\nconst Checkout: FC<OwnProps> = ({\n  chat,\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, isRecurring, recurringTermsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, true)}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', chat?.title);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || !isInteractive) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || !isInteractive) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {isRecurring && renderTos(recurringTermsUrl!)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: string;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  return (\n    <ListItem\n      multiline={Boolean(title && label !== title)}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n    >\n      {customIcon && <i className={buildClassName('icon', customIcon)} />}\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport InputText from '../ui/InputText';\nimport useLang from '../../hooks/useLang';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useState, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\nimport { detectCardType, CardType } from '../common/helpers/detectCardType';\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport visaIconPath from '../../assets/visa.svg';\nimport mirIconPath from '../../assets/mir.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 23;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport useLang from '../../hooks/useLang';\n\nimport InputText from '../ui/InputText';\nimport Checkbox from '../ui/Checkbox';\nimport Select from '../ui/Select';\nimport ExpiryInput from './ExpiryInput';\nimport CardInput from './CardInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            placeholder={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport useLang from '../../hooks/useLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ninterface IframeCallbackEvent {\n  eventType: string;\n  eventData: {\n    path_full: string;\n  };\n}\n\nconst ConfirmPayment: FC<OwnProps> = ({ url, noRedirect, onClose }) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n\n      if (eventType !== 'web_app_open_tg_link') {\n        return;\n      }\n\n      if (!noRedirect) {\n        const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n        openTelegramLink({ url: linkUrl });\n      }\n\n      onClose();\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState, FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\n\nimport PasswordMonkey from '../common/PasswordMonkey';\nimport PasswordForm from '../common/PasswordForm';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { Price, ShippingOption } from '../../types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { PaymentStep } from '../../types';\nimport { selectChat, selectTabState } from '../../global/selectors';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport buildClassName from '../../util/buildClassName';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\n\nimport ShippingInfo from './ShippingInfo';\nimport Shipping from './Shipping';\nimport Checkout from './Checkout';\nimport PaymentInfo from './PaymentInfo';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport Spinner from '../ui/Spinner';\nimport ConfirmPayment from './ConfirmPayment';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport PasswordConfirm from './PasswordConfirm';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  chat,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            chat={chat}\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handleButtonClick = useCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  }, [\n    isEmailRequested, isNameRequested, isPhoneRequested, isShippingAddressRequested, nativeProvider, passwordValidUntil,\n    paymentDispatch, paymentState, requestId, savedInfo, sendCredentials, sendForm, setStep, smartGlocalToken, step,\n    stripeId, twoFaPassword, validatePaymentPassword, validateRequest,\n  ]);\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrency(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.isRecurring && !isTosAccepted);\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition name=\"slide\" activeKey={step}>\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n    } = selectTabState(global).payment;\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId) : undefined;\n    const isProviderError = Boolean(invoice && (!nativeProvider || !SUPPORTED_PROVIDERS.has(nativeProvider)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl,\n      countryList: global.countryList.general,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import React, { memo, useMemo, useEffect } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { Price } from '../../types';\nimport type { ApiShippingAddress, ApiWebDocument } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport Checkout from './Checkout';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice = useMemo(() => {\n    return {\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport useTimeout from '../../hooks/useTimeout';\nimport useFlag from '../../hooks/useFlag';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useState, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <i className=\"icon icon-camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["createGhost","source","origin","ghost","document","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","applyStyles","element","styles","Object","assign","style","getNodes","message","containerSelector","mediaSelector","getMessageHtmlId","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","video","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","oo_oo","oo_cm","eval","e","i","_len","arguments","length","v","Array","_key","consoleLog","cache","Map","useMediaProps","_ref","mediaId","avatarOwner","delay","photo","getMessagePhoto","undefined","actionPhoto","getMessageActionPhoto","getMessageVideo","webPagePhoto","getMessageWebPagePhoto","webPageVideo","getMessageWebPageVideo","isDocumentPhoto","isMessageDocumentPhoto","isDocumentVideo","isMessageDocumentVideo","videoSize","getMessageFileSize","avatarMedia","photos","isVideoAvatar","Boolean","isVideo","isPhoto","isGif","isFromSharedMedia","isFromSearch","getMediaHash","useMemo","isFull","getVideoAvatarMediaHash","getChatAvatarHash","getMessageMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMessageMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","useBlurSync","getMessageMediaThumbDataUri","bestData","isLocal","fileName","getMessageFileName","hasVideoAvatar","dimensions","getMessageDocument","mediaSize","getPhotoFullDimensions","getVideoDimensions","VIDEO_AVATAR_FULL_DIMENSIONS","AVATAR_FULL_DIMENSIONS","avatarPhoto","getZoomChange","setZoomChange","useZoomChange","memo","withGlobal","global","_ref4","isSchedule","threadId","selectCurrentMessageList","canDeleteForAll","selectAllowedMessageActions","chat","selectChat","chatId","contactName","isUserId","getUserFirstOrLastName","selectUser","getPrivateChatUserId","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","isChatSuperGroup","isOpen","album","onConfirm","onClose","deleteMessages","deleteScheduledMessages","getActions","handleDeleteMessageForAll","useCallback","messageIds","messages","map","_ref2","shouldDeleteForAll","handleDeleteMessageForSelf","_ref3","lang","useLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","renderText","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","canUpdateMedia","currentMessageList","isDownloading","selectIsDownloading","isProtected","selectIsMessageProtected","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","isCurrentAvatar","avatarHash","canUpdate","messageListType","type","avatarOwnerId","canReport","selectMedia","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMessageMedia","cancelMessageMediaDownload","updateProfilePhoto","updateChatPhoto","downloadProgress","handleDownloadClick","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","MenuButton","onTrigger","round","ariaLabel","renderDeleteModals","DeleteMessageModal","DeleteProfilePhotoModal","menuItems","isForwardingAllowed","push","icon","children","Math","href","download","DropdownMenu","trigger","positionX","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","ARE_WEBCODECS_SUPPORTED","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","index","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","params","data","result","callApi","mediaFormat","arrayBuffer","postMessage","duration","bufferedRanges","isReady","posterSize","isActive","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isPlaying","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","playbackRate","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onPlay","onEnded","onPause","onTimeUpdate","join","square","VideoPlayerControls","IS_PREVIEW_DISABLED","ownProps","selectTabState","mediaViewer","selectChatMessage","senderId","selectScheduledMessage","props","withAnimation","onFooterClick","isMoving","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","renderPhoto","textParts","content","action","renderMessageText","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelAnimation","cancelZoomAnimation","SwipeDirection","getMediaId","rest","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveMediaId","setActiveMediaId","activeMediaIdRef","isScaled","activeMediaId","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectMediaDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","mId","animateNumber","from","to","timing","onUpdate","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","nextMediaId","prevMediaId","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","selector","matches","isAvatar","sender","selectSender","isFallbackAvatar","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","senderTitle","getSenderTitle","Avatar","user","formatMediaDateTime","date","shouldSkipHistoryAnimations","selectPerformanceSettingsValue","currentUserId","chatMessages","collectionIds","isChatWithSelf","selectIsChatWithSelf","isChatAdmin","avatarOwnerFallbackPhoto","selectUserFullInfo","fallbackPhoto","selectChatScheduledMessages","selectChatMessages","selectOutlyingListByMessageId","selectListedIds","currentSearch","selectCurrentMediaSearch","foundIds","resultsByType","media","openMediaViewer","openForwardMenu","animationKey","prevSenderId","usePrevious","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","singleMediaId","mediaIds","p","getChatMediaMessageIds","selectedMediaIndex","indexOf","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","addListener","removeListener","prevMessage","prevIsHidden","prevOrigin","prevAvatarOwner","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","mediaIdRef","useStateRef","handleFooterClick","currentMediaId","handleForward","fromChatId","forceOnHeavyAnimation","captureEscKeyListener","stopCurrentAudio","mediaIdsRef","fromId","mIds","handleBeforeDelete","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","MediaViewerSlides","TOPIC_ICON_SIZE","chatOrUserIds","chatsById","search","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","onCloseAnimationEnd","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","topicIds","topics","topicsResult","searchTitle","toLowerCase","values","reduce","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","handleTopicClick","topicId","InputText","onKeyDown","placeholder","InfiniteScroll","items","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","ListItem","clickArg","TopicIcon","letterClassName","Loading","onLoadMore","PrivateChatInfo","status","userId","GroupChatInfo","chats","byId","listIds","orderedPinnedIds","activeListIds","active","archivedListIds","archived","pinnedIds","contactIds","contactList","userIds","filter","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","unique","getGlobal","usersById","users","chatIds","isDeletedUser","MAIN_THREAD_ID","sorted","sortChatIds","filterChatsByName","filterUsersByName","filterChatIdsByType","renderingIds","useCurrentOrPrev","ChatOrUserPicker","isManyMessages","forwardMessages","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","showNotification","isShown","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","openModal","closeModal","dialog","contactRequest","invite","hash","about","participantsCount","isChannel","isRequestNeeded","participantsText","joinText","requestToJoinText","header","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","ConfirmDialog","confirmLabel","confirmHandler","urlAuth","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","button","isWriteAllowed","handleLoginChecked","Checkbox","checked","label","getUserFullName","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","String","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","unmarkTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleSubmit","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","role","tabIndex","handleDateSelect","inputMode","onFocus","onBlur","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","CalendarModal","userStatus","selectUserStatus","phoneCodeList","countryList","phoneCodes","_renderingUser$firstN","_renderingUser$lastNa","_renderingUser$phoneN","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","_renderingUser$firstN2","_renderingUser$lastNa2","_renderingUser$phoneN2","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","webApp","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","openChat","openInvoice","setWebAppPaymentSlug","switchBotInline","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","confirmClose","setConfirmClose","isCloseModalOpen","openCloseModal","isLoaded","markLoaded","markUnloaded","popupParams","setPopupParams","prevPopupParams","renderingPopupParams","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyToMessageId","isSimple","handleEvent","eventType","eventData","slug","linkUrl","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","newColor","color_key","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","chat_types","convertToApiChatType","isSamePeer","query","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","ignoreEventsRef","lastFrameSizeRef","handleLoad","once","contentWindow","JSON","stringify","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","getComputedStyle","getPropertyValue","req_id","shouldShowMainButton","useInterval","peerId","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","handlePopupClose","buttonId","button_id","handlePopupModalClose","prevIsPaymentModalOpen","handleToggleClick","isEnabled","handleBackClick","openBotChat","MoreMenuButton","isMenuOpen","backButtonClassName","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","hasSettings","isAttachBot","destructive","sandbox","allow","allowFullScreen","confirmIsDestructive","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","previousBot","previousType","currentBot","currentType","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","prevBot","renderingBot","_bot$shouldRequestWri","shortName","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","leftValue","rightValue","floatingBadgeIcon","rightStyle","dangerouslySetInnerHTML","__html","COLOR_START","COLOR_END","description","colorStepProgress","lerp","PremiumLimitsCompare","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","useCanvasBlur","useMediaTransition","DeviceFrame","OptimizedVideo","canPlay","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","count","fill","_","isLast","isPreLast","isFirst","isPreFirst","isInvisible","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","slice","cycleRestrict","l","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","PREMIUM_FEATURE_DESCRIPTIONS","PREMIUM_FEATURE_SECTIONS","PREMIUM_BOTTOM_VIDEOS","LIMITS_ORDER","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","LIMITS_DESCRIPTIONS","promo","initialSection","onClickSubscribe","isPremium","limits","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","handleLimitsScroll","scrollHeight","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","options","find","option","months","onScroll","scrollLeft","scrollLeftOriginal","setProperty","toString","reverseIndex","ceil","prevElement","reverseElement","slide","section","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","videoSections","PremiumFeaturePreviewVideo","videos","thumbnail","SliderDots","isShiny","withPremiumGradient","formatCurrency","amount","currency","COLORS","buttonClassName","PREMIUM_FEATURE_COLOR_ICONS","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumStatus","premiumModal","isClosing","isSuccess","isGift","monthsAmount","fromUser","fromUserId","toUser","toUserId","selectIsCurrentUserPremium","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","appConfig","premiumSlug","premiumInvoiceSlug","premiumBotUsername","premiumPromoOrder","dialogRef","closePremiumModal","requestConfetti","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","handleClickWithStartParam","showConfetti","prevIsPremium","filteredSections","isClosed","PremiumFeatureModal","PremiumLogo","PremiumFeatureItem","renderTextWithEntities","statusText","entities","statusEntities","renderFooterText","fullMonthlyAmount","perMonth","discount","handleChange","forUserId","monthlyCurrency","monthlyAmount","giftPremiumModal","gifts","premiumGifts","openPremiumModal","closeGiftPremiumModal","openUrl","renderedUser","renderedGifts","selectedOption","setSelectedOption","firstGift","cheaperGift","gift","selectedGift","botUrl","handlePremiumClick","GiftOption","parts","match","Link","isPrimary","renderPremiumFeaturesLink","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","entries","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","selectStickerSet","currentIndex","stickerSetEl","isClose","animateScroll","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","reaction","availableReactions","isSelected","loadAndPlay","observeIntersection","sharedCanvasRef","sharedCanvasHqRef","isCustom","availableReaction","available","isSameReaction","staticIcon","animationId","selectAnimation","coords","useCoordsInSharedCanvas","getDocumentMediaHash","fullClassName","documentId","CustomEmoji","EMOJI_SIZE_PICKER","observeIntersectionForPlaying","withTranslucentThumb","AnimatedIconWithPreview","sharedCanvas","sharedCanvasCoords","stickerSet","isNearActive","favoriteStickers","isSavedMessages","isStatusPicker","isReactionPicker","isCurrentUserPremium","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isTranslucent","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","onContextMenuOpen","onContextMenuClose","onContextMenuClick","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","loadStickers","isConfirmModalOpen","openConfirmModal","closeConfirmModal","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","useIsIntersecting","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","stickerSetInfo","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","reactions","accessHash","isLocked","some","isFree","isInstalled","installedDate","isArchived","canCut","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","Set","withAddSetButton","pill","fluid","grey","reactionId","getReactionUniqueKey","ReactionEmoji","isHqEmoji","selectIsAlwaysHighPriorityEmoji","canvasRef","isCustomEmoji","emoji","StickerButton","observeIntersectionForShowing","canViewSet","onUnfaveClick","has","onFaveClick","onRemoveRecentClick","STICKER_SIZE_PICKER_HEADER","hasThumbnail","thumbCustomEmojiId","isVideos","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerPreviewHash","staticMediaData","mediaHash","getFirstLetters","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","CHAT_STICKER_SET_ID","PREMIUM_STICKER_SET_ID","setsById","stickerSetsById","customEmojis","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","areAddedLoaded","allSets","MEMO_EMPTY_ARRAY","defaultSets","topReactionsSlice","TOP_SYMBOL_SET_ID","cleanRecentReactions","topReaction","cleanAvailableReactions","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","offsetWidth","handleEmojiSelect","handleReactionSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","faded","StickerSetCover","noContextMenu","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","peerIds","joinedIds","isNotJoined","selectedCount","badgeText","handleButtonClick","handleSelectionToggle","areAllSelected","Picker","itemIds","lockedIds","onSelectedIdsChange","selectedIds","Badge","isAlternateColor","missingPeerIds","hasChatsToAdd","newChatsCount","descriptionText","alreadyPeerIds","suggestedPeerIds","leaveChatlist","info","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","renderContent","ChatlistAlready","ChatlistNew","ChatlistDelete","isSlim","folderTitle","Tab","badgeCount","isBadgeActive","SafeLink","isPrivateChat","isChatChannel","isGroup","isSuperGroup","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","tabState","selectCanReportSelectedMessages","canDownload","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","canForward","selectCanForwardMessages","isForwardModalOpen","isModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","captureKeyboardListeners","onBackspace","onDelete","onEsc","handleCopy","handleDownload","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","memberIds","sort","leftId","rightId","handleCloseSeenByModal","noStatusOrTyping","formatDateAtTime","statusIcon","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","handleLoadMore","allReactions","uniqueReactions","r","seenByUserIds","nextOffset","LoadMoreDirection","formatIntegerCompact","reactionsCount","ReactionStaticEmoji","flatMap","userReactions","reactor","seenByUser","FullNameTitle","peer","withEmojiStatus","addedDate","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","messageLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedTranslationLanguage","requestMessageTranslation","closeMessageLanguageModal","handleSelect","toLanguageCode","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","langCode","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","teactExperimentControlled","secondaryIcon","multiline","narrow","highlight","onSelect","buttonRef","activeElement","privateChatUserId","isPinned","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","orderedIds","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","contextActions","useChatContextActions","useSelectWithEnter","avatarSize","MuteChatModal","ChatFolderModal","runThrottled","cb","topUserIds","topPeers","recentlyFoundChatIds","onReset","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","shouldReplaceHistory","handleClearRecentlyFoundChats","LeftSearchResultChat","privateChatUser","lastSyncTime","searchQuery","mediaThumbnail","getMessageSticker","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","isSelf","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","localContactIds","fetchingStatus","globalResults","localResults","globalSearch","globalChatIds","globalUserIds","localChatIds","localUserIds","byChatId","globalMessagesByChatId","dateSearchQuery","onSearchDateSelect","searchMessagesGlobal","setGlobalSearchChatId","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","contactIdsWithMe","foundContactIds","foundMessages","split","a","b","handleClickShowMoreLocal","handleClickShowMoreGlobal","nothingFound","noScrollRestoreOnTop","noFastList","DateSuggest","NothingFound","PickerSelectedItem","chatOrUserId","ChatMessage","RecentContacts","foundTopicIds","searchChatId","LeftSearchResultTopic","createMapStateToProps","isVoice","activeDownloads","isLoading","CURRENT_TYPE","observeIntersectionForMedia","handleSelectMedia","canRenderContents","isMediaGrid","isMessageList","itemSelector","Media","handleMessageFocus","shouldDrawDateDivider","toYearMonth","formatMonthAndYear","WebLink","getSenderName","onMessageClick","Document","withDate","datetime","smaller","onDateClick","openAudioPlayer","handlePlayAudio","Audio","AudioOrigin","TABS","GlobalSearchContent","CHAT_TABS","TRANSITION_RENDER_COUNT","currentContent","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","TabList","tabs","onSwitchTab","renderCount","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","currentScreen","editedFolderId","onScreenSelect","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","SettingsScreens","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","renderHeaderContent","sessionCount","activeSessions","orderedHashes","loadProfilePhotos","loadAuthorizations","ProfileInfo","canPlayVideo","forceShowSelf","ChatExtra","langName","leftElement","PremiumIcon","withGradient","big","LINK_PREFIX_REGEX","USERNAME_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","username","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","test","handleUsernameChange","newUsername","isValid","isUsernameValid","success","readOnly","autoComplete","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","labelText","textarea","previousSelectionEnd","selectionEnd","htmlFor","ZERO_POINT","onDragEnd","externalStyle","knobStyle","setState","isDragging","translation","handleMouseDown","getClientCoordinate","handleMouseMove","handleMouseUp","cssStyles","buildStyle","onMouseDown","onTouchStart","usernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","prevUsernameList","orderedUsernames","dragOrderUsernames","draggedIndex","handleCopyUsername","copyTextToClipboard","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","handleDrag","splice","handleDragEnd","usernameData","_state$orderedUsernam","_state$dragOrderUsern","isDragged","draggedTop","subtitle","Draggable","handler","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","selectCurrentLimit","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","s","renderPurchaseLink","ManageUsernames","FloatingActionButton","settings","byKey","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","setSettingOption","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","openLimitReachedModal","sortChatFolders","orderedFolderIds","dragOrderIds","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","ALL_FOLDER_ID","getFolderDescriptionText","isChatList","handleCreateFolderFromRecommended","canCreateNewFolder","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","LOCAL_TGS_URLS","_state$orderedFolderI","_state$dragOrderIds$i","isBlocked","inactive","isStatic","itemName","itemPluralName","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","dispatch","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","mode","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","selectedChatIds","includedChatIds","selectedChatTypes","includedChatTypes","selectChatFilters","excludedChatIds","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","isTouched","handleEditInviteClick","renderChats","visibleChatIds","isExpanded","leftChatsCount","clickHandler","chatType","INCLUDED_CHAT_TYPES","typeKey","EXCLUDED_CHAT_TYPES","renderChatType","ShowMoreButton","maxChats","filterValue","shouldHideChatTypes","onSelectedChatTypesChange","onFilterChange","onSaveFilter","chatTypes","shouldMinimize","setIsTouched","handleItemClick","newSelectedIds","handleChatTypeClick","newSelectedChatTypes","handleFilterChange","selectedType","isMinimized","canClose","withChatType","chatFilter","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","displayedIds","newFilter","handleSelectedIdsChange","includeFilters","excludeFilters","handleSelectedChatTypesChange","newFilters","SettingsFoldersChatsPicker","inviteLink","onRevoke","copyLink","link","handleCopyPrimaryClicked","handleShare","PrimaryLinkMenuButton","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","setSelectedIds","isFirstRenderRef","useEffectWithPrevDeps","prevUrl","handleClickDisabled","isUserBot","chatsCount","InviteLink","onDisabledClick","isRoundCheckbox","shownScreen","openShareChatFolderModal","editChatFolder","handleReset","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","handleAddExcludedChats","handleShareFolder","noRequestNextScreen","handleOpenInvite","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","APPEARANCE_THEME_OPTIONS","KEYBOARD_SEND_OPTIONS","subLabel","IS_MAC_OS","handleMessageTextSizeChange","newSize","documentElement","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","RadioGroup","selected","wallpaper","localMediaHash","thumbRef","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","ctx","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","privacy","blocked","passcode","hasPasscode","blockedCount","totalCount","webAuthCount","activeWebSessions","canDisplayAutoarchiveSetting","privacyPhoneNumber","privacyLastSeen","lastSeen","privacyProfilePhoto","profilePhoto","privacyForwarding","forwards","privacyVoiceMessages","voiceMessages","privacyGroupChats","chatInvite","privacyPhoneCall","phoneCall","privacyPhoneP2P","phoneP2P","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedContacts","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","updateGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleVoiceMessagesClick","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","visibility","blockCount","blockChatIds","blockUserIds","allowCount","allowChatIds","allowUserIds","total","exceptionString","allowDisabledClick","rightElement","language","languages","canTranslate","doNotTranslate","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","setLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","newValue","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","loadingOption","getPrivacyKey","screen","selectedFile","setSelectedFile","handleAvatarCrop","croppedImg","handleModalClose","accept","CropModal","file","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","privacySettings","setPrivacyVisibility","visibilityOptions","exceptionLists","shouldShowDenied","shouldShowAllowed","privacyKey","headerText","allowedContactsScreen","deniedContactsScreen","allowedCount","membersCount","handleVisibilityChange","SettingsPrivacyPublicProfilePhoto","getSessionIcon","session","platform","device","deviceModel","systemVersion","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","formatDateTimeToString","dateActive","appName","appVersion","ip","region","country","getLocation","Switcher","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","SettingsActiveSession","terminateWebAuthorization","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","SettingsActiveWebsite","blockedIds","userSearch","setUserSearchQuery","blockContact","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","unblockContact","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","isPrivate","userOrChat","userMainUsername","renderContact","BlockUserModal","previewUrl","lockPreviewUrl","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isBig","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","onStart","animatedEmoji","selectAnimatedEmoji","shouldConfirm","focusDelayTimeoutMs","setValue","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleInputChange","handleSkip","handleSkipConfirm","AnimatedIconFromSticker","STICKER_SIZE_TWO_FA","codeLength","twoFaSettings","waitingEmailCodeLength","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleStartWizard","handleNewPassword","handleNewPasswordConfirm","handleNewPasswordHint","handleNewPasswordEmail","onSuccess","handleChangePasswordCurrent","handleChangePasswordNew","handleChangePasswordConfirm","handleChangePasswordHint","handleTurnOff","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","getCurrentPrivacySettings","isAllowList","setPrivacySettings","selectedContactIds","setSearchQuery","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","handleSelectedContactIdsChange","contactsIds","filterPlaceholder","searchInputId","isSearchable","config","selectedReaction","defaultReaction","setDefaultReaction","isInactive","emoticon","STICKER_SIZE_PASSCODE","fullReset","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","currentPasscode","decryptSession","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","SettingsPasscodeEnabled","handleCardClick","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","DEFAULT_REACTION_SIZE","addedSetIds","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestStickers","shouldUpdateStickerSetOrder","openStickerSet","stickerSettingsRef","handleStickerSetClick","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","StickerSetCard","shouldSuggestCustomEmoji","handleSuggestCustomEmojiChange","customEmojiSets","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","displayedOptions","setDisplayedOptions","prevIsActive","otherLanguages","unselected","newDoNotTranslate","filteredDisplayedOptions","shouldShowLoginCodeInChatList","nonInteractive","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","every","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","prev","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","rightIcon","onClickLabel","_ref7","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","isFrom","currentKey","SettingsHeader","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","statusesById","userStatusesById","openNewContactDialog","filteredIds","sortUserIds","isSearching","selectedMemberIds","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","isStepActive","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","shouldHideSearch","prevShouldHideSearch","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","onTransitionEnd","ChatList","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","folders","idsToRemove","idsToAdd","CheckboxGroup","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","getCopyLabel","hasSelection","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","tagName","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","onToggleReaction","mediaAppearData","appearAnimation","staticIconData","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","onMouseEnter","allAvailableReactions","enabledReactions","currentReactions","maxUniqueReactions","onShowMore","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","anchor","targetHref","canSendNow","canReschedule","canReply","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentUsers","hasCustomEmoji","noTransition","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onAboutAds","onSponsoredHide","onSponsorInfo","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","menuRef","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessageContact","canImageBeCopied","hasMessageLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","getMessageIdsForSelectedText","execCommand","clipboardText","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","getTriggerElement","getRootElement","getMenuElement","getLayout","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","shouldAvoidNegativePosition","menuElMinWidth","transformOriginY","menuStyle","withScroll","useMenuPosition","handleOpenReactionPicker","bubbleStyle","ReactionSelector","messagesCount","MenuSeparator","Skeleton","inline","withWrap","sponsorInfo","detectedLanguage","selectActiveDownloads","seenByExpiresAt","seenByMaxChatMembers","noOptions","isOwn","isOwnMessage","isScheduled","isMessageLocal","isServiceNotification","isServiceNotificationMessage","isChatGroup","isAction","isActionMessage","chatFullInfo","selectChatFullInfo","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","isTranslationEnabled","canTranslateLanguage","emojiOnlyCount","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","canScheduleUntilOnline","selectCanScheduleUntilOnline","chatUsername","setReplyingToId","setEditingId","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openMessageLanguageModal","openReactionPicker","setIsMenuOpen","setIsDeleteModalOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","requestCalendar","calendar","useSchedule","uniqueReactors","msg","handleDelete","handleReport","closeMenu","closePinModal","handleReply","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","getChatMessageLink","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","PinMessageModal","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isComments","originChannelId","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","teactFastList","customEmojiSet","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","chatBot","REPLIES_USER_ID","selectChatBot","userFullInfo","canGiftPremium","canCreateTopic","isCreator","isUserRightBanned","getHasAdminRight","canEditTopic","getCanManageTopic","isTopic","canDeleteChat","getCanDeleteChat","hasLinkedChat","linkedChatId","botCommands","botInfo","commands","isChatInfoShown","withExtraActions","withForumActions","canStartBot","canRestartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openGiftPremiumModal","openChatWithInfo","openCreateTopicPanel","openEditTopicPanel","setIsMuteModalOpen","isViewGroupInfoShown","usePrevDuringAnimation","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleSelectMessages","handleOpenAsMessages","botButtons","cmd","DeleteChatModal","runDebouncedForSearch","selectCurrentTextSearch","isHistoryCalendarOpen","setLocalTextSearchQuery","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","focusedIndex","setFocusedIndex","visualViewport","mainEl","pageTop","input","blur","handleMessageSearchQueryChange","newQuery","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","SearchInput","getDayStartAt","isTouchScreen","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","reactionPicker","areSomeReactionsAllowed","areCustomReactionsAllowed","areCustomAllowed","withCustomReactions","closeReactionPicker","renderedMessageId","renderedChatId","storedPosition","renderingPosition","withPortal","isDense","handleToggleCustomReaction","backdropExcludedSelector","ReactionPickerLimited","div","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","first","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","newIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","item","isSelectionOutOfRange","onUp","onDown","onLeft","onRight","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","BLUR_CANVAS_SIZE","attachment","isSingle","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_IMAGE_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","File","filename","extension","getFileExtension","previewData","shouldSkipGrouping","canDisplaySpoilerButton","GIF_MIME_TYPE","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","members","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","canShowCustomSendMenu","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","removeAllSelections","isContextMenuOpen","isCustomSendMenuOpen","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","editableInputId","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","solutionRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","focusInput","solutionEl","addNewOption","newOptions","requestNextMutation","list","scrollTo","behavior","handleCreate","questionTrimmed","substring","optionsTrimmed","o","summary","answers","correct","isPublic","multipleChoice","quiz","parseMessageInput","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","keyCode","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","renderQuizNoOptionError","hidden","contentEditable","native","IS_ELECTRON","PRODUCTION_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","recent","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","categories","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","unshift","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","favorite","premiumSet","chatStickerSetId","recentStickers","premiumStickers","selectShouldLoopStickers","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","existingAddedSetIds","addedPremiumStickers","hasEffect","flat","totalPremiumStickers","uniqueByField","fullSet","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleRemoveRecentSticker","onUnsaveClick","withThumb","videoData","shouldRenderVideo","isVideoReady","contextMenuPosition","handleBeforeContextMenu","handleUnsaveClick","handleContextDelete","handleSendQuiet","handleSendScheduled","preventMessageInputBlurWithBubbling","noFastClick","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","Stickers","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","loadPremiumSetStickers","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","EmojiPicker","StickerPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseLeave","withAvatar","botCommand","handleSendCommand","selectedCommandIndex","prevCommands","renderedCommands","chatBotCommand","BotCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","withSharedAnimation","shouldPreloadPreview","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbUrl","thumbnailDataUrl","decoding","webThumbnail","isForGallery","inlineResult","BaseResult","_gif","STICKER_SIZE_INLINE_BOT_RESULT","noShowPremium","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","messagesById","handleSearchTextMessagesLocal","viewportResults","senderUser","senderChat","forwardInfo","isChannelPost","foundResult","isOnTop","preloadBackwards","teactOrderKey","LastMessageMeta","areStickersLoaded","_set$stickers$filter","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","isChatWithBot","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","isMessage","statistics","period","formatFullDate","row","cell","field","formatInteger","percentage","change","isChangeNegative","renderOverviewItemValue","toggleMessageStatistics","views","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","selectStatistics","dcId","statisticsDcId","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentTopMessages","StatisticsRecentMessage","openChatByUsername","GRAPH_TITLES","viewsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","publicForwards","publicForwardsData","StatisticsPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","setIsLoading","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","management","personalPhoto","notPersonalPhoto","deleteContact","closeManagement","uploadContactProfilePhoto","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","ManagementProgress","handleNotificationChange","handleDeleteContact","isSuggestRef","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","handleSelectAvatar","isSuggest","canSetPersonalPhoto","withFullInfo","noPersonalPhoto","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","canChangeInfo","canBanUsers","canInvite","exportedInvites","isChannelsPremiumLimitReached","_chat$membersCount","togglePreHistoryHidden","updateChat","deleteChat","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","toggleForum","currentTitle","currentAbout","isForumEnabled","setIsForumEnabled","imageHash","isPublicGroup","isChatPublic","isPreHistoryHiddenCheckboxRef","isRevoked","handleClickEditType","ManagementScreens","handleClickDiscussion","handleClickReactions","handleClickPermissions","handleClickAdministrators","handleClickInvites","handleClickRequests","handleSetPhoto","handleAboutChange","handleUpdateGroup","trimmedTitle","trimmedAbout","handleClickMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","chatReactionsDescription","enabledLength","totalLength","enabledPermissionsCount","defaultBannedRights","sendStickers","sendGifs","adminsCount","adminMembersById","handleDeleteGroup","isForForum","joinRequests","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","checkMedia","mediaPermissions","sendMedia","embedLinks","sendPlain","sendMessages","fullInfo","removedUsersCount","kickedMembers","onChatMemberSelect","updateChatDefaultBannedRights","shouldDisablePermissionForPublicGroup","handleRemovedUsersClick","handleAddExceptionClick","handleExceptionMemberClick","promotedByUserId","isMediaDropdownOpen","setIsMediaDropdownOpen","handleOpenMediaDropdown","handleDisabledClick","handleSavePermissions","bannedRights","exceptionMembers","getMemberExceptions","langKey","getLangKeyForBannedRightKey","translatedString","blocking","sendPhotos","sendVideos","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","chatMembers","loadMoreMembers","deleteChatMember","usersId","availableMemberIds","isAdmin","isOwner","canDeleteMembers","removedMembers","updateChatMemberBannedRights","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","CHANNEL_TITLE_EMPTY","isSignaturesShown","toggleSignatures","handleUpdateChannel","handleToggleSignatures","handleClickSubscribers","handleDeleteChannel","isChannelPublic","selectManagement","maxPublicLinks","privateInviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","channelId","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","isPromotedByCurrentUser","isFormFullyDisabled","selectedChatMemberId","selectedChatMember","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","getControlIsDisabled","canAddNewAdmins","adminRights","addAdmins","adminMembers","handleAdminMemberClick","handleAddAdminClick","getMemberStatus","promotedByUser","defaultRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedAdminMember","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","banUsers","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","noAdmins","toggleParticipantsHidden","deletingUserId","setDeletingUserId","adminIds","shouldUseSearchResults","listedIds","handleDeleteMembersModalClose","handleToggleParticipantsHidden","noScrollRestore","memberId","DeleteMemberModal","inviteComparator","i1","i2","isPermanent","i1IsPermanent","usage","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","editExportedChatInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","expireDate","getServerTime","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","usageLimit","askToRevoke","handleCreateNewClick","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","deleteInvite","askToDelete","prepareUsageText","requested","diff","formatCountdown","getInviteIconClass","prepareContextActions","actions","editInvite","STICKER_SIZE_INVITES","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","exportChatInvite","isCalendarOpened","openCalendar","closeCalendar","setIsRequestNeeded","customExpireDate","setCustomExpireDate","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleExpireDateChange","handleSaveClick","n","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","reactionsOptions","handleSaveReactions","availableActiveReactions","handleReactionsOptionChange","handleReactionChange","local","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","adminId","isExpired","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","hideChatJoinRequest","fullName","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","JoinRequest","managementType","selectCurrentManagementType","ManageUser","ManageGroup","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","iso2","defaultName","useFocusAfterAnimation","animationDuration","hasArrow","needEmail","needPhone","needName","needAddress","phoneRef","selectCountryRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handleCountryChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","Select","shippingOptions","handleShippingSelect","invoice","prices","shippingPrices","checkoutInfo","totalPrice","isTosAccepted","onAcceptTos","hasShippingOptions","savedCredentials","setPaymentStep","isInteractive","isRecurring","recurringTermsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","getWebDocumentHash","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","handleShippingAddressClick","handleShippingMethodClick","forceAspectRatio","renderPaymentItem","tip","renderCheckoutItem","customIcon","langStringSplit","renderTosLink","main","endsWith","formatCardExpiry","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","canSaveCredentials","needCardholderName","needCountry","needZip","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","noRedirect","onNewCardClick","passwordHint","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","inputInvoice","requestId","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","general","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","paymentState","paymentDispatch","setIsTosAccepted","twoFaPassword","setTwoFaPassword","canRenderFooter","setStep","nextStep","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","totalPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","validateRequest","requestInfo","getRequestInfo","sendCredentials","credentials","expiryMonth","expiryYear","zip","getCredentials","sendForm","shippingOptionId","shouldFillRequestedData","modalHeader","isSubmitDisabled","getIsSubmitDisabled","currentStep","Checkout","SavedPaymentCredentials","PasswordConfirm","PaymentInfo","ShippingInfo","Shipping","ConfirmPayment","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","playSegment","croppedBlobUrl","setCroppedBlobUrl","URL","revokeObjectURL","createObjectURL","labelClassName","hardwareConcurrency","instances","Worker","createConnector"],"sourceRoot":""}