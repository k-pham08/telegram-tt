{"version":3,"file":"8589.17c1f4f22a937bcc7ae2.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/AvatarBadge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/DropdownMenu.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useFullscreen.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n      if (isUser) {\n        if (!usersById[id]) {\n          return undefined;\n        }\n        return { user: usersById[id] };\n      } else {\n        if (!chatsById[id]) {\n          return undefined;\n        }\n        return { chat: chatsById[id] };\n      }\n    }).filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n\n          return (\n            <Avatar\n              key={p.user ? p.user.id : p.chat.id}\n              chat={p.chat}\n              user={p.user}\n            />\n          );\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n// eslint-disable-next-line max-len\nconst TRANSCRIBE_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 24\" class=\"loading-svg\"><rect class=\"loading-rect\" fill=\"transparent\" width=\"32\" height=\"24\" stroke-width=\"3\" stroke-linejoin=\"round\" rx=\"6\" ry=\"6\" stroke=\"var(--accent-color)\" stroke-dashoffset=\"1\" stroke-dasharray=\"32,68\"></rect></svg>';\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const transcribeSvgMemo = useMemo(() => (\n    <div dangerouslySetInnerHTML={{ __html: TRANSCRIBE_SVG }} />\n  ), []);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          transcribeSvgMemo,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  svgMemo?: React.ReactNode,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && svgMemo}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, activeChatUsernames, topicId, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import React, {\n  memo, useRef, useState, useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  topic,\n  messagesCount,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, {\n  useRef, useEffect, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  currentUserId?: string;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  currentUserId,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, chat.id === currentUserId);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PickerSelectedItem));\n","import React, { useEffect, memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChatMessages,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon ${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, memo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic, ApiPhoto,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\n\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? (lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleClickPremium = useLastCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    messageId: message.id,\n    isSimple,\n    isProtected,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './MuteChatModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default memo(MuteChatModalAsync);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport ChatBadge from './ChatBadge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatBadge from './ChatBadge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isSelectedForum) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport { getChatTitle } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport Badge from '../../ui/Badge';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n        'padding-top-56px',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_APP } from '../../../util/windowEnvironment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n  activeChatFolder?: number;\n  allowAbsoluteHeader?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\nconst HEIGHT_HEADER_FIXED = 56;\nlet isScrolling: any;\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  allowAbsoluteHeader = false,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const firstScroll = useRef<any>(true);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n  const isExpandHeader = sessionStorage.getItem('isExpandHeader');\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-null/no-null\n    if (containerRef.current) {\n      setTimeout(() => {\n        if (folderType === 'archived') {\n          containerRef.current?.scrollTo({ top: 0 });\n        }\n      }, 500);\n    }\n  }, [containerRef, isExpandHeader, folderType]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n    /**\n     * TL - This function scroll the header whenever the chatList render.\n     */\n    setTimeout(() => {\n      if (containerRef.current && firstScroll.current && allowAbsoluteHeader) {\n        if (document.getElementById('tl-chat-folders')) {\n          document.getElementById('tl-chat-folders').style.paddingTop = `${window.tlPaddingTop}px`;\n        } else {\n          document.getElementById('custom-id-chat-list-inf-scroll').style.paddingTop = `${window.tlPaddingTop}px`;\n        }\n        document.getElementById('left-main-header').style.paddingTop = `${window.tlPaddingTop}px`;\n        setTimeout(() => {\n          containerRef.current.scrollTo({ top: HEIGHT_HEADER_FIXED });\n          setTimeout(() => {\n            firstScroll.current = false;\n          }, 200);\n        }, 0);\n      }\n    }, 0);\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX\n        + (allowAbsoluteHeader ? HEIGHT_HEADER_FIXED : 0);\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  /**\n   * TL - Custom functions for chatList scroll\n   * Description: This function is used to trigger the header show or hide with an animation\n   */\n  function handleScroll(event: React.UIEvent<HTMLDivElement, UIEvent>) {\n    if (firstScroll.current) return;\n    clearTimeout(isScrolling);\n    const doc = document.documentElement;\n    const scrollTop = event.currentTarget.scrollTop;\n    const scrollPercentRounded = Math.min(\n      100,\n      Math.round((scrollTop / HEIGHT_HEADER_FIXED) * 100),\n    );\n    const opacity = 1 - scrollPercentRounded * 0.01;\n    const opacityOffset = scrollTop >= HEIGHT_HEADER_FIXED + 10 || scrollPercentRounded === 100\n      ? 0\n      : opacity;\n\n    const translatePixel = scrollTop >= HEIGHT_HEADER_FIXED || scrollPercentRounded === 100 ? 0 : Math.min(\n      HEIGHT_HEADER_FIXED,\n      ((100 - scrollPercentRounded) * HEIGHT_HEADER_FIXED) / 100,\n    );\n    const tabFolderTranslatePixel = translatePixel;\n    doc.style.setProperty('--disable-tab-click', 'none');\n    isScrolling = setTimeout(() => {\n      doc.style.setProperty('--disable-tab-click', 'auto');\n    }, 150);\n    sessionStorage.setItem('isExpandHeader', opacityOffset === 1 ? 'true' : 'false');\n    doc.style.setProperty('--header-translate', `-${scrollPercentRounded}%`);\n    doc.style.setProperty(\n      '--tab-folder-translate',\n      `${tabFolderTranslatePixel}px`,\n    );\n    doc.style.setProperty('--show-header-opacity', `${opacityOffset}`);\n  }\n\n  return (\n    <InfiniteScroll\n      id=\"custom-id-chat-list-inf-scroll\"\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight + HEIGHT_HEADER_FIXED}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n      // eslint-disable-next-line react/jsx-no-bind\n      onScroll={handleScroll}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ChatBadge from './ChatBadge';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel=\"Search in this chat\"\n            >\n              <i className=\"icon icon-search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { requestMutation, requestForcedReflow } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : 'composer',\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default memo(SymbolMenuAsync);\n","import React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useFlag from '../../../hooks/useFlag';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nfCRD3Y0nXzkML0bsjLH\",\"default\":\"QWzDb6x9al63G3nr9BGn\",\"alternate\":\"EgTekmCFBiBkvcvWELZw\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import React, {\n  useState, useRef, useCallback, useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport Menu from './Menu';\nimport Button from './Button';\n\nimport './DropdownMenu.scss';\n\ntype OwnProps = {\n  className?: string;\n  trigger?: FC<{ onTrigger: () => void; isOpen?: boolean }>;\n  transformOriginX?: number;\n  transformOriginY?: number;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  footer?: string;\n  forceOpen?: boolean;\n  onOpen?: NoneToVoidFunction;\n  onClose?: NoneToVoidFunction;\n  onHide?: NoneToVoidFunction;\n  onTransitionEnd?: NoneToVoidFunction;\n  onMouseEnterBackdrop?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  children: React.ReactNode;\n};\n\nconst DropdownMenu: FC<OwnProps> = ({\n  trigger,\n  className,\n  children,\n  transformOriginX,\n  transformOriginY,\n  positionX = 'left',\n  positionY = 'top',\n  footer,\n  forceOpen,\n  onOpen,\n  onClose,\n  onTransitionEnd,\n  onMouseEnterBackdrop,\n  onHide,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleIsOpen = () => {\n    setIsOpen(!isOpen);\n    if (isOpen) {\n      onClose?.();\n    } else {\n      onOpen?.();\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<any>) => {\n    const menu = menuRef.current;\n\n    if (!isOpen || e.keyCode !== 40 || !menu) {\n      return;\n    }\n\n    const focusedElement = document.activeElement;\n    const elementChildren = Array.from(menu.children);\n\n    if (!focusedElement || elementChildren.indexOf(focusedElement) === -1) {\n      (elementChildren[0] as HTMLElement).focus();\n    }\n  };\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n    onClose?.();\n  }, [onClose]);\n\n  const triggerComponent: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    if (trigger) return trigger;\n\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [trigger]);\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`DropdownMenu ${className || ''}`}\n      onKeyDown={handleKeyDown}\n      onTransitionEnd={onTransitionEnd}\n    >\n      {triggerComponent({ onTrigger: toggleIsOpen, isOpen })}\n\n      <Menu\n        ref={menuRef}\n        containerRef={dropdownRef}\n        isOpen={isOpen || Boolean(forceOpen)}\n        className={className || ''}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        footer={footer}\n        autoClose\n        onClose={handleClose}\n        shouldSkipTransition={forceOpen}\n        onCloseAnimationEnd={onHide}\n        onMouseEnterBackdrop={onMouseEnterBackdrop}\n      >\n        {children}\n      </Menu>\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useLayoutEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const svg = container.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [containerRef, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default memo(ResponsiveHoverButton);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\n/**\n * TL - Add gray color or loading indicator\n */\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow' | 'gray';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  useRef,\n  memo,\n  useEffect,\n  useLayoutEffect,\n} from '../../lib/teact/teact';\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { MouseButton } from '../../util/windowEnvironment';\nimport forceReflow from '../../util/forceReflow';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport MenuSeparator from './MenuSeparator';\nimport './Tab.scss';\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      id=\"tl-chat-folders\"\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Signal } from '../util/signals';\nimport type { Scheduler } from '../util/schedulers';\n\nimport useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\nimport useLastCallback from './useLastCallback';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport { IS_ELECTRON, SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useLayoutEffect, useState, useEffect } from '../lib/teact/teact';\nimport { IS_IOS } from '../util/windowEnvironment';\n\nimport { ElectronEvent } from '../types/electron';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, setIsPlayed: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS)) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const video = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      video!.controls = isEnabled;\n    };\n    const listenerEnter = () => { setIsFullscreen(true); };\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      setIsPlayed(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (video) {\n      video.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      video.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (video) {\n        video.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        video.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(video: HTMLVideoElement) {\n  if (video.requestFullscreen) {\n    video.requestFullscreen();\n  } else if (video.webkitRequestFullscreen) {\n    video.webkitRequestFullscreen();\n  } else if (video.webkitEnterFullscreen) {\n    video.webkitEnterFullscreen();\n  } else if (video.mozRequestFullScreen) {\n    video.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\n\nimport useLastCallback from './useLastCallback';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_DOWNLOADED = 'update-downloaded',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n}\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string) => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import { getGlobal } from '../global';\n\nimport { animate } from './animation';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './windowEnvironment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './windowEnvironment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","filter","_","i","map","_ref2","isUser","user","useEffect","subscribed","React","buildClassName","onClick","p","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","size","style","buildStyle","src","styles","onLoad","AnimatedIcon","noTransition","renderWaveform","canvas","spikes","progress","peak","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","Math","max","x","y","radius","beginPath","moveTo","arcTo","closePath","roundedRectangle","fill","decodeWaveform","encoded5bit","bitsCount","valuesCount","floor","result","Array","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","interpolateArray","data","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","val","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","getSeeklineSpikeAmounts","isMobile","withAvatar","MIN_SPIKES","matches","MAX_SPIKES","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","canvasRef","waveform","min","durationFactor","spikesCount","Uint8Array","useLayoutEffect","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","captureEvents","onCapture","onRelease","onDrag","transcribeSvgMemo","dangerouslySetInnerHTML","__html","renderFirstLine","title","fileName","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","svgMemo","onClickTranscribe","draggable","renderVoice","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isSavedMessages","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","File","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","alt","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","FullNameTitle","peer","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","Transition","activeKey","DEFAULT_TEXT","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","isLoading","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","inputRef","shouldMinimize","setTimeout","requestMutation","focus","lockedSelectedIds","unlockedSelectedIds","MEMO_EMPTY_ARRAY","unlockedIds","includes","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","slice","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","onChange","placeholder","InfiniteScroll","items","renderCheckbox","Checkbox","disabled","allowDisabledClick","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noStatusOrTyping","adminMember","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","isPrivate","mediaViewer","currentTopicId","userFullInfo","chatFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","usePrevious","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","querySelector","selectorToPreventScroll","onSwipe","IS_TOUCH_ENV","direction","SwipeDirection","letterClassName","noLoopLimit","renderPhotoTabs","renderPhoto","type","onEmojiStatusClick","ProfilePhoto","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","CustomEmoji","documentId","observeIntersectionForPlaying","blankUrl","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","target","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","contentForStatusMenuContext","arg","noPlay","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isCurrentUserPremium","noShowPremium","sharedCanvasRef","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","isPremium","stickerSetInfo","isLocked","shouldPlay","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","preventDefault","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","emojiStatus","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","withSharedAnimation","noFastClick","Menu","autoClose","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","action","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","isForumPanelActive","selectIsForumPanelOpen","ChatBadge","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","onDragEnter","openChat","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","forceOnHeavyAnimation","shouldReplaceHistory","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withPortalForMenu","AvatarBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","archiveUnreadCount","useFolderManagerForUnreadCounters","chatsCount","previewItems","arr","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","buttonClassName","Badge","RESERVED_HOTKEYS","HEIGHT_HEADER_FIXED","isScrolling","isForumPanelOpen","canDisplayArchive","onLeftColumnContentChange","allowAbsoluteHeader","openNextChat","shouldIgnoreDragRef","firstScroll","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","isExpandHeader","sessionStorage","getItem","CHAT_LIST_SLICE","scrollTo","useHotkeys","targetIndexDelta","IS_APP","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","isArchiveInList","shift","position","Number","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","onScroll","event","clearTimeout","doc","documentElement","scrollTop","scrollPercentRounded","opacityOffset","tabFolderTranslatePixel","setProperty","setItem","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","getElementById","paddingTop","tlPaddingTop","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","hash","captureEscKeyListener","requestNextMutation","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","withForumActions","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","noForumTopicPanel","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","observeIntersectionForLoading","inChatList","isSpoiler","renderSummary","opacity","classList","remove","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","reduce","prevOrderById","prevChatId","mapValues","order","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","selectIsInSelectMode","noMenu","bot","selectBot","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","requestMeasure","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","CustomEmojiTooltip","CustomSend","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","DropTarget","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","_defineProperty","this","createElement","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","settings","byKey","replyingToId","selectReplyingToId","isSelectModeActive","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","captionLimit","isAttachmentModalInput","editableInputId","isReady","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_IOS","IS_ANDROID","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","ids","player","get","delete","synchronizeElements","playerIdsToClear","keys","querySelectorAll","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","hexToRgb","lottie","ensureRLottie","init","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","useEffectWithPrevDeps","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","scrollHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","html","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","rangeCount","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","useDerivedState","contentEditable","role","tabIndex","textContent","IS_EMOJI_SUPPORTED","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","canSendGifs","canSendStickers","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","isAttachmentModal","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","isSymbolMenuForced","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","query","handleSymbolMenuOpen","messageInput","EDITABLE_INPUT_MODAL_CSS_SELECTOR","EDITABLE_INPUT_CSS_SELECTOR","activeElement","ResponsiveHoverButton","onActivate","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","inputId","parentNode","iterations","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","htmlBeforeSelection","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","default","uncompressEmoji","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","insertMention","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","isDisabled","timeoutRef","useSyncEffect","isAlternateColor","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","trigger","children","footer","forceOpen","onOpen","onMouseEnterBackdrop","dropdownRef","setIsOpen","triggerComponent","onTrigger","menu","keyCode","focusedElement","elementChildren","toggleIsOpen","shouldSkipTransition","DEFAULT_DURATION","onDismiss","actionText","actions","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","hidden","loadingOption","Radio","step","renderValue","mainClassName","trackWidth","index","openTimeout","isFirstTimeActivation","buttonProps","isMouseInside","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","noCloseTransition","shouldAnimateFirstRender","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","variant","forceAspectRatio","inline","classNames","onCheck","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","tabEl","prevTabEl","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","MouseButton","body","MenuSeparator","SCROLL_DURATION","tabs","areFolders","activeTab","big","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","animateHorizontalScroll","tab","_tab$id","Tab","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","error","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","useDebouncedResolver","noLast","useDebouncedSignal","debouncedResolver","makeMediaHandlers","controllerRef","mediaHandlers","proxy","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","registerMediaSession","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","_dependencies","isAsync","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","replyOriginForId","loadMessage","loadMessageThrottled","throttled","throttle","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","setIsPlayed","isFullscreen","setIsFullscreen","listener","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","fullscreenProp","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","deltaY","passive","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","isConnected","store","useUniqueId","idRef","generateIdFor","mediaHash","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","setLoadProgress","startedAtRef","handleProgress","spentTime","closeTimeout","useMouseInside","menuCloseTimeout","markMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","createSignal","effect","isFirstRun","dependency","isSignal","subscribe","useEffectOnce","cleanupEffect","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","mul_sum","shg_sum","vmin","vmax","putImageData","stopById","containerWidth","scrollId","path","remainingPath","isStopped","random","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","animateScroll","_len","args","_key","mutate","createMutateFunction","shouldReturnMutationFn","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","elementTop","offsetHeight","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollFrom","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","newScrollTop","isAnimatingScroll","offset","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","currentId","queue","chatAudio","getMessageKey","pop","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","originalEvent","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","windowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","touches","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","parseInt","rgb2hex","p0","rgb2hsb","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","preloadImage","naturalHeight","naturalWidth","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","console","warn","setActionHandler","err","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","ENTITY_CLASS_BY_NODE_NAME","INS","S","STRIKE","PRE","BLOCKQUOTE","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parseMarkdown","parseMarkdownLinks","fixImageContent","innerText","trimShift","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","getEntityDataFromNode","hasChildNodes","parsedHtml","RE_LINK_TEMPLATE","rawText","nodeName","getEntityTypeFromNode","rawIndex","language","extractorEl","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","caretRange","setEnd","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","openSystemFilesDialog","accept","callback","noMultiple","removeAttribute","onchange","click"],"sourceRoot":""}